!function(r){function n(e){if(t[e])return t[e].exports;var o=t[e]={i:e,l:!1,exports:{}};return r[e].call(o.exports,o,o.exports,n),o.l=!0,o.exports}var t={};n.m=r,n.c=t,n.d=function(r,t,e){n.o(r,t)||Object.defineProperty(r,t,{configurable:!1,enumerable:!0,get:e})},n.n=function(r){var t=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(t,"a",t),t},n.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},n.p="",n(n.s=0)}([function(r,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e=t(2);t.n(e);t(1)("body")},function(r,n,t){var e;!function(n,t){"use strict";"object"==typeof r&&"object"==typeof r.exports?r.exports=n.document?t(n,!0):function(r){if(!r.document)throw new Error("jQuery requires a window with a document");return t(r)}:t(n)}("undefined"!=typeof window?window:this,function(t,o){"use strict";function i(r,n){var t=(n=n||K).createElement("script");t.text=r,n.head.appendChild(t).parentNode.removeChild(t)}function a(r){var n=!!r&&"length"in r&&r.length,t=pr.type(r);return"function"!==t&&!pr.isWindow(r)&&("array"===t||0===n||"number"==typeof n&&n>0&&n-1 in r)}function l(r,n){return r.nodeName&&r.nodeName.toLowerCase()===n.toLowerCase()}function d(r,n,t){return pr.isFunction(n)?pr.grep(r,function(r,e){return!!n.call(r,e,r)!==t}):n.nodeType?pr.grep(r,function(r){return r===n!==t}):"string"!=typeof n?pr.grep(r,function(r){return er.call(n,r)>-1!==t}):yr.test(n)?pr.filter(n,r,t):(n=pr.filter(n,r),pr.grep(r,function(r){return er.call(n,r)>-1!==t&&1===r.nodeType}))}function s(r,n){for(;(r=r[n])&&1!==r.nodeType;);return r}function p(r){return r}function c(r){throw r}function m(r,n,t,e){var o;try{r&&pr.isFunction(o=r.promise)?o.call(r).done(n).fail(t):r&&pr.isFunction(o=r.then)?o.call(r,n,t):n.apply(void 0,[r].slice(e))}catch(r){t.apply(void 0,[r])}}function f(){K.removeEventListener("DOMContentLoaded",f),t.removeEventListener("load",f),pr.ready()}function u(){this.expando=pr.expando+u.uid++}function g(r,n,t){var e;if(void 0===t&&1===r.nodeType)if(e="data-"+n.replace(zr,"-$&").toLowerCase(),"string"==typeof(t=r.getAttribute(e))){try{t=function(r){return"true"===r||"false"!==r&&("null"===r?null:r===+r+""?+r:qr.test(r)?JSON.parse(r):r)}(t)}catch(r){}Lr.set(r,n,t)}else t=void 0;return t}function b(r,n,t,e){var o,i=1,a=20,l=e?function(){return e.cur()}:function(){return pr.css(r,n,"")},d=l(),s=t&&t[3]||(pr.cssNumber[n]?"":"px"),p=(pr.cssNumber[n]||"px"!==s&&+d)&&Hr.exec(pr.css(r,n));if(p&&p[3]!==s){s=s||p[3],t=t||[],p=+d||1;do{p/=i=i||".5",pr.style(r,n,p+s)}while(i!==(i=l()/d)&&1!==i&&--a)}return t&&(p=+p||+d||0,o=t[1]?p+(t[1]+1)*t[2]:+t[2],e&&(e.unit=s,e.start=p,e.end=o)),o}function h(r){var n,t=r.ownerDocument,e=r.nodeName,o=Ir[e];return o||(n=t.body.appendChild(t.createElement(e)),o=pr.css(n,"display"),n.parentNode.removeChild(n),"none"===o&&(o="block"),Ir[e]=o,o)}function x(r,n){for(var t,e,o=[],i=0,a=r.length;i<a;i++)(e=r[i]).style&&(t=e.style.display,n?("none"===t&&(o[i]=Dr.get(e,"display")||null,o[i]||(e.style.display="")),""===e.style.display&&Mr(e)&&(o[i]=h(e))):"none"!==t&&(o[i]="none",Dr.set(e,"display",t)));for(i=0;i<a;i++)null!=o[i]&&(r[i].style.display=o[i]);return r}function v(r,n){var t;return t=void 0!==r.getElementsByTagName?r.getElementsByTagName(n||"*"):void 0!==r.querySelectorAll?r.querySelectorAll(n||"*"):[],void 0===n||n&&l(r,n)?pr.merge([r],t):t}function y(r,n){for(var t=0,e=r.length;t<e;t++)Dr.set(r[t],"globalEval",!n||Dr.get(n[t],"globalEval"))}function w(r,n,t,e,o){for(var i,a,l,d,s,p,c=n.createDocumentFragment(),m=[],f=0,u=r.length;f<u;f++)if((i=r[f])||0===i)if("object"===pr.type(i))pr.merge(m,i.nodeType?[i]:i);else if(Ur.test(i)){for(a=a||c.appendChild(n.createElement("div")),l=(Br.exec(i)||["",""])[1].toLowerCase(),d=$r[l]||$r._default,a.innerHTML=d[1]+pr.htmlPrefilter(i)+d[2],p=d[0];p--;)a=a.lastChild;pr.merge(m,a.childNodes),(a=c.firstChild).textContent=""}else m.push(n.createTextNode(i));for(c.textContent="",f=0;i=m[f++];)if(e&&pr.inArray(i,e)>-1)o&&o.push(i);else if(s=pr.contains(i.ownerDocument,i),a=v(c.appendChild(i),"script"),s&&y(a),t)for(p=0;i=a[p++];)Wr.test(i.type||"")&&t.push(i);return c}function k(){return!0}function C(){return!1}function T(){try{return K.activeElement}catch(r){}}function j(r,n,t,e,o,i){var a,l;if("object"==typeof n){"string"!=typeof t&&(e=e||t,t=void 0);for(l in n)j(r,l,t,e,n[l],i);return r}if(null==e&&null==o?(o=t,e=t=void 0):null==o&&("string"==typeof t?(o=e,e=void 0):(o=e,e=t,t=void 0)),!1===o)o=C;else if(!o)return r;return 1===i&&(a=o,(o=function(r){return pr().off(r),a.apply(this,arguments)}).guid=a.guid||(a.guid=pr.guid++)),r.each(function(){pr.event.add(this,n,o,e,t)})}function E(r,n){return l(r,"table")&&l(11!==n.nodeType?n:n.firstChild,"tr")?pr(">tbody",r)[0]||r:r}function S(r){return r.type=(null!==r.getAttribute("type"))+"/"+r.type,r}function A(r){var n=Kr.exec(r.type);return n?r.type=n[1]:r.removeAttribute("type"),r}function N(r,n){var t,e,o,i,a,l,d,s;if(1===n.nodeType){if(Dr.hasData(r)&&(i=Dr.access(r),a=Dr.set(n,i),s=i.events)){delete a.handle,a.events={};for(o in s)for(t=0,e=s[o].length;t<e;t++)pr.event.add(n,o,s[o][t])}Lr.hasData(r)&&(l=Lr.access(r),d=pr.extend({},l),Lr.set(n,d))}}function D(r,n){var t=n.nodeName.toLowerCase();"input"===t&&Pr.test(r.type)?n.checked=r.checked:"input"!==t&&"textarea"!==t||(n.defaultValue=r.defaultValue)}function L(r,n,t,e){n=nr.apply([],n);var o,a,l,d,s,p,c=0,m=r.length,f=m-1,u=n[0],g=pr.isFunction(u);if(g||m>1&&"string"==typeof u&&!sr.checkClone&&Qr.test(u))return r.each(function(o){var i=r.eq(o);g&&(n[0]=u.call(this,o,i.html())),L(i,n,t,e)});if(m&&(o=w(n,r[0].ownerDocument,!1,r,e),a=o.firstChild,1===o.childNodes.length&&(o=a),a||e)){for(d=(l=pr.map(v(o,"script"),S)).length;c<m;c++)s=o,c!==f&&(s=pr.clone(s,!0,!0),d&&pr.merge(l,v(s,"script"))),t.call(r[c],s,c);if(d)for(p=l[l.length-1].ownerDocument,pr.map(l,A),c=0;c<d;c++)s=l[c],Wr.test(s.type||"")&&!Dr.access(s,"globalEval")&&pr.contains(p,s)&&(s.src?pr._evalUrl&&pr._evalUrl(s.src):i(s.textContent.replace(Zr,""),p))}return r}function q(r,n,t){for(var e,o=n?pr.filter(n,r):r,i=0;null!=(e=o[i]);i++)t||1!==e.nodeType||pr.cleanData(v(e)),e.parentNode&&(t&&pr.contains(e.ownerDocument,e)&&y(v(e,"script")),e.parentNode.removeChild(e));return r}function z(r,n,t){var e,o,i,a,l=r.style;return(t=t||tn(r))&&(""!==(a=t.getPropertyValue(n)||t[n])||pr.contains(r.ownerDocument,r)||(a=pr.style(r,n)),!sr.pixelMarginRight()&&nn.test(a)&&rn.test(n)&&(e=l.width,o=l.minWidth,i=l.maxWidth,l.minWidth=l.maxWidth=l.width=a,a=t.width,l.width=e,l.minWidth=o,l.maxWidth=i)),void 0!==a?a+"":a}function O(r,n){return{get:function(){if(!r())return(this.get=n).apply(this,arguments);delete this.get}}}function H(r){var n=pr.cssProps[r];return n||(n=pr.cssProps[r]=function(r){if(r in sn)return r;for(var n=r[0].toUpperCase()+r.slice(1),t=dn.length;t--;)if((r=dn[t]+n)in sn)return r}(r)||r),n}function F(r,n,t){var e=Hr.exec(n);return e?Math.max(0,e[2]-(t||0))+(e[3]||"px"):n}function M(r,n,t,e,o){var i,a=0;for(i=t===(e?"border":"content")?4:"width"===n?1:0;i<4;i+=2)"margin"===t&&(a+=pr.css(r,t+Fr[i],!0,o)),e?("content"===t&&(a-=pr.css(r,"padding"+Fr[i],!0,o)),"margin"!==t&&(a-=pr.css(r,"border"+Fr[i]+"Width",!0,o))):(a+=pr.css(r,"padding"+Fr[i],!0,o),"padding"!==t&&(a+=pr.css(r,"border"+Fr[i]+"Width",!0,o)));return a}function R(r,n,t){var e,o=tn(r),i=z(r,n,o),a="border-box"===pr.css(r,"boxSizing",!1,o);return nn.test(i)?i:(e=a&&(sr.boxSizingReliable()||i===r.style[n]),"auto"===i&&(i=r["offset"+n[0].toUpperCase()+n.slice(1)]),(i=parseFloat(i)||0)+M(r,n,t||(a?"border":"content"),e,o)+"px")}function I(r,n,t,e,o){return new I.prototype.init(r,n,t,e,o)}function P(){cn&&(!1===K.hidden&&t.requestAnimationFrame?t.requestAnimationFrame(P):t.setTimeout(P,pr.fx.interval),pr.fx.tick())}function B(){return t.setTimeout(function(){pn=void 0}),pn=pr.now()}function W(r,n){var t,e=0,o={height:r};for(n=n?1:0;e<4;e+=2-n)o["margin"+(t=Fr[e])]=o["padding"+t]=r;return n&&(o.opacity=o.width=r),o}function $(r,n,t){for(var e,o=(U.tweeners[n]||[]).concat(U.tweeners["*"]),i=0,a=o.length;i<a;i++)if(e=o[i].call(t,n,r))return e}function U(r,n,t){var e,o,i=0,a=U.prefilters.length,l=pr.Deferred().always(function(){delete d.elem}),d=function(){if(o)return!1;for(var n=pn||B(),t=Math.max(0,s.startTime+s.duration-n),e=1-(t/s.duration||0),i=0,a=s.tweens.length;i<a;i++)s.tweens[i].run(e);return l.notifyWith(r,[s,e,t]),e<1&&a?t:(a||l.notifyWith(r,[s,1,0]),l.resolveWith(r,[s]),!1)},s=l.promise({elem:r,props:pr.extend({},n),opts:pr.extend(!0,{specialEasing:{},easing:pr.easing._default},t),originalProperties:n,originalOptions:t,startTime:pn||B(),duration:t.duration,tweens:[],createTween:function(n,t){var e=pr.Tween(r,s.opts,n,t,s.opts.specialEasing[n]||s.opts.easing);return s.tweens.push(e),e},stop:function(n){var t=0,e=n?s.tweens.length:0;if(o)return this;for(o=!0;t<e;t++)s.tweens[t].run(1);return n?(l.notifyWith(r,[s,1,0]),l.resolveWith(r,[s,n])):l.rejectWith(r,[s,n]),this}}),p=s.props;for(!function(r,n){var t,e,o,i,a;for(t in r)if(e=pr.camelCase(t),o=n[e],i=r[t],Array.isArray(i)&&(o=i[1],i=r[t]=i[0]),t!==e&&(r[e]=i,delete r[t]),(a=pr.cssHooks[e])&&"expand"in a){i=a.expand(i),delete r[e];for(t in i)t in r||(r[t]=i[t],n[t]=o)}else n[e]=o}(p,s.opts.specialEasing);i<a;i++)if(e=U.prefilters[i].call(s,r,p,s.opts))return pr.isFunction(e.stop)&&(pr._queueHooks(s.elem,s.opts.queue).stop=pr.proxy(e.stop,e)),e;return pr.map(p,$,s),pr.isFunction(s.opts.start)&&s.opts.start.call(r,s),s.progress(s.opts.progress).done(s.opts.done,s.opts.complete).fail(s.opts.fail).always(s.opts.always),pr.fx.timer(pr.extend(d,{elem:r,anim:s,queue:s.opts.queue})),s}function _(r){return(r.match(jr)||[]).join(" ")}function X(r){return r.getAttribute&&r.getAttribute("class")||""}function V(r,n,t,e){var o;if(Array.isArray(n))pr.each(n,function(n,o){t||Cn.test(r)?e(r,o):V(r+"["+("object"==typeof o&&null!=o?n:"")+"]",o,t,e)});else if(t||"object"!==pr.type(n))e(r,n);else for(o in n)V(r+"["+o+"]",n[o],t,e)}function G(r){return function(n,t){"string"!=typeof n&&(t=n,n="*");var e,o=0,i=n.toLowerCase().match(jr)||[];if(pr.isFunction(t))for(;e=i[o++];)"+"===e[0]?(e=e.slice(1)||"*",(r[e]=r[e]||[]).unshift(t)):(r[e]=r[e]||[]).push(t)}}function Y(r,n,t,e){function o(l){var d;return i[l]=!0,pr.each(r[l]||[],function(r,l){var s=l(n,t,e);return"string"!=typeof s||a||i[s]?a?!(d=s):void 0:(n.dataTypes.unshift(s),o(s),!1)}),d}var i={},a=r===On;return o(n.dataTypes[0])||!i["*"]&&o("*")}function J(r,n){var t,e,o=pr.ajaxSettings.flatOptions||{};for(t in n)void 0!==n[t]&&((o[t]?r:e||(e={}))[t]=n[t]);return e&&pr.extend(!0,r,e),r}var Q=[],K=t.document,Z=Object.getPrototypeOf,rr=Q.slice,nr=Q.concat,tr=Q.push,er=Q.indexOf,or={},ir=or.toString,ar=or.hasOwnProperty,lr=ar.toString,dr=lr.call(Object),sr={},pr=function(r,n){return new pr.fn.init(r,n)},cr=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,mr=/^-ms-/,fr=/-([a-z])/g,ur=function(r,n){return n.toUpperCase()};pr.fn=pr.prototype={jquery:"3.2.1",constructor:pr,length:0,toArray:function(){return rr.call(this)},get:function(r){return null==r?rr.call(this):r<0?this[r+this.length]:this[r]},pushStack:function(r){var n=pr.merge(this.constructor(),r);return n.prevObject=this,n},each:function(r){return pr.each(this,r)},map:function(r){return this.pushStack(pr.map(this,function(n,t){return r.call(n,t,n)}))},slice:function(){return this.pushStack(rr.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(r){var n=this.length,t=+r+(r<0?n:0);return this.pushStack(t>=0&&t<n?[this[t]]:[])},end:function(){return this.prevObject||this.constructor()},push:tr,sort:Q.sort,splice:Q.splice},pr.extend=pr.fn.extend=function(){var r,n,t,e,o,i,a=arguments[0]||{},l=1,d=arguments.length,s=!1;for("boolean"==typeof a&&(s=a,a=arguments[l]||{},l++),"object"==typeof a||pr.isFunction(a)||(a={}),l===d&&(a=this,l--);l<d;l++)if(null!=(r=arguments[l]))for(n in r)t=a[n],a!==(e=r[n])&&(s&&e&&(pr.isPlainObject(e)||(o=Array.isArray(e)))?(o?(o=!1,i=t&&Array.isArray(t)?t:[]):i=t&&pr.isPlainObject(t)?t:{},a[n]=pr.extend(s,i,e)):void 0!==e&&(a[n]=e));return a},pr.extend({expando:"jQuery"+("3.2.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(r){throw new Error(r)},noop:function(){},isFunction:function(r){return"function"===pr.type(r)},isWindow:function(r){return null!=r&&r===r.window},isNumeric:function(r){var n=pr.type(r);return("number"===n||"string"===n)&&!isNaN(r-parseFloat(r))},isPlainObject:function(r){var n,t;return!(!r||"[object Object]"!==ir.call(r))&&(!(n=Z(r))||"function"==typeof(t=ar.call(n,"constructor")&&n.constructor)&&lr.call(t)===dr)},isEmptyObject:function(r){var n;for(n in r)return!1;return!0},type:function(r){return null==r?r+"":"object"==typeof r||"function"==typeof r?or[ir.call(r)]||"object":typeof r},globalEval:function(r){i(r)},camelCase:function(r){return r.replace(mr,"ms-").replace(fr,ur)},each:function(r,n){var t,e=0;if(a(r))for(t=r.length;e<t&&!1!==n.call(r[e],e,r[e]);e++);else for(e in r)if(!1===n.call(r[e],e,r[e]))break;return r},trim:function(r){return null==r?"":(r+"").replace(cr,"")},makeArray:function(r,n){var t=n||[];return null!=r&&(a(Object(r))?pr.merge(t,"string"==typeof r?[r]:r):tr.call(t,r)),t},inArray:function(r,n,t){return null==n?-1:er.call(n,r,t)},merge:function(r,n){for(var t=+n.length,e=0,o=r.length;e<t;e++)r[o++]=n[e];return r.length=o,r},grep:function(r,n,t){for(var e=[],o=0,i=r.length,a=!t;o<i;o++)!n(r[o],o)!==a&&e.push(r[o]);return e},map:function(r,n,t){var e,o,i=0,l=[];if(a(r))for(e=r.length;i<e;i++)null!=(o=n(r[i],i,t))&&l.push(o);else for(i in r)null!=(o=n(r[i],i,t))&&l.push(o);return nr.apply([],l)},guid:1,proxy:function(r,n){var t,e,o;if("string"==typeof n&&(t=r[n],n=r,r=t),pr.isFunction(r))return e=rr.call(arguments,2),o=function(){return r.apply(n||this,e.concat(rr.call(arguments)))},o.guid=r.guid=r.guid||pr.guid++,o},now:Date.now,support:sr}),"function"==typeof Symbol&&(pr.fn[Symbol.iterator]=Q[Symbol.iterator]),pr.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(r,n){or["[object "+n+"]"]=n.toLowerCase()});var gr=function(r){function n(r,n,t,e){var o,i,a,l,d,s,p,m=n&&n.ownerDocument,u=n?n.nodeType:9;if(t=t||[],"string"!=typeof r||!r||1!==u&&9!==u&&11!==u)return t;if(!e&&((n?n.ownerDocument||n:I)!==L&&D(n),n=n||L,z)){if(11!==u&&(d=gr.exec(r)))if(o=d[1]){if(9===u){if(!(a=n.getElementById(o)))return t;if(a.id===o)return t.push(a),t}else if(m&&(a=m.getElementById(o))&&M(n,a)&&a.id===o)return t.push(a),t}else{if(d[2])return J.apply(t,n.getElementsByTagName(r)),t;if((o=d[3])&&y.getElementsByClassName&&n.getElementsByClassName)return J.apply(t,n.getElementsByClassName(o)),t}if(y.qsa&&!U[r+" "]&&(!O||!O.test(r))){if(1!==u)m=n,p=r;else if("object"!==n.nodeName.toLowerCase()){for((l=n.getAttribute("id"))?l=l.replace(vr,yr):n.setAttribute("id",l=R),i=(s=T(r)).length;i--;)s[i]="#"+l+" "+f(s[i]);p=s.join(","),m=br.test(r)&&c(n.parentNode)||n}if(p)try{return J.apply(t,m.querySelectorAll(p)),t}catch(r){}finally{l===R&&n.removeAttribute("id")}}}return E(r.replace(ir,"$1"),n,t,e)}function t(){function r(t,e){return n.push(t+" ")>w.cacheLength&&delete r[n.shift()],r[t+" "]=e}var n=[];return r}function e(r){return r[R]=!0,r}function o(r){var n=L.createElement("fieldset");try{return!!r(n)}catch(r){return!1}finally{n.parentNode&&n.parentNode.removeChild(n),n=null}}function i(r,n){for(var t=r.split("|"),e=t.length;e--;)w.attrHandle[t[e]]=n}function a(r,n){var t=n&&r,e=t&&1===r.nodeType&&1===n.nodeType&&r.sourceIndex-n.sourceIndex;if(e)return e;if(t)for(;t=t.nextSibling;)if(t===n)return-1;return r?1:-1}function l(r){return function(n){return"input"===n.nodeName.toLowerCase()&&n.type===r}}function d(r){return function(n){var t=n.nodeName.toLowerCase();return("input"===t||"button"===t)&&n.type===r}}function s(r){return function(n){return"form"in n?n.parentNode&&!1===n.disabled?"label"in n?"label"in n.parentNode?n.parentNode.disabled===r:n.disabled===r:n.isDisabled===r||n.isDisabled!==!r&&kr(n)===r:n.disabled===r:"label"in n&&n.disabled===r}}function p(r){return e(function(n){return n=+n,e(function(t,e){for(var o,i=r([],t.length,n),a=i.length;a--;)t[o=i[a]]&&(t[o]=!(e[o]=t[o]))})})}function c(r){return r&&void 0!==r.getElementsByTagName&&r}function m(){}function f(r){for(var n=0,t=r.length,e="";n<t;n++)e+=r[n].value;return e}function u(r,n,t){var e=n.dir,o=n.next,i=o||e,a=t&&"parentNode"===i,l=B++;return n.first?function(n,t,o){for(;n=n[e];)if(1===n.nodeType||a)return r(n,t,o);return!1}:function(n,t,d){var s,p,c,m=[P,l];if(d){for(;n=n[e];)if((1===n.nodeType||a)&&r(n,t,d))return!0}else for(;n=n[e];)if(1===n.nodeType||a)if(c=n[R]||(n[R]={}),p=c[n.uniqueID]||(c[n.uniqueID]={}),o&&o===n.nodeName.toLowerCase())n=n[e]||n;else{if((s=p[i])&&s[0]===P&&s[1]===l)return m[2]=s[2];if(p[i]=m,m[2]=r(n,t,d))return!0}return!1}}function g(r){return r.length>1?function(n,t,e){for(var o=r.length;o--;)if(!r[o](n,t,e))return!1;return!0}:r[0]}function b(r,n,t,e,o){for(var i,a=[],l=0,d=r.length,s=null!=n;l<d;l++)(i=r[l])&&(t&&!t(i,e,o)||(a.push(i),s&&n.push(l)));return a}function h(r,t,o,i,a,l){return i&&!i[R]&&(i=h(i)),a&&!a[R]&&(a=h(a,l)),e(function(e,l,d,s){var p,c,m,f=[],u=[],g=l.length,h=e||function(r,t,e){for(var o=0,i=t.length;o<i;o++)n(r,t[o],e);return e}(t||"*",d.nodeType?[d]:d,[]),x=!r||!e&&t?h:b(h,f,r,d,s),v=o?a||(e?r:g||i)?[]:l:x;if(o&&o(x,v,d,s),i)for(p=b(v,u),i(p,[],d,s),c=p.length;c--;)(m=p[c])&&(v[u[c]]=!(x[u[c]]=m));if(e){if(a||r){if(a){for(p=[],c=v.length;c--;)(m=v[c])&&p.push(x[c]=m);a(null,v=[],p,s)}for(c=v.length;c--;)(m=v[c])&&(p=a?K(e,m):f[c])>-1&&(e[p]=!(l[p]=m))}}else v=b(v===l?v.splice(g,v.length):v),a?a(null,l,v,s):J.apply(l,v)})}function x(r){for(var n,t,e,o=r.length,i=w.relative[r[0].type],a=i||w.relative[" "],l=i?1:0,d=u(function(r){return r===n},a,!0),s=u(function(r){return K(n,r)>-1},a,!0),p=[function(r,t,e){var o=!i&&(e||t!==S)||((n=t).nodeType?d(r,t,e):s(r,t,e));return n=null,o}];l<o;l++)if(t=w.relative[r[l].type])p=[u(g(p),t)];else{if((t=w.filter[r[l].type].apply(null,r[l].matches))[R]){for(e=++l;e<o&&!w.relative[r[e].type];e++);return h(l>1&&g(p),l>1&&f(r.slice(0,l-1).concat({value:" "===r[l-2].type?"*":""})).replace(ir,"$1"),t,l<e&&x(r.slice(l,e)),e<o&&x(r=r.slice(e)),e<o&&f(r))}p.push(t)}return g(p)}var v,y,w,k,C,T,j,E,S,A,N,D,L,q,z,O,H,F,M,R="sizzle"+1*new Date,I=r.document,P=0,B=0,W=t(),$=t(),U=t(),_=function(r,n){return r===n&&(N=!0),0},X={}.hasOwnProperty,V=[],G=V.pop,Y=V.push,J=V.push,Q=V.slice,K=function(r,n){for(var t=0,e=r.length;t<e;t++)if(r[t]===n)return t;return-1},Z="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",rr="[\\x20\\t\\r\\n\\f]",nr="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",tr="\\["+rr+"*("+nr+")(?:"+rr+"*([*^$|!~]?=)"+rr+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+nr+"))|)"+rr+"*\\]",er=":("+nr+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+tr+")*)|.*)\\)|)",or=new RegExp(rr+"+","g"),ir=new RegExp("^"+rr+"+|((?:^|[^\\\\])(?:\\\\.)*)"+rr+"+$","g"),ar=new RegExp("^"+rr+"*,"+rr+"*"),lr=new RegExp("^"+rr+"*([>+~]|"+rr+")"+rr+"*"),dr=new RegExp("="+rr+"*([^\\]'\"]*?)"+rr+"*\\]","g"),sr=new RegExp(er),pr=new RegExp("^"+nr+"$"),cr={ID:new RegExp("^#("+nr+")"),CLASS:new RegExp("^\\.("+nr+")"),TAG:new RegExp("^("+nr+"|[*])"),ATTR:new RegExp("^"+tr),PSEUDO:new RegExp("^"+er),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+rr+"*(even|odd|(([+-]|)(\\d*)n|)"+rr+"*(?:([+-]|)"+rr+"*(\\d+)|))"+rr+"*\\)|)","i"),bool:new RegExp("^(?:"+Z+")$","i"),needsContext:new RegExp("^"+rr+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+rr+"*((?:-\\d)?\\d*)"+rr+"*\\)|)(?=[^-]|$)","i")},mr=/^(?:input|select|textarea|button)$/i,fr=/^h\d$/i,ur=/^[^{]+\{\s*\[native \w/,gr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,br=/[+~]/,hr=new RegExp("\\\\([\\da-f]{1,6}"+rr+"?|("+rr+")|.)","ig"),xr=function(r,n,t){var e="0x"+n-65536;return e!=e||t?n:e<0?String.fromCharCode(e+65536):String.fromCharCode(e>>10|55296,1023&e|56320)},vr=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,yr=function(r,n){return n?"\0"===r?"�":r.slice(0,-1)+"\\"+r.charCodeAt(r.length-1).toString(16)+" ":"\\"+r},wr=function(){D()},kr=u(function(r){return!0===r.disabled&&("form"in r||"label"in r)},{dir:"parentNode",next:"legend"});try{J.apply(V=Q.call(I.childNodes),I.childNodes),V[I.childNodes.length].nodeType}catch(r){J={apply:V.length?function(r,n){Y.apply(r,Q.call(n))}:function(r,n){for(var t=r.length,e=0;r[t++]=n[e++];);r.length=t-1}}}y=n.support={},C=n.isXML=function(r){var n=r&&(r.ownerDocument||r).documentElement;return!!n&&"HTML"!==n.nodeName},D=n.setDocument=function(r){var n,t,e=r?r.ownerDocument||r:I;return e!==L&&9===e.nodeType&&e.documentElement?(L=e,q=L.documentElement,z=!C(L),I!==L&&(t=L.defaultView)&&t.top!==t&&(t.addEventListener?t.addEventListener("unload",wr,!1):t.attachEvent&&t.attachEvent("onunload",wr)),y.attributes=o(function(r){return r.className="i",!r.getAttribute("className")}),y.getElementsByTagName=o(function(r){return r.appendChild(L.createComment("")),!r.getElementsByTagName("*").length}),y.getElementsByClassName=ur.test(L.getElementsByClassName),y.getById=o(function(r){return q.appendChild(r).id=R,!L.getElementsByName||!L.getElementsByName(R).length}),y.getById?(w.filter.ID=function(r){var n=r.replace(hr,xr);return function(r){return r.getAttribute("id")===n}},w.find.ID=function(r,n){if(void 0!==n.getElementById&&z){var t=n.getElementById(r);return t?[t]:[]}}):(w.filter.ID=function(r){var n=r.replace(hr,xr);return function(r){var t=void 0!==r.getAttributeNode&&r.getAttributeNode("id");return t&&t.value===n}},w.find.ID=function(r,n){if(void 0!==n.getElementById&&z){var t,e,o,i=n.getElementById(r);if(i){if((t=i.getAttributeNode("id"))&&t.value===r)return[i];for(o=n.getElementsByName(r),e=0;i=o[e++];)if((t=i.getAttributeNode("id"))&&t.value===r)return[i]}return[]}}),w.find.TAG=y.getElementsByTagName?function(r,n){return void 0!==n.getElementsByTagName?n.getElementsByTagName(r):y.qsa?n.querySelectorAll(r):void 0}:function(r,n){var t,e=[],o=0,i=n.getElementsByTagName(r);if("*"===r){for(;t=i[o++];)1===t.nodeType&&e.push(t);return e}return i},w.find.CLASS=y.getElementsByClassName&&function(r,n){if(void 0!==n.getElementsByClassName&&z)return n.getElementsByClassName(r)},H=[],O=[],(y.qsa=ur.test(L.querySelectorAll))&&(o(function(r){q.appendChild(r).innerHTML="<a id='"+R+"'></a><select id='"+R+"-\r\\' msallowcapture=''><option selected=''></option></select>",r.querySelectorAll("[msallowcapture^='']").length&&O.push("[*^$]="+rr+"*(?:''|\"\")"),r.querySelectorAll("[selected]").length||O.push("\\["+rr+"*(?:value|"+Z+")"),r.querySelectorAll("[id~="+R+"-]").length||O.push("~="),r.querySelectorAll(":checked").length||O.push(":checked"),r.querySelectorAll("a#"+R+"+*").length||O.push(".#.+[+~]")}),o(function(r){r.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var n=L.createElement("input");n.setAttribute("type","hidden"),r.appendChild(n).setAttribute("name","D"),r.querySelectorAll("[name=d]").length&&O.push("name"+rr+"*[*^$|!~]?="),2!==r.querySelectorAll(":enabled").length&&O.push(":enabled",":disabled"),q.appendChild(r).disabled=!0,2!==r.querySelectorAll(":disabled").length&&O.push(":enabled",":disabled"),r.querySelectorAll("*,:x"),O.push(",.*:")})),(y.matchesSelector=ur.test(F=q.matches||q.webkitMatchesSelector||q.mozMatchesSelector||q.oMatchesSelector||q.msMatchesSelector))&&o(function(r){y.disconnectedMatch=F.call(r,"*"),F.call(r,"[s!='']:x"),H.push("!=",er)}),O=O.length&&new RegExp(O.join("|")),H=H.length&&new RegExp(H.join("|")),n=ur.test(q.compareDocumentPosition),M=n||ur.test(q.contains)?function(r,n){var t=9===r.nodeType?r.documentElement:r,e=n&&n.parentNode;return r===e||!(!e||1!==e.nodeType||!(t.contains?t.contains(e):r.compareDocumentPosition&&16&r.compareDocumentPosition(e)))}:function(r,n){if(n)for(;n=n.parentNode;)if(n===r)return!0;return!1},_=n?function(r,n){if(r===n)return N=!0,0;var t=!r.compareDocumentPosition-!n.compareDocumentPosition;return t||(1&(t=(r.ownerDocument||r)===(n.ownerDocument||n)?r.compareDocumentPosition(n):1)||!y.sortDetached&&n.compareDocumentPosition(r)===t?r===L||r.ownerDocument===I&&M(I,r)?-1:n===L||n.ownerDocument===I&&M(I,n)?1:A?K(A,r)-K(A,n):0:4&t?-1:1)}:function(r,n){if(r===n)return N=!0,0;var t,e=0,o=r.parentNode,i=n.parentNode,l=[r],d=[n];if(!o||!i)return r===L?-1:n===L?1:o?-1:i?1:A?K(A,r)-K(A,n):0;if(o===i)return a(r,n);for(t=r;t=t.parentNode;)l.unshift(t);for(t=n;t=t.parentNode;)d.unshift(t);for(;l[e]===d[e];)e++;return e?a(l[e],d[e]):l[e]===I?-1:d[e]===I?1:0},L):L},n.matches=function(r,t){return n(r,null,null,t)},n.matchesSelector=function(r,t){if((r.ownerDocument||r)!==L&&D(r),t=t.replace(dr,"='$1']"),y.matchesSelector&&z&&!U[t+" "]&&(!H||!H.test(t))&&(!O||!O.test(t)))try{var e=F.call(r,t);if(e||y.disconnectedMatch||r.document&&11!==r.document.nodeType)return e}catch(r){}return n(t,L,null,[r]).length>0},n.contains=function(r,n){return(r.ownerDocument||r)!==L&&D(r),M(r,n)},n.attr=function(r,n){(r.ownerDocument||r)!==L&&D(r);var t=w.attrHandle[n.toLowerCase()],e=t&&X.call(w.attrHandle,n.toLowerCase())?t(r,n,!z):void 0;return void 0!==e?e:y.attributes||!z?r.getAttribute(n):(e=r.getAttributeNode(n))&&e.specified?e.value:null},n.escape=function(r){return(r+"").replace(vr,yr)},n.error=function(r){throw new Error("Syntax error, unrecognized expression: "+r)},n.uniqueSort=function(r){var n,t=[],e=0,o=0;if(N=!y.detectDuplicates,A=!y.sortStable&&r.slice(0),r.sort(_),N){for(;n=r[o++];)n===r[o]&&(e=t.push(o));for(;e--;)r.splice(t[e],1)}return A=null,r},k=n.getText=function(r){var n,t="",e=0,o=r.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof r.textContent)return r.textContent;for(r=r.firstChild;r;r=r.nextSibling)t+=k(r)}else if(3===o||4===o)return r.nodeValue}else for(;n=r[e++];)t+=k(n);return t},(w=n.selectors={cacheLength:50,createPseudo:e,match:cr,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(r){return r[1]=r[1].replace(hr,xr),r[3]=(r[3]||r[4]||r[5]||"").replace(hr,xr),"~="===r[2]&&(r[3]=" "+r[3]+" "),r.slice(0,4)},CHILD:function(r){return r[1]=r[1].toLowerCase(),"nth"===r[1].slice(0,3)?(r[3]||n.error(r[0]),r[4]=+(r[4]?r[5]+(r[6]||1):2*("even"===r[3]||"odd"===r[3])),r[5]=+(r[7]+r[8]||"odd"===r[3])):r[3]&&n.error(r[0]),r},PSEUDO:function(r){var n,t=!r[6]&&r[2];return cr.CHILD.test(r[0])?null:(r[3]?r[2]=r[4]||r[5]||"":t&&sr.test(t)&&(n=T(t,!0))&&(n=t.indexOf(")",t.length-n)-t.length)&&(r[0]=r[0].slice(0,n),r[2]=t.slice(0,n)),r.slice(0,3))}},filter:{TAG:function(r){var n=r.replace(hr,xr).toLowerCase();return"*"===r?function(){return!0}:function(r){return r.nodeName&&r.nodeName.toLowerCase()===n}},CLASS:function(r){var n=W[r+" "];return n||(n=new RegExp("(^|"+rr+")"+r+"("+rr+"|$)"))&&W(r,function(r){return n.test("string"==typeof r.className&&r.className||void 0!==r.getAttribute&&r.getAttribute("class")||"")})},ATTR:function(r,t,e){return function(o){var i=n.attr(o,r);return null==i?"!="===t:!t||(i+="","="===t?i===e:"!="===t?i!==e:"^="===t?e&&0===i.indexOf(e):"*="===t?e&&i.indexOf(e)>-1:"$="===t?e&&i.slice(-e.length)===e:"~="===t?(" "+i.replace(or," ")+" ").indexOf(e)>-1:"|="===t&&(i===e||i.slice(0,e.length+1)===e+"-"))}},CHILD:function(r,n,t,e,o){var i="nth"!==r.slice(0,3),a="last"!==r.slice(-4),l="of-type"===n;return 1===e&&0===o?function(r){return!!r.parentNode}:function(n,t,d){var s,p,c,m,f,u,g=i!==a?"nextSibling":"previousSibling",b=n.parentNode,h=l&&n.nodeName.toLowerCase(),x=!d&&!l,v=!1;if(b){if(i){for(;g;){for(m=n;m=m[g];)if(l?m.nodeName.toLowerCase()===h:1===m.nodeType)return!1;u=g="only"===r&&!u&&"nextSibling"}return!0}if(u=[a?b.firstChild:b.lastChild],a&&x){for(v=(f=(s=(p=(c=(m=b)[R]||(m[R]={}))[m.uniqueID]||(c[m.uniqueID]={}))[r]||[])[0]===P&&s[1])&&s[2],m=f&&b.childNodes[f];m=++f&&m&&m[g]||(v=f=0)||u.pop();)if(1===m.nodeType&&++v&&m===n){p[r]=[P,f,v];break}}else if(x&&(v=f=(s=(p=(c=(m=n)[R]||(m[R]={}))[m.uniqueID]||(c[m.uniqueID]={}))[r]||[])[0]===P&&s[1]),!1===v)for(;(m=++f&&m&&m[g]||(v=f=0)||u.pop())&&((l?m.nodeName.toLowerCase()!==h:1!==m.nodeType)||!++v||(x&&((p=(c=m[R]||(m[R]={}))[m.uniqueID]||(c[m.uniqueID]={}))[r]=[P,v]),m!==n)););return(v-=o)===e||v%e==0&&v/e>=0}}},PSEUDO:function(r,t){var o,i=w.pseudos[r]||w.setFilters[r.toLowerCase()]||n.error("unsupported pseudo: "+r);return i[R]?i(t):i.length>1?(o=[r,r,"",t],w.setFilters.hasOwnProperty(r.toLowerCase())?e(function(r,n){for(var e,o=i(r,t),a=o.length;a--;)r[e=K(r,o[a])]=!(n[e]=o[a])}):function(r){return i(r,0,o)}):i}},pseudos:{not:e(function(r){var n=[],t=[],o=j(r.replace(ir,"$1"));return o[R]?e(function(r,n,t,e){for(var i,a=o(r,null,e,[]),l=r.length;l--;)(i=a[l])&&(r[l]=!(n[l]=i))}):function(r,e,i){return n[0]=r,o(n,null,i,t),n[0]=null,!t.pop()}}),has:e(function(r){return function(t){return n(r,t).length>0}}),contains:e(function(r){return r=r.replace(hr,xr),function(n){return(n.textContent||n.innerText||k(n)).indexOf(r)>-1}}),lang:e(function(r){return pr.test(r||"")||n.error("unsupported lang: "+r),r=r.replace(hr,xr).toLowerCase(),function(n){var t;do{if(t=z?n.lang:n.getAttribute("xml:lang")||n.getAttribute("lang"))return(t=t.toLowerCase())===r||0===t.indexOf(r+"-")}while((n=n.parentNode)&&1===n.nodeType);return!1}}),target:function(n){var t=r.location&&r.location.hash;return t&&t.slice(1)===n.id},root:function(r){return r===q},focus:function(r){return r===L.activeElement&&(!L.hasFocus||L.hasFocus())&&!!(r.type||r.href||~r.tabIndex)},enabled:s(!1),disabled:s(!0),checked:function(r){var n=r.nodeName.toLowerCase();return"input"===n&&!!r.checked||"option"===n&&!!r.selected},selected:function(r){return r.parentNode&&r.parentNode.selectedIndex,!0===r.selected},empty:function(r){for(r=r.firstChild;r;r=r.nextSibling)if(r.nodeType<6)return!1;return!0},parent:function(r){return!w.pseudos.empty(r)},header:function(r){return fr.test(r.nodeName)},input:function(r){return mr.test(r.nodeName)},button:function(r){var n=r.nodeName.toLowerCase();return"input"===n&&"button"===r.type||"button"===n},text:function(r){var n;return"input"===r.nodeName.toLowerCase()&&"text"===r.type&&(null==(n=r.getAttribute("type"))||"text"===n.toLowerCase())},first:p(function(){return[0]}),last:p(function(r,n){return[n-1]}),eq:p(function(r,n,t){return[t<0?t+n:t]}),even:p(function(r,n){for(var t=0;t<n;t+=2)r.push(t);return r}),odd:p(function(r,n){for(var t=1;t<n;t+=2)r.push(t);return r}),lt:p(function(r,n,t){for(var e=t<0?t+n:t;--e>=0;)r.push(e);return r}),gt:p(function(r,n,t){for(var e=t<0?t+n:t;++e<n;)r.push(e);return r})}}).pseudos.nth=w.pseudos.eq;for(v in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[v]=l(v);for(v in{submit:!0,reset:!0})w.pseudos[v]=d(v);return m.prototype=w.filters=w.pseudos,w.setFilters=new m,T=n.tokenize=function(r,t){var e,o,i,a,l,d,s,p=$[r+" "];if(p)return t?0:p.slice(0);for(l=r,d=[],s=w.preFilter;l;){e&&!(o=ar.exec(l))||(o&&(l=l.slice(o[0].length)||l),d.push(i=[])),e=!1,(o=lr.exec(l))&&(e=o.shift(),i.push({value:e,type:o[0].replace(ir," ")}),l=l.slice(e.length));for(a in w.filter)!(o=cr[a].exec(l))||s[a]&&!(o=s[a](o))||(e=o.shift(),i.push({value:e,type:a,matches:o}),l=l.slice(e.length));if(!e)break}return t?l.length:l?n.error(r):$(r,d).slice(0)},j=n.compile=function(r,t){var o,i=[],a=[],l=U[r+" "];if(!l){for(t||(t=T(r)),o=t.length;o--;)(l=x(t[o]))[R]?i.push(l):a.push(l);(l=U(r,function(r,t){var o=t.length>0,i=r.length>0,a=function(e,a,l,d,s){var p,c,m,f=0,u="0",g=e&&[],h=[],x=S,v=e||i&&w.find.TAG("*",s),y=P+=null==x?1:Math.random()||.1,k=v.length;for(s&&(S=a===L||a||s);u!==k&&null!=(p=v[u]);u++){if(i&&p){for(c=0,a||p.ownerDocument===L||(D(p),l=!z);m=r[c++];)if(m(p,a||L,l)){d.push(p);break}s&&(P=y)}o&&((p=!m&&p)&&f--,e&&g.push(p))}if(f+=u,o&&u!==f){for(c=0;m=t[c++];)m(g,h,a,l);if(e){if(f>0)for(;u--;)g[u]||h[u]||(h[u]=G.call(d));h=b(h)}J.apply(d,h),s&&!e&&h.length>0&&f+t.length>1&&n.uniqueSort(d)}return s&&(P=y,S=x),g};return o?e(a):a}(a,i))).selector=r}return l},E=n.select=function(r,n,t,e){var o,i,a,l,d,s="function"==typeof r&&r,p=!e&&T(r=s.selector||r);if(t=t||[],1===p.length){if((i=p[0]=p[0].slice(0)).length>2&&"ID"===(a=i[0]).type&&9===n.nodeType&&z&&w.relative[i[1].type]){if(!(n=(w.find.ID(a.matches[0].replace(hr,xr),n)||[])[0]))return t;s&&(n=n.parentNode),r=r.slice(i.shift().value.length)}for(o=cr.needsContext.test(r)?0:i.length;o--&&(a=i[o],!w.relative[l=a.type]);)if((d=w.find[l])&&(e=d(a.matches[0].replace(hr,xr),br.test(i[0].type)&&c(n.parentNode)||n))){if(i.splice(o,1),!(r=e.length&&f(i)))return J.apply(t,e),t;break}}return(s||j(r,p))(e,n,!z,t,!n||br.test(r)&&c(n.parentNode)||n),t},y.sortStable=R.split("").sort(_).join("")===R,y.detectDuplicates=!!N,D(),y.sortDetached=o(function(r){return 1&r.compareDocumentPosition(L.createElement("fieldset"))}),o(function(r){return r.innerHTML="<a href='#'></a>","#"===r.firstChild.getAttribute("href")})||i("type|href|height|width",function(r,n,t){if(!t)return r.getAttribute(n,"type"===n.toLowerCase()?1:2)}),y.attributes&&o(function(r){return r.innerHTML="<input/>",r.firstChild.setAttribute("value",""),""===r.firstChild.getAttribute("value")})||i("value",function(r,n,t){if(!t&&"input"===r.nodeName.toLowerCase())return r.defaultValue}),o(function(r){return null==r.getAttribute("disabled")})||i(Z,function(r,n,t){var e;if(!t)return!0===r[n]?n.toLowerCase():(e=r.getAttributeNode(n))&&e.specified?e.value:null}),n}(t);pr.find=gr,pr.expr=gr.selectors,pr.expr[":"]=pr.expr.pseudos,pr.uniqueSort=pr.unique=gr.uniqueSort,pr.text=gr.getText,pr.isXMLDoc=gr.isXML,pr.contains=gr.contains,pr.escapeSelector=gr.escape;var br=function(r,n,t){for(var e=[],o=void 0!==t;(r=r[n])&&9!==r.nodeType;)if(1===r.nodeType){if(o&&pr(r).is(t))break;e.push(r)}return e},hr=function(r,n){for(var t=[];r;r=r.nextSibling)1===r.nodeType&&r!==n&&t.push(r);return t},xr=pr.expr.match.needsContext,vr=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,yr=/^.[^:#\[\.,]*$/;pr.filter=function(r,n,t){var e=n[0];return t&&(r=":not("+r+")"),1===n.length&&1===e.nodeType?pr.find.matchesSelector(e,r)?[e]:[]:pr.find.matches(r,pr.grep(n,function(r){return 1===r.nodeType}))},pr.fn.extend({find:function(r){var n,t,e=this.length,o=this;if("string"!=typeof r)return this.pushStack(pr(r).filter(function(){for(n=0;n<e;n++)if(pr.contains(o[n],this))return!0}));for(t=this.pushStack([]),n=0;n<e;n++)pr.find(r,o[n],t);return e>1?pr.uniqueSort(t):t},filter:function(r){return this.pushStack(d(this,r||[],!1))},not:function(r){return this.pushStack(d(this,r||[],!0))},is:function(r){return!!d(this,"string"==typeof r&&xr.test(r)?pr(r):r||[],!1).length}});var wr,kr=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(pr.fn.init=function(r,n,t){var e,o;if(!r)return this;if(t=t||wr,"string"==typeof r){if(!(e="<"===r[0]&&">"===r[r.length-1]&&r.length>=3?[null,r,null]:kr.exec(r))||!e[1]&&n)return!n||n.jquery?(n||t).find(r):this.constructor(n).find(r);if(e[1]){if(n=n instanceof pr?n[0]:n,pr.merge(this,pr.parseHTML(e[1],n&&n.nodeType?n.ownerDocument||n:K,!0)),vr.test(e[1])&&pr.isPlainObject(n))for(e in n)pr.isFunction(this[e])?this[e](n[e]):this.attr(e,n[e]);return this}return(o=K.getElementById(e[2]))&&(this[0]=o,this.length=1),this}return r.nodeType?(this[0]=r,this.length=1,this):pr.isFunction(r)?void 0!==t.ready?t.ready(r):r(pr):pr.makeArray(r,this)}).prototype=pr.fn,wr=pr(K);var Cr=/^(?:parents|prev(?:Until|All))/,Tr={children:!0,contents:!0,next:!0,prev:!0};pr.fn.extend({has:function(r){var n=pr(r,this),t=n.length;return this.filter(function(){for(var r=0;r<t;r++)if(pr.contains(this,n[r]))return!0})},closest:function(r,n){var t,e=0,o=this.length,i=[],a="string"!=typeof r&&pr(r);if(!xr.test(r))for(;e<o;e++)for(t=this[e];t&&t!==n;t=t.parentNode)if(t.nodeType<11&&(a?a.index(t)>-1:1===t.nodeType&&pr.find.matchesSelector(t,r))){i.push(t);break}return this.pushStack(i.length>1?pr.uniqueSort(i):i)},index:function(r){return r?"string"==typeof r?er.call(pr(r),this[0]):er.call(this,r.jquery?r[0]:r):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(r,n){return this.pushStack(pr.uniqueSort(pr.merge(this.get(),pr(r,n))))},addBack:function(r){return this.add(null==r?this.prevObject:this.prevObject.filter(r))}}),pr.each({parent:function(r){var n=r.parentNode;return n&&11!==n.nodeType?n:null},parents:function(r){return br(r,"parentNode")},parentsUntil:function(r,n,t){return br(r,"parentNode",t)},next:function(r){return s(r,"nextSibling")},prev:function(r){return s(r,"previousSibling")},nextAll:function(r){return br(r,"nextSibling")},prevAll:function(r){return br(r,"previousSibling")},nextUntil:function(r,n,t){return br(r,"nextSibling",t)},prevUntil:function(r,n,t){return br(r,"previousSibling",t)},siblings:function(r){return hr((r.parentNode||{}).firstChild,r)},children:function(r){return hr(r.firstChild)},contents:function(r){return l(r,"iframe")?r.contentDocument:(l(r,"template")&&(r=r.content||r),pr.merge([],r.childNodes))}},function(r,n){pr.fn[r]=function(t,e){var o=pr.map(this,n,t);return"Until"!==r.slice(-5)&&(e=t),e&&"string"==typeof e&&(o=pr.filter(e,o)),this.length>1&&(Tr[r]||pr.uniqueSort(o),Cr.test(r)&&o.reverse()),this.pushStack(o)}});var jr=/[^\x20\t\r\n\f]+/g;pr.Callbacks=function(r){r="string"==typeof r?function(r){var n={};return pr.each(r.match(jr)||[],function(r,t){n[t]=!0}),n}(r):pr.extend({},r);var n,t,e,o,i=[],a=[],l=-1,d=function(){for(o=o||r.once,e=n=!0;a.length;l=-1)for(t=a.shift();++l<i.length;)!1===i[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=i.length,t=!1);r.memory||(t=!1),n=!1,o&&(i=t?[]:"")},s={add:function(){return i&&(t&&!n&&(l=i.length-1,a.push(t)),function n(t){pr.each(t,function(t,e){pr.isFunction(e)?r.unique&&s.has(e)||i.push(e):e&&e.length&&"string"!==pr.type(e)&&n(e)})}(arguments),t&&!n&&d()),this},remove:function(){return pr.each(arguments,function(r,n){for(var t;(t=pr.inArray(n,i,t))>-1;)i.splice(t,1),t<=l&&l--}),this},has:function(r){return r?pr.inArray(r,i)>-1:i.length>0},empty:function(){return i&&(i=[]),this},disable:function(){return o=a=[],i=t="",this},disabled:function(){return!i},lock:function(){return o=a=[],t||n||(i=t=""),this},locked:function(){return!!o},fireWith:function(r,t){return o||(t=[r,(t=t||[]).slice?t.slice():t],a.push(t),n||d()),this},fire:function(){return s.fireWith(this,arguments),this},fired:function(){return!!e}};return s},pr.extend({Deferred:function(r){var n=[["notify","progress",pr.Callbacks("memory"),pr.Callbacks("memory"),2],["resolve","done",pr.Callbacks("once memory"),pr.Callbacks("once memory"),0,"resolved"],["reject","fail",pr.Callbacks("once memory"),pr.Callbacks("once memory"),1,"rejected"]],e="pending",o={state:function(){return e},always:function(){return i.done(arguments).fail(arguments),this},catch:function(r){return o.then(null,r)},pipe:function(){var r=arguments;return pr.Deferred(function(t){pr.each(n,function(n,e){var o=pr.isFunction(r[e[4]])&&r[e[4]];i[e[1]](function(){var r=o&&o.apply(this,arguments);r&&pr.isFunction(r.promise)?r.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[e[0]+"With"](this,o?[r]:arguments)})}),r=null}).promise()},then:function(r,e,o){function i(r,n,e,o){return function(){var l=this,d=arguments,s=function(){var t,s;if(!(r<a)){if((t=e.apply(l,d))===n.promise())throw new TypeError("Thenable self-resolution");s=t&&("object"==typeof t||"function"==typeof t)&&t.then,pr.isFunction(s)?o?s.call(t,i(a,n,p,o),i(a,n,c,o)):(a++,s.call(t,i(a,n,p,o),i(a,n,c,o),i(a,n,p,n.notifyWith))):(e!==p&&(l=void 0,d=[t]),(o||n.resolveWith)(l,d))}},m=o?s:function(){try{s()}catch(t){pr.Deferred.exceptionHook&&pr.Deferred.exceptionHook(t,m.stackTrace),r+1>=a&&(e!==c&&(l=void 0,d=[t]),n.rejectWith(l,d))}};r?m():(pr.Deferred.getStackHook&&(m.stackTrace=pr.Deferred.getStackHook()),t.setTimeout(m))}}var a=0;return pr.Deferred(function(t){n[0][3].add(i(0,t,pr.isFunction(o)?o:p,t.notifyWith)),n[1][3].add(i(0,t,pr.isFunction(r)?r:p)),n[2][3].add(i(0,t,pr.isFunction(e)?e:c))}).promise()},promise:function(r){return null!=r?pr.extend(r,o):o}},i={};return pr.each(n,function(r,t){var a=t[2],l=t[5];o[t[1]]=a.add,l&&a.add(function(){e=l},n[3-r][2].disable,n[0][2].lock),a.add(t[3].fire),i[t[0]]=function(){return i[t[0]+"With"](this===i?void 0:this,arguments),this},i[t[0]+"With"]=a.fireWith}),o.promise(i),r&&r.call(i,i),i},when:function(r){var n=arguments.length,t=n,e=Array(t),o=rr.call(arguments),i=pr.Deferred(),a=function(r){return function(t){e[r]=this,o[r]=arguments.length>1?rr.call(arguments):t,--n||i.resolveWith(e,o)}};if(n<=1&&(m(r,i.done(a(t)).resolve,i.reject,!n),"pending"===i.state()||pr.isFunction(o[t]&&o[t].then)))return i.then();for(;t--;)m(o[t],a(t),i.reject);return i.promise()}});var Er=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;pr.Deferred.exceptionHook=function(r,n){t.console&&t.console.warn&&r&&Er.test(r.name)&&t.console.warn("jQuery.Deferred exception: "+r.message,r.stack,n)},pr.readyException=function(r){t.setTimeout(function(){throw r})};var Sr=pr.Deferred();pr.fn.ready=function(r){return Sr.then(r).catch(function(r){pr.readyException(r)}),this},pr.extend({isReady:!1,readyWait:1,ready:function(r){(!0===r?--pr.readyWait:pr.isReady)||(pr.isReady=!0,!0!==r&&--pr.readyWait>0||Sr.resolveWith(K,[pr]))}}),pr.ready.then=Sr.then,"complete"===K.readyState||"loading"!==K.readyState&&!K.documentElement.doScroll?t.setTimeout(pr.ready):(K.addEventListener("DOMContentLoaded",f),t.addEventListener("load",f));var Ar=function(r,n,t,e,o,i,a){var l=0,d=r.length,s=null==t;if("object"===pr.type(t)){o=!0;for(l in t)Ar(r,n,l,t[l],!0,i,a)}else if(void 0!==e&&(o=!0,pr.isFunction(e)||(a=!0),s&&(a?(n.call(r,e),n=null):(s=n,n=function(r,n,t){return s.call(pr(r),t)})),n))for(;l<d;l++)n(r[l],t,a?e:e.call(r[l],l,n(r[l],t)));return o?r:s?n.call(r):d?n(r[0],t):i},Nr=function(r){return 1===r.nodeType||9===r.nodeType||!+r.nodeType};u.uid=1,u.prototype={cache:function(r){var n=r[this.expando];return n||(n={},Nr(r)&&(r.nodeType?r[this.expando]=n:Object.defineProperty(r,this.expando,{value:n,configurable:!0}))),n},set:function(r,n,t){var e,o=this.cache(r);if("string"==typeof n)o[pr.camelCase(n)]=t;else for(e in n)o[pr.camelCase(e)]=n[e];return o},get:function(r,n){return void 0===n?this.cache(r):r[this.expando]&&r[this.expando][pr.camelCase(n)]},access:function(r,n,t){return void 0===n||n&&"string"==typeof n&&void 0===t?this.get(r,n):(this.set(r,n,t),void 0!==t?t:n)},remove:function(r,n){var t,e=r[this.expando];if(void 0!==e){if(void 0!==n){t=(n=Array.isArray(n)?n.map(pr.camelCase):(n=pr.camelCase(n))in e?[n]:n.match(jr)||[]).length;for(;t--;)delete e[n[t]]}(void 0===n||pr.isEmptyObject(e))&&(r.nodeType?r[this.expando]=void 0:delete r[this.expando])}},hasData:function(r){var n=r[this.expando];return void 0!==n&&!pr.isEmptyObject(n)}};var Dr=new u,Lr=new u,qr=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,zr=/[A-Z]/g;pr.extend({hasData:function(r){return Lr.hasData(r)||Dr.hasData(r)},data:function(r,n,t){return Lr.access(r,n,t)},removeData:function(r,n){Lr.remove(r,n)},_data:function(r,n,t){return Dr.access(r,n,t)},_removeData:function(r,n){Dr.remove(r,n)}}),pr.fn.extend({data:function(r,n){var t,e,o,i=this[0],a=i&&i.attributes;if(void 0===r){if(this.length&&(o=Lr.get(i),1===i.nodeType&&!Dr.get(i,"hasDataAttrs"))){for(t=a.length;t--;)a[t]&&0===(e=a[t].name).indexOf("data-")&&(e=pr.camelCase(e.slice(5)),g(i,e,o[e]));Dr.set(i,"hasDataAttrs",!0)}return o}return"object"==typeof r?this.each(function(){Lr.set(this,r)}):Ar(this,function(n){var t;if(i&&void 0===n){if(void 0!==(t=Lr.get(i,r)))return t;if(void 0!==(t=g(i,r)))return t}else this.each(function(){Lr.set(this,r,n)})},null,n,arguments.length>1,null,!0)},removeData:function(r){return this.each(function(){Lr.remove(this,r)})}}),pr.extend({queue:function(r,n,t){var e;if(r)return n=(n||"fx")+"queue",e=Dr.get(r,n),t&&(!e||Array.isArray(t)?e=Dr.access(r,n,pr.makeArray(t)):e.push(t)),e||[]},dequeue:function(r,n){n=n||"fx";var t=pr.queue(r,n),e=t.length,o=t.shift(),i=pr._queueHooks(r,n),a=function(){pr.dequeue(r,n)};"inprogress"===o&&(o=t.shift(),e--),o&&("fx"===n&&t.unshift("inprogress"),delete i.stop,o.call(r,a,i)),!e&&i&&i.empty.fire()},_queueHooks:function(r,n){var t=n+"queueHooks";return Dr.get(r,t)||Dr.access(r,t,{empty:pr.Callbacks("once memory").add(function(){Dr.remove(r,[n+"queue",t])})})}}),pr.fn.extend({queue:function(r,n){var t=2;return"string"!=typeof r&&(n=r,r="fx",t--),arguments.length<t?pr.queue(this[0],r):void 0===n?this:this.each(function(){var t=pr.queue(this,r,n);pr._queueHooks(this,r),"fx"===r&&"inprogress"!==t[0]&&pr.dequeue(this,r)})},dequeue:function(r){return this.each(function(){pr.dequeue(this,r)})},clearQueue:function(r){return this.queue(r||"fx",[])},promise:function(r,n){var t,e=1,o=pr.Deferred(),i=this,a=this.length,l=function(){--e||o.resolveWith(i,[i])};for("string"!=typeof r&&(n=r,r=void 0),r=r||"fx";a--;)(t=Dr.get(i[a],r+"queueHooks"))&&t.empty&&(e++,t.empty.add(l));return l(),o.promise(n)}});var Or=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Hr=new RegExp("^(?:([+-])=|)("+Or+")([a-z%]*)$","i"),Fr=["Top","Right","Bottom","Left"],Mr=function(r,n){return"none"===(r=n||r).style.display||""===r.style.display&&pr.contains(r.ownerDocument,r)&&"none"===pr.css(r,"display")},Rr=function(r,n,t,e){var o,i,a={};for(i in n)a[i]=r.style[i],r.style[i]=n[i];o=t.apply(r,e||[]);for(i in n)r.style[i]=a[i];return o},Ir={};pr.fn.extend({show:function(){return x(this,!0)},hide:function(){return x(this)},toggle:function(r){return"boolean"==typeof r?r?this.show():this.hide():this.each(function(){Mr(this)?pr(this).show():pr(this).hide()})}});var Pr=/^(?:checkbox|radio)$/i,Br=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Wr=/^$|\/(?:java|ecma)script/i,$r={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};$r.optgroup=$r.option,$r.tbody=$r.tfoot=$r.colgroup=$r.caption=$r.thead,$r.th=$r.td;var Ur=/<|&#?\w+;/;!function(){var r=K.createDocumentFragment().appendChild(K.createElement("div")),n=K.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),r.appendChild(n),sr.checkClone=r.cloneNode(!0).cloneNode(!0).lastChild.checked,r.innerHTML="<textarea>x</textarea>",sr.noCloneChecked=!!r.cloneNode(!0).lastChild.defaultValue}();var _r=K.documentElement,Xr=/^key/,Vr=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Gr=/^([^.]*)(?:\.(.+)|)/;pr.event={global:{},add:function(r,n,t,e,o){var i,a,l,d,s,p,c,m,f,u,g,b=Dr.get(r);if(b)for(t.handler&&(t=(i=t).handler,o=i.selector),o&&pr.find.matchesSelector(_r,o),t.guid||(t.guid=pr.guid++),(d=b.events)||(d=b.events={}),(a=b.handle)||(a=b.handle=function(n){return void 0!==pr&&pr.event.triggered!==n.type?pr.event.dispatch.apply(r,arguments):void 0}),s=(n=(n||"").match(jr)||[""]).length;s--;)f=g=(l=Gr.exec(n[s])||[])[1],u=(l[2]||"").split(".").sort(),f&&(c=pr.event.special[f]||{},f=(o?c.delegateType:c.bindType)||f,c=pr.event.special[f]||{},p=pr.extend({type:f,origType:g,data:e,handler:t,guid:t.guid,selector:o,needsContext:o&&pr.expr.match.needsContext.test(o),namespace:u.join(".")},i),(m=d[f])||((m=d[f]=[]).delegateCount=0,c.setup&&!1!==c.setup.call(r,e,u,a)||r.addEventListener&&r.addEventListener(f,a)),c.add&&(c.add.call(r,p),p.handler.guid||(p.handler.guid=t.guid)),o?m.splice(m.delegateCount++,0,p):m.push(p),pr.event.global[f]=!0)},remove:function(r,n,t,e,o){var i,a,l,d,s,p,c,m,f,u,g,b=Dr.hasData(r)&&Dr.get(r);if(b&&(d=b.events)){for(s=(n=(n||"").match(jr)||[""]).length;s--;)if(l=Gr.exec(n[s])||[],f=g=l[1],u=(l[2]||"").split(".").sort(),f){for(c=pr.event.special[f]||{},m=d[f=(e?c.delegateType:c.bindType)||f]||[],l=l[2]&&new RegExp("(^|\\.)"+u.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=i=m.length;i--;)p=m[i],!o&&g!==p.origType||t&&t.guid!==p.guid||l&&!l.test(p.namespace)||e&&e!==p.selector&&("**"!==e||!p.selector)||(m.splice(i,1),p.selector&&m.delegateCount--,c.remove&&c.remove.call(r,p));a&&!m.length&&(c.teardown&&!1!==c.teardown.call(r,u,b.handle)||pr.removeEvent(r,f,b.handle),delete d[f])}else for(f in d)pr.event.remove(r,f+n[s],t,e,!0);pr.isEmptyObject(d)&&Dr.remove(r,"handle events")}},dispatch:function(r){var n,t,e,o,i,a,l=pr.event.fix(r),d=new Array(arguments.length),s=(Dr.get(this,"events")||{})[l.type]||[],p=pr.event.special[l.type]||{};for(d[0]=l,n=1;n<arguments.length;n++)d[n]=arguments[n];if(l.delegateTarget=this,!p.preDispatch||!1!==p.preDispatch.call(this,l)){for(a=pr.event.handlers.call(this,l,s),n=0;(o=a[n++])&&!l.isPropagationStopped();)for(l.currentTarget=o.elem,t=0;(i=o.handlers[t++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!l.rnamespace.test(i.namespace)||(l.handleObj=i,l.data=i.data,void 0!==(e=((pr.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,d))&&!1===(l.result=e)&&(l.preventDefault(),l.stopPropagation()));return p.postDispatch&&p.postDispatch.call(this,l),l.result}},handlers:function(r,n){var t,e,o,i,a,l=[],d=n.delegateCount,s=r.target;if(d&&s.nodeType&&!("click"===r.type&&r.button>=1))for(;s!==this;s=s.parentNode||this)if(1===s.nodeType&&("click"!==r.type||!0!==s.disabled)){for(i=[],a={},t=0;t<d;t++)void 0===a[o=(e=n[t]).selector+" "]&&(a[o]=e.needsContext?pr(o,this).index(s)>-1:pr.find(o,this,null,[s]).length),a[o]&&i.push(e);i.length&&l.push({elem:s,handlers:i})}return s=this,d<n.length&&l.push({elem:s,handlers:n.slice(d)}),l},addProp:function(r,n){Object.defineProperty(pr.Event.prototype,r,{enumerable:!0,configurable:!0,get:pr.isFunction(n)?function(){if(this.originalEvent)return n(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[r]},set:function(n){Object.defineProperty(this,r,{enumerable:!0,configurable:!0,writable:!0,value:n})}})},fix:function(r){return r[pr.expando]?r:new pr.Event(r)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==T()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===T()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&l(this,"input"))return this.click(),!1},_default:function(r){return l(r.target,"a")}},beforeunload:{postDispatch:function(r){void 0!==r.result&&r.originalEvent&&(r.originalEvent.returnValue=r.result)}}}},pr.removeEvent=function(r,n,t){r.removeEventListener&&r.removeEventListener(n,t)},pr.Event=function(r,n){if(!(this instanceof pr.Event))return new pr.Event(r,n);r&&r.type?(this.originalEvent=r,this.type=r.type,this.isDefaultPrevented=r.defaultPrevented||void 0===r.defaultPrevented&&!1===r.returnValue?k:C,this.target=r.target&&3===r.target.nodeType?r.target.parentNode:r.target,this.currentTarget=r.currentTarget,this.relatedTarget=r.relatedTarget):this.type=r,n&&pr.extend(this,n),this.timeStamp=r&&r.timeStamp||pr.now(),this[pr.expando]=!0},pr.Event.prototype={constructor:pr.Event,isDefaultPrevented:C,isPropagationStopped:C,isImmediatePropagationStopped:C,isSimulated:!1,preventDefault:function(){var r=this.originalEvent;this.isDefaultPrevented=k,r&&!this.isSimulated&&r.preventDefault()},stopPropagation:function(){var r=this.originalEvent;this.isPropagationStopped=k,r&&!this.isSimulated&&r.stopPropagation()},stopImmediatePropagation:function(){var r=this.originalEvent;this.isImmediatePropagationStopped=k,r&&!this.isSimulated&&r.stopImmediatePropagation(),this.stopPropagation()}},pr.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(r){var n=r.button;return null==r.which&&Xr.test(r.type)?null!=r.charCode?r.charCode:r.keyCode:!r.which&&void 0!==n&&Vr.test(r.type)?1&n?1:2&n?3:4&n?2:0:r.which}},pr.event.addProp),pr.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(r,n){pr.event.special[r]={delegateType:n,bindType:n,handle:function(r){var t,e=r.relatedTarget,o=r.handleObj;return e&&(e===this||pr.contains(this,e))||(r.type=o.origType,t=o.handler.apply(this,arguments),r.type=n),t}}}),pr.fn.extend({on:function(r,n,t,e){return j(this,r,n,t,e)},one:function(r,n,t,e){return j(this,r,n,t,e,1)},off:function(r,n,t){var e,o;if(r&&r.preventDefault&&r.handleObj)return e=r.handleObj,pr(r.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler),this;if("object"==typeof r){for(o in r)this.off(o,n,r[o]);return this}return!1!==n&&"function"!=typeof n||(t=n,n=void 0),!1===t&&(t=C),this.each(function(){pr.event.remove(this,r,t,n)})}});var Yr=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Jr=/<script|<style|<link/i,Qr=/checked\s*(?:[^=]|=\s*.checked.)/i,Kr=/^true\/(.*)/,Zr=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;pr.extend({htmlPrefilter:function(r){return r.replace(Yr,"<$1></$2>")},clone:function(r,n,t){var e,o,i,a,l=r.cloneNode(!0),d=pr.contains(r.ownerDocument,r);if(!(sr.noCloneChecked||1!==r.nodeType&&11!==r.nodeType||pr.isXMLDoc(r)))for(a=v(l),e=0,o=(i=v(r)).length;e<o;e++)D(i[e],a[e]);if(n)if(t)for(i=i||v(r),a=a||v(l),e=0,o=i.length;e<o;e++)N(i[e],a[e]);else N(r,l);return(a=v(l,"script")).length>0&&y(a,!d&&v(r,"script")),l},cleanData:function(r){for(var n,t,e,o=pr.event.special,i=0;void 0!==(t=r[i]);i++)if(Nr(t)){if(n=t[Dr.expando]){if(n.events)for(e in n.events)o[e]?pr.event.remove(t,e):pr.removeEvent(t,e,n.handle);t[Dr.expando]=void 0}t[Lr.expando]&&(t[Lr.expando]=void 0)}}}),pr.fn.extend({detach:function(r){return q(this,r,!0)},remove:function(r){return q(this,r)},text:function(r){return Ar(this,function(r){return void 0===r?pr.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=r)})},null,r,arguments.length)},append:function(){return L(this,arguments,function(r){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){E(this,r).appendChild(r)}})},prepend:function(){return L(this,arguments,function(r){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var n=E(this,r);n.insertBefore(r,n.firstChild)}})},before:function(){return L(this,arguments,function(r){this.parentNode&&this.parentNode.insertBefore(r,this)})},after:function(){return L(this,arguments,function(r){this.parentNode&&this.parentNode.insertBefore(r,this.nextSibling)})},empty:function(){for(var r,n=0;null!=(r=this[n]);n++)1===r.nodeType&&(pr.cleanData(v(r,!1)),r.textContent="");return this},clone:function(r,n){return r=null!=r&&r,n=null==n?r:n,this.map(function(){return pr.clone(this,r,n)})},html:function(r){return Ar(this,function(r){var n=this[0]||{},t=0,e=this.length;if(void 0===r&&1===n.nodeType)return n.innerHTML;if("string"==typeof r&&!Jr.test(r)&&!$r[(Br.exec(r)||["",""])[1].toLowerCase()]){r=pr.htmlPrefilter(r);try{for(;t<e;t++)1===(n=this[t]||{}).nodeType&&(pr.cleanData(v(n,!1)),n.innerHTML=r);n=0}catch(r){}}n&&this.empty().append(r)},null,r,arguments.length)},replaceWith:function(){var r=[];return L(this,arguments,function(n){var t=this.parentNode;pr.inArray(this,r)<0&&(pr.cleanData(v(this)),t&&t.replaceChild(n,this))},r)}}),pr.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(r,n){pr.fn[r]=function(r){for(var t,e=[],o=pr(r),i=o.length-1,a=0;a<=i;a++)t=a===i?this:this.clone(!0),pr(o[a])[n](t),tr.apply(e,t.get());return this.pushStack(e)}});var rn=/^margin/,nn=new RegExp("^("+Or+")(?!px)[a-z%]+$","i"),tn=function(r){var n=r.ownerDocument.defaultView;return n&&n.opener||(n=t),n.getComputedStyle(r)};!function(){function r(){if(l){l.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",l.innerHTML="",_r.appendChild(a);var r=t.getComputedStyle(l);n="1%"!==r.top,i="2px"===r.marginLeft,e="4px"===r.width,l.style.marginRight="50%",o="4px"===r.marginRight,_r.removeChild(a),l=null}}var n,e,o,i,a=K.createElement("div"),l=K.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",sr.clearCloneStyle="content-box"===l.style.backgroundClip,a.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",a.appendChild(l),pr.extend(sr,{pixelPosition:function(){return r(),n},boxSizingReliable:function(){return r(),e},pixelMarginRight:function(){return r(),o},reliableMarginLeft:function(){return r(),i}}))}();var en=/^(none|table(?!-c[ea]).+)/,on=/^--/,an={position:"absolute",visibility:"hidden",display:"block"},ln={letterSpacing:"0",fontWeight:"400"},dn=["Webkit","Moz","ms"],sn=K.createElement("div").style;pr.extend({cssHooks:{opacity:{get:function(r,n){if(n){var t=z(r,"opacity");return""===t?"1":t}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(r,n,t,e){if(r&&3!==r.nodeType&&8!==r.nodeType&&r.style){var o,i,a,l=pr.camelCase(n),d=on.test(n),s=r.style;if(d||(n=H(l)),a=pr.cssHooks[n]||pr.cssHooks[l],void 0===t)return a&&"get"in a&&void 0!==(o=a.get(r,!1,e))?o:s[n];"string"==(i=typeof t)&&(o=Hr.exec(t))&&o[1]&&(t=b(r,n,o),i="number"),null!=t&&t==t&&("number"===i&&(t+=o&&o[3]||(pr.cssNumber[l]?"":"px")),sr.clearCloneStyle||""!==t||0!==n.indexOf("background")||(s[n]="inherit"),a&&"set"in a&&void 0===(t=a.set(r,t,e))||(d?s.setProperty(n,t):s[n]=t))}},css:function(r,n,t,e){var o,i,a,l=pr.camelCase(n);return on.test(n)||(n=H(l)),(a=pr.cssHooks[n]||pr.cssHooks[l])&&"get"in a&&(o=a.get(r,!0,t)),void 0===o&&(o=z(r,n,e)),"normal"===o&&n in ln&&(o=ln[n]),""===t||t?(i=parseFloat(o),!0===t||isFinite(i)?i||0:o):o}}),pr.each(["height","width"],function(r,n){pr.cssHooks[n]={get:function(r,t,e){if(t)return!en.test(pr.css(r,"display"))||r.getClientRects().length&&r.getBoundingClientRect().width?R(r,n,e):Rr(r,an,function(){return R(r,n,e)})},set:function(r,t,e){var o,i=e&&tn(r),a=e&&M(r,n,e,"border-box"===pr.css(r,"boxSizing",!1,i),i);return a&&(o=Hr.exec(t))&&"px"!==(o[3]||"px")&&(r.style[n]=t,t=pr.css(r,n)),F(0,t,a)}}}),pr.cssHooks.marginLeft=O(sr.reliableMarginLeft,function(r,n){if(n)return(parseFloat(z(r,"marginLeft"))||r.getBoundingClientRect().left-Rr(r,{marginLeft:0},function(){return r.getBoundingClientRect().left}))+"px"}),pr.each({margin:"",padding:"",border:"Width"},function(r,n){pr.cssHooks[r+n]={expand:function(t){for(var e=0,o={},i="string"==typeof t?t.split(" "):[t];e<4;e++)o[r+Fr[e]+n]=i[e]||i[e-2]||i[0];return o}},rn.test(r)||(pr.cssHooks[r+n].set=F)}),pr.fn.extend({css:function(r,n){return Ar(this,function(r,n,t){var e,o,i={},a=0;if(Array.isArray(n)){for(e=tn(r),o=n.length;a<o;a++)i[n[a]]=pr.css(r,n[a],!1,e);return i}return void 0!==t?pr.style(r,n,t):pr.css(r,n)},r,n,arguments.length>1)}}),pr.Tween=I,(I.prototype={constructor:I,init:function(r,n,t,e,o,i){this.elem=r,this.prop=t,this.easing=o||pr.easing._default,this.options=n,this.start=this.now=this.cur(),this.end=e,this.unit=i||(pr.cssNumber[t]?"":"px")},cur:function(){var r=I.propHooks[this.prop];return r&&r.get?r.get(this):I.propHooks._default.get(this)},run:function(r){var n,t=I.propHooks[this.prop];return this.options.duration?this.pos=n=pr.easing[this.easing](r,this.options.duration*r,0,1,this.options.duration):this.pos=n=r,this.now=(this.end-this.start)*n+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),t&&t.set?t.set(this):I.propHooks._default.set(this),this}}).init.prototype=I.prototype,(I.propHooks={_default:{get:function(r){var n;return 1!==r.elem.nodeType||null!=r.elem[r.prop]&&null==r.elem.style[r.prop]?r.elem[r.prop]:(n=pr.css(r.elem,r.prop,""))&&"auto"!==n?n:0},set:function(r){pr.fx.step[r.prop]?pr.fx.step[r.prop](r):1!==r.elem.nodeType||null==r.elem.style[pr.cssProps[r.prop]]&&!pr.cssHooks[r.prop]?r.elem[r.prop]=r.now:pr.style(r.elem,r.prop,r.now+r.unit)}}}).scrollTop=I.propHooks.scrollLeft={set:function(r){r.elem.nodeType&&r.elem.parentNode&&(r.elem[r.prop]=r.now)}},pr.easing={linear:function(r){return r},swing:function(r){return.5-Math.cos(r*Math.PI)/2},_default:"swing"},pr.fx=I.prototype.init,pr.fx.step={};var pn,cn,mn=/^(?:toggle|show|hide)$/,fn=/queueHooks$/;pr.Animation=pr.extend(U,{tweeners:{"*":[function(r,n){var t=this.createTween(r,n);return b(t.elem,r,Hr.exec(n),t),t}]},tweener:function(r,n){pr.isFunction(r)?(n=r,r=["*"]):r=r.match(jr);for(var t,e=0,o=r.length;e<o;e++)t=r[e],U.tweeners[t]=U.tweeners[t]||[],U.tweeners[t].unshift(n)},prefilters:[function(r,n,t){var e,o,i,a,l,d,s,p,c="width"in n||"height"in n,m=this,f={},u=r.style,g=r.nodeType&&Mr(r),b=Dr.get(r,"fxshow");t.queue||(null==(a=pr._queueHooks(r,"fx")).unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,m.always(function(){m.always(function(){a.unqueued--,pr.queue(r,"fx").length||a.empty.fire()})}));for(e in n)if(o=n[e],mn.test(o)){if(delete n[e],i=i||"toggle"===o,o===(g?"hide":"show")){if("show"!==o||!b||void 0===b[e])continue;g=!0}f[e]=b&&b[e]||pr.style(r,e)}if((d=!pr.isEmptyObject(n))||!pr.isEmptyObject(f)){c&&1===r.nodeType&&(t.overflow=[u.overflow,u.overflowX,u.overflowY],null==(s=b&&b.display)&&(s=Dr.get(r,"display")),"none"===(p=pr.css(r,"display"))&&(s?p=s:(x([r],!0),s=r.style.display||s,p=pr.css(r,"display"),x([r]))),("inline"===p||"inline-block"===p&&null!=s)&&"none"===pr.css(r,"float")&&(d||(m.done(function(){u.display=s}),null==s&&(p=u.display,s="none"===p?"":p)),u.display="inline-block")),t.overflow&&(u.overflow="hidden",m.always(function(){u.overflow=t.overflow[0],u.overflowX=t.overflow[1],u.overflowY=t.overflow[2]})),d=!1;for(e in f)d||(b?"hidden"in b&&(g=b.hidden):b=Dr.access(r,"fxshow",{display:s}),i&&(b.hidden=!g),g&&x([r],!0),m.done(function(){g||x([r]),Dr.remove(r,"fxshow");for(e in f)pr.style(r,e,f[e])})),d=$(g?b[e]:0,e,m),e in b||(b[e]=d.start,g&&(d.end=d.start,d.start=0))}}],prefilter:function(r,n){n?U.prefilters.unshift(r):U.prefilters.push(r)}}),pr.speed=function(r,n,t){var e=r&&"object"==typeof r?pr.extend({},r):{complete:t||!t&&n||pr.isFunction(r)&&r,duration:r,easing:t&&n||n&&!pr.isFunction(n)&&n};return pr.fx.off?e.duration=0:"number"!=typeof e.duration&&(e.duration in pr.fx.speeds?e.duration=pr.fx.speeds[e.duration]:e.duration=pr.fx.speeds._default),null!=e.queue&&!0!==e.queue||(e.queue="fx"),e.old=e.complete,e.complete=function(){pr.isFunction(e.old)&&e.old.call(this),e.queue&&pr.dequeue(this,e.queue)},e},pr.fn.extend({fadeTo:function(r,n,t,e){return this.filter(Mr).css("opacity",0).show().end().animate({opacity:n},r,t,e)},animate:function(r,n,t,e){var o=pr.isEmptyObject(r),i=pr.speed(n,t,e),a=function(){var n=U(this,pr.extend({},r),i);(o||Dr.get(this,"finish"))&&n.stop(!0)};return a.finish=a,o||!1===i.queue?this.each(a):this.queue(i.queue,a)},stop:function(r,n,t){var e=function(r){var n=r.stop;delete r.stop,n(t)};return"string"!=typeof r&&(t=n,n=r,r=void 0),n&&!1!==r&&this.queue(r||"fx",[]),this.each(function(){var n=!0,o=null!=r&&r+"queueHooks",i=pr.timers,a=Dr.get(this);if(o)a[o]&&a[o].stop&&e(a[o]);else for(o in a)a[o]&&a[o].stop&&fn.test(o)&&e(a[o]);for(o=i.length;o--;)i[o].elem!==this||null!=r&&i[o].queue!==r||(i[o].anim.stop(t),n=!1,i.splice(o,1));!n&&t||pr.dequeue(this,r)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var n,t=Dr.get(this),e=t[r+"queue"],o=t[r+"queueHooks"],i=pr.timers,a=e?e.length:0;for(t.finish=!0,pr.queue(this,r,[]),o&&o.stop&&o.stop.call(this,!0),n=i.length;n--;)i[n].elem===this&&i[n].queue===r&&(i[n].anim.stop(!0),i.splice(n,1));for(n=0;n<a;n++)e[n]&&e[n].finish&&e[n].finish.call(this);delete t.finish})}}),pr.each(["toggle","show","hide"],function(r,n){var t=pr.fn[n];pr.fn[n]=function(r,e,o){return null==r||"boolean"==typeof r?t.apply(this,arguments):this.animate(W(n,!0),r,e,o)}}),pr.each({slideDown:W("show"),slideUp:W("hide"),slideToggle:W("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(r,n){pr.fn[r]=function(r,t,e){return this.animate(n,r,t,e)}}),pr.timers=[],pr.fx.tick=function(){var r,n=0,t=pr.timers;for(pn=pr.now();n<t.length;n++)(r=t[n])()||t[n]!==r||t.splice(n--,1);t.length||pr.fx.stop(),pn=void 0},pr.fx.timer=function(r){pr.timers.push(r),pr.fx.start()},pr.fx.interval=13,pr.fx.start=function(){cn||(cn=!0,P())},pr.fx.stop=function(){cn=null},pr.fx.speeds={slow:600,fast:200,_default:400},pr.fn.delay=function(r,n){return r=pr.fx?pr.fx.speeds[r]||r:r,n=n||"fx",this.queue(n,function(n,e){var o=t.setTimeout(n,r);e.stop=function(){t.clearTimeout(o)}})},function(){var r=K.createElement("input"),n=K.createElement("select").appendChild(K.createElement("option"));r.type="checkbox",sr.checkOn=""!==r.value,sr.optSelected=n.selected,(r=K.createElement("input")).value="t",r.type="radio",sr.radioValue="t"===r.value}();var un,gn=pr.expr.attrHandle;pr.fn.extend({attr:function(r,n){return Ar(this,pr.attr,r,n,arguments.length>1)},removeAttr:function(r){return this.each(function(){pr.removeAttr(this,r)})}}),pr.extend({attr:function(r,n,t){var e,o,i=r.nodeType;if(3!==i&&8!==i&&2!==i)return void 0===r.getAttribute?pr.prop(r,n,t):(1===i&&pr.isXMLDoc(r)||(o=pr.attrHooks[n.toLowerCase()]||(pr.expr.match.bool.test(n)?un:void 0)),void 0!==t?null===t?void pr.removeAttr(r,n):o&&"set"in o&&void 0!==(e=o.set(r,t,n))?e:(r.setAttribute(n,t+""),t):o&&"get"in o&&null!==(e=o.get(r,n))?e:null==(e=pr.find.attr(r,n))?void 0:e)},attrHooks:{type:{set:function(r,n){if(!sr.radioValue&&"radio"===n&&l(r,"input")){var t=r.value;return r.setAttribute("type",n),t&&(r.value=t),n}}}},removeAttr:function(r,n){var t,e=0,o=n&&n.match(jr);if(o&&1===r.nodeType)for(;t=o[e++];)r.removeAttribute(t)}}),un={set:function(r,n,t){return!1===n?pr.removeAttr(r,t):r.setAttribute(t,t),t}},pr.each(pr.expr.match.bool.source.match(/\w+/g),function(r,n){var t=gn[n]||pr.find.attr;gn[n]=function(r,n,e){var o,i,a=n.toLowerCase();return e||(i=gn[a],gn[a]=o,o=null!=t(r,n,e)?a:null,gn[a]=i),o}});var bn=/^(?:input|select|textarea|button)$/i,hn=/^(?:a|area)$/i;pr.fn.extend({prop:function(r,n){return Ar(this,pr.prop,r,n,arguments.length>1)},removeProp:function(r){return this.each(function(){delete this[pr.propFix[r]||r]})}}),pr.extend({prop:function(r,n,t){var e,o,i=r.nodeType;if(3!==i&&8!==i&&2!==i)return 1===i&&pr.isXMLDoc(r)||(n=pr.propFix[n]||n,o=pr.propHooks[n]),void 0!==t?o&&"set"in o&&void 0!==(e=o.set(r,t,n))?e:r[n]=t:o&&"get"in o&&null!==(e=o.get(r,n))?e:r[n]},propHooks:{tabIndex:{get:function(r){var n=pr.find.attr(r,"tabindex");return n?parseInt(n,10):bn.test(r.nodeName)||hn.test(r.nodeName)&&r.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),sr.optSelected||(pr.propHooks.selected={get:function(r){var n=r.parentNode;return n&&n.parentNode&&n.parentNode.selectedIndex,null},set:function(r){var n=r.parentNode;n&&(n.selectedIndex,n.parentNode&&n.parentNode.selectedIndex)}}),pr.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){pr.propFix[this.toLowerCase()]=this}),pr.fn.extend({addClass:function(r){var n,t,e,o,i,a,l,d=0;if(pr.isFunction(r))return this.each(function(n){pr(this).addClass(r.call(this,n,X(this)))});if("string"==typeof r&&r)for(n=r.match(jr)||[];t=this[d++];)if(o=X(t),e=1===t.nodeType&&" "+_(o)+" "){for(a=0;i=n[a++];)e.indexOf(" "+i+" ")<0&&(e+=i+" ");o!==(l=_(e))&&t.setAttribute("class",l)}return this},removeClass:function(r){var n,t,e,o,i,a,l,d=0;if(pr.isFunction(r))return this.each(function(n){pr(this).removeClass(r.call(this,n,X(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof r&&r)for(n=r.match(jr)||[];t=this[d++];)if(o=X(t),e=1===t.nodeType&&" "+_(o)+" "){for(a=0;i=n[a++];)for(;e.indexOf(" "+i+" ")>-1;)e=e.replace(" "+i+" "," ");o!==(l=_(e))&&t.setAttribute("class",l)}return this},toggleClass:function(r,n){var t=typeof r;return"boolean"==typeof n&&"string"===t?n?this.addClass(r):this.removeClass(r):pr.isFunction(r)?this.each(function(t){pr(this).toggleClass(r.call(this,t,X(this),n),n)}):this.each(function(){var n,e,o,i;if("string"===t)for(e=0,o=pr(this),i=r.match(jr)||[];n=i[e++];)o.hasClass(n)?o.removeClass(n):o.addClass(n);else void 0!==r&&"boolean"!==t||((n=X(this))&&Dr.set(this,"__className__",n),this.setAttribute&&this.setAttribute("class",n||!1===r?"":Dr.get(this,"__className__")||""))})},hasClass:function(r){var n,t,e=0;for(n=" "+r+" ";t=this[e++];)if(1===t.nodeType&&(" "+_(X(t))+" ").indexOf(n)>-1)return!0;return!1}});var xn=/\r/g;pr.fn.extend({val:function(r){var n,t,e,o=this[0];if(arguments.length)return e=pr.isFunction(r),this.each(function(t){var o;1===this.nodeType&&(null==(o=e?r.call(this,t,pr(this).val()):r)?o="":"number"==typeof o?o+="":Array.isArray(o)&&(o=pr.map(o,function(r){return null==r?"":r+""})),(n=pr.valHooks[this.type]||pr.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,o,"value")||(this.value=o))});if(o)return(n=pr.valHooks[o.type]||pr.valHooks[o.nodeName.toLowerCase()])&&"get"in n&&void 0!==(t=n.get(o,"value"))?t:"string"==typeof(t=o.value)?t.replace(xn,""):null==t?"":t}}),pr.extend({valHooks:{option:{get:function(r){var n=pr.find.attr(r,"value");return null!=n?n:_(pr.text(r))}},select:{get:function(r){var n,t,e,o=r.options,i=r.selectedIndex,a="select-one"===r.type,d=a?null:[],s=a?i+1:o.length;for(e=i<0?s:a?i:0;e<s;e++)if(((t=o[e]).selected||e===i)&&!t.disabled&&(!t.parentNode.disabled||!l(t.parentNode,"optgroup"))){if(n=pr(t).val(),a)return n;d.push(n)}return d},set:function(r,n){for(var t,e,o=r.options,i=pr.makeArray(n),a=o.length;a--;)((e=o[a]).selected=pr.inArray(pr.valHooks.option.get(e),i)>-1)&&(t=!0);return t||(r.selectedIndex=-1),i}}}}),pr.each(["radio","checkbox"],function(){pr.valHooks[this]={set:function(r,n){if(Array.isArray(n))return r.checked=pr.inArray(pr(r).val(),n)>-1}},sr.checkOn||(pr.valHooks[this].get=function(r){return null===r.getAttribute("value")?"on":r.value})});var vn=/^(?:focusinfocus|focusoutblur)$/;pr.extend(pr.event,{trigger:function(r,n,e,o){var i,a,l,d,s,p,c,m=[e||K],f=ar.call(r,"type")?r.type:r,u=ar.call(r,"namespace")?r.namespace.split("."):[];if(a=l=e=e||K,3!==e.nodeType&&8!==e.nodeType&&!vn.test(f+pr.event.triggered)&&(f.indexOf(".")>-1&&(f=(u=f.split(".")).shift(),u.sort()),s=f.indexOf(":")<0&&"on"+f,r=r[pr.expando]?r:new pr.Event(f,"object"==typeof r&&r),r.isTrigger=o?2:3,r.namespace=u.join("."),r.rnamespace=r.namespace?new RegExp("(^|\\.)"+u.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,r.result=void 0,r.target||(r.target=e),n=null==n?[r]:pr.makeArray(n,[r]),c=pr.event.special[f]||{},o||!c.trigger||!1!==c.trigger.apply(e,n))){if(!o&&!c.noBubble&&!pr.isWindow(e)){for(d=c.delegateType||f,vn.test(d+f)||(a=a.parentNode);a;a=a.parentNode)m.push(a),l=a;l===(e.ownerDocument||K)&&m.push(l.defaultView||l.parentWindow||t)}for(i=0;(a=m[i++])&&!r.isPropagationStopped();)r.type=i>1?d:c.bindType||f,(p=(Dr.get(a,"events")||{})[r.type]&&Dr.get(a,"handle"))&&p.apply(a,n),(p=s&&a[s])&&p.apply&&Nr(a)&&(r.result=p.apply(a,n),!1===r.result&&r.preventDefault());return r.type=f,o||r.isDefaultPrevented()||c._default&&!1!==c._default.apply(m.pop(),n)||!Nr(e)||s&&pr.isFunction(e[f])&&!pr.isWindow(e)&&((l=e[s])&&(e[s]=null),pr.event.triggered=f,e[f](),pr.event.triggered=void 0,l&&(e[s]=l)),r.result}},simulate:function(r,n,t){var e=pr.extend(new pr.Event,t,{type:r,isSimulated:!0});pr.event.trigger(e,null,n)}}),pr.fn.extend({trigger:function(r,n){return this.each(function(){pr.event.trigger(r,n,this)})},triggerHandler:function(r,n){var t=this[0];if(t)return pr.event.trigger(r,n,t,!0)}}),pr.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(r,n){pr.fn[n]=function(r,t){return arguments.length>0?this.on(n,null,r,t):this.trigger(n)}}),pr.fn.extend({hover:function(r,n){return this.mouseenter(r).mouseleave(n||r)}}),sr.focusin="onfocusin"in t,sr.focusin||pr.each({focus:"focusin",blur:"focusout"},function(r,n){var t=function(r){pr.event.simulate(n,r.target,pr.event.fix(r))};pr.event.special[n]={setup:function(){var e=this.ownerDocument||this,o=Dr.access(e,n);o||e.addEventListener(r,t,!0),Dr.access(e,n,(o||0)+1)},teardown:function(){var e=this.ownerDocument||this,o=Dr.access(e,n)-1;o?Dr.access(e,n,o):(e.removeEventListener(r,t,!0),Dr.remove(e,n))}}});var yn=t.location,wn=pr.now(),kn=/\?/;pr.parseXML=function(r){var n;if(!r||"string"!=typeof r)return null;try{n=(new t.DOMParser).parseFromString(r,"text/xml")}catch(r){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||pr.error("Invalid XML: "+r),n};var Cn=/\[\]$/,Tn=/\r?\n/g,jn=/^(?:submit|button|image|reset|file)$/i,En=/^(?:input|select|textarea|keygen)/i;pr.param=function(r,n){var t,e=[],o=function(r,n){var t=pr.isFunction(n)?n():n;e[e.length]=encodeURIComponent(r)+"="+encodeURIComponent(null==t?"":t)};if(Array.isArray(r)||r.jquery&&!pr.isPlainObject(r))pr.each(r,function(){o(this.name,this.value)});else for(t in r)V(t,r[t],n,o);return e.join("&")},pr.fn.extend({serialize:function(){return pr.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var r=pr.prop(this,"elements");return r?pr.makeArray(r):this}).filter(function(){var r=this.type;return this.name&&!pr(this).is(":disabled")&&En.test(this.nodeName)&&!jn.test(r)&&(this.checked||!Pr.test(r))}).map(function(r,n){var t=pr(this).val();return null==t?null:Array.isArray(t)?pr.map(t,function(r){return{name:n.name,value:r.replace(Tn,"\r\n")}}):{name:n.name,value:t.replace(Tn,"\r\n")}}).get()}});var Sn=/%20/g,An=/#.*$/,Nn=/([?&])_=[^&]*/,Dn=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ln=/^(?:GET|HEAD)$/,qn=/^\/\//,zn={},On={},Hn="*/".concat("*"),Fn=K.createElement("a");Fn.href=yn.href,pr.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(yn.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Hn,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":pr.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(r,n){return n?J(J(r,pr.ajaxSettings),n):J(pr.ajaxSettings,r)},ajaxPrefilter:G(zn),ajaxTransport:G(On),ajax:function(r,n){function e(r,n,e,l){var s,m,f,y,w,k=n;p||(p=!0,d&&t.clearTimeout(d),o=void 0,a=l||"",C.readyState=r>0?4:0,s=r>=200&&r<300||304===r,e&&(y=function(r,n,t){for(var e,o,i,a,l=r.contents,d=r.dataTypes;"*"===d[0];)d.shift(),void 0===e&&(e=r.mimeType||n.getResponseHeader("Content-Type"));if(e)for(o in l)if(l[o]&&l[o].test(e)){d.unshift(o);break}if(d[0]in t)i=d[0];else{for(o in t){if(!d[0]||r.converters[o+" "+d[0]]){i=o;break}a||(a=o)}i=i||a}if(i)return i!==d[0]&&d.unshift(i),t[i]}(u,C,e)),y=function(r,n,t,e){var o,i,a,l,d,s={},p=r.dataTypes.slice();if(p[1])for(a in r.converters)s[a.toLowerCase()]=r.converters[a];for(i=p.shift();i;)if(r.responseFields[i]&&(t[r.responseFields[i]]=n),!d&&e&&r.dataFilter&&(n=r.dataFilter(n,r.dataType)),d=i,i=p.shift())if("*"===i)i=d;else if("*"!==d&&d!==i){if(!(a=s[d+" "+i]||s["* "+i]))for(o in s)if((l=o.split(" "))[1]===i&&(a=s[d+" "+l[0]]||s["* "+l[0]])){!0===a?a=s[o]:!0!==s[o]&&(i=l[0],p.unshift(l[1]));break}if(!0!==a)if(a&&r.throws)n=a(n);else try{n=a(n)}catch(r){return{state:"parsererror",error:a?r:"No conversion from "+d+" to "+i}}}return{state:"success",data:n}}(u,y,C,s),s?(u.ifModified&&((w=C.getResponseHeader("Last-Modified"))&&(pr.lastModified[i]=w),(w=C.getResponseHeader("etag"))&&(pr.etag[i]=w)),204===r||"HEAD"===u.type?k="nocontent":304===r?k="notmodified":(k=y.state,m=y.data,s=!(f=y.error))):(f=k,!r&&k||(k="error",r<0&&(r=0))),C.status=r,C.statusText=(n||k)+"",s?h.resolveWith(g,[m,k,C]):h.rejectWith(g,[C,k,f]),C.statusCode(v),v=void 0,c&&b.trigger(s?"ajaxSuccess":"ajaxError",[C,u,s?m:f]),x.fireWith(g,[C,k]),c&&(b.trigger("ajaxComplete",[C,u]),--pr.active||pr.event.trigger("ajaxStop")))}"object"==typeof r&&(n=r,r=void 0),n=n||{};var o,i,a,l,d,s,p,c,m,f,u=pr.ajaxSetup({},n),g=u.context||u,b=u.context&&(g.nodeType||g.jquery)?pr(g):pr.event,h=pr.Deferred(),x=pr.Callbacks("once memory"),v=u.statusCode||{},y={},w={},k="canceled",C={readyState:0,getResponseHeader:function(r){var n;if(p){if(!l)for(l={};n=Dn.exec(a);)l[n[1].toLowerCase()]=n[2];n=l[r.toLowerCase()]}return null==n?null:n},getAllResponseHeaders:function(){return p?a:null},setRequestHeader:function(r,n){return null==p&&(r=w[r.toLowerCase()]=w[r.toLowerCase()]||r,y[r]=n),this},overrideMimeType:function(r){return null==p&&(u.mimeType=r),this},statusCode:function(r){var n;if(r)if(p)C.always(r[C.status]);else for(n in r)v[n]=[v[n],r[n]];return this},abort:function(r){var n=r||k;return o&&o.abort(n),e(0,n),this}};if(h.promise(C),u.url=((r||u.url||yn.href)+"").replace(qn,yn.protocol+"//"),u.type=n.method||n.type||u.method||u.type,u.dataTypes=(u.dataType||"*").toLowerCase().match(jr)||[""],null==u.crossDomain){s=K.createElement("a");try{s.href=u.url,s.href=s.href,u.crossDomain=Fn.protocol+"//"+Fn.host!=s.protocol+"//"+s.host}catch(r){u.crossDomain=!0}}if(u.data&&u.processData&&"string"!=typeof u.data&&(u.data=pr.param(u.data,u.traditional)),Y(zn,u,n,C),p)return C;(c=pr.event&&u.global)&&0==pr.active++&&pr.event.trigger("ajaxStart"),u.type=u.type.toUpperCase(),u.hasContent=!Ln.test(u.type),i=u.url.replace(An,""),u.hasContent?u.data&&u.processData&&0===(u.contentType||"").indexOf("application/x-www-form-urlencoded")&&(u.data=u.data.replace(Sn,"+")):(f=u.url.slice(i.length),u.data&&(i+=(kn.test(i)?"&":"?")+u.data,delete u.data),!1===u.cache&&(i=i.replace(Nn,"$1"),f=(kn.test(i)?"&":"?")+"_="+wn+++f),u.url=i+f),u.ifModified&&(pr.lastModified[i]&&C.setRequestHeader("If-Modified-Since",pr.lastModified[i]),pr.etag[i]&&C.setRequestHeader("If-None-Match",pr.etag[i])),(u.data&&u.hasContent&&!1!==u.contentType||n.contentType)&&C.setRequestHeader("Content-Type",u.contentType),C.setRequestHeader("Accept",u.dataTypes[0]&&u.accepts[u.dataTypes[0]]?u.accepts[u.dataTypes[0]]+("*"!==u.dataTypes[0]?", "+Hn+"; q=0.01":""):u.accepts["*"]);for(m in u.headers)C.setRequestHeader(m,u.headers[m]);if(u.beforeSend&&(!1===u.beforeSend.call(g,C,u)||p))return C.abort();if(k="abort",x.add(u.complete),C.done(u.success),C.fail(u.error),o=Y(On,u,n,C)){if(C.readyState=1,c&&b.trigger("ajaxSend",[C,u]),p)return C;u.async&&u.timeout>0&&(d=t.setTimeout(function(){C.abort("timeout")},u.timeout));try{p=!1,o.send(y,e)}catch(r){if(p)throw r;e(-1,r)}}else e(-1,"No Transport");return C},getJSON:function(r,n,t){return pr.get(r,n,t,"json")},getScript:function(r,n){return pr.get(r,void 0,n,"script")}}),pr.each(["get","post"],function(r,n){pr[n]=function(r,t,e,o){return pr.isFunction(t)&&(o=o||e,e=t,t=void 0),pr.ajax(pr.extend({url:r,type:n,dataType:o,data:t,success:e},pr.isPlainObject(r)&&r))}}),pr._evalUrl=function(r){return pr.ajax({url:r,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},pr.fn.extend({wrapAll:function(r){var n;return this[0]&&(pr.isFunction(r)&&(r=r.call(this[0])),n=pr(r,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&n.insertBefore(this[0]),n.map(function(){for(var r=this;r.firstElementChild;)r=r.firstElementChild;return r}).append(this)),this},wrapInner:function(r){return pr.isFunction(r)?this.each(function(n){pr(this).wrapInner(r.call(this,n))}):this.each(function(){var n=pr(this),t=n.contents();t.length?t.wrapAll(r):n.append(r)})},wrap:function(r){var n=pr.isFunction(r);return this.each(function(t){pr(this).wrapAll(n?r.call(this,t):r)})},unwrap:function(r){return this.parent(r).not("body").each(function(){pr(this).replaceWith(this.childNodes)}),this}}),pr.expr.pseudos.hidden=function(r){return!pr.expr.pseudos.visible(r)},pr.expr.pseudos.visible=function(r){return!!(r.offsetWidth||r.offsetHeight||r.getClientRects().length)},pr.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(r){}};var Mn={0:200,1223:204},Rn=pr.ajaxSettings.xhr();sr.cors=!!Rn&&"withCredentials"in Rn,sr.ajax=Rn=!!Rn,pr.ajaxTransport(function(r){var n,e;if(sr.cors||Rn&&!r.crossDomain)return{send:function(o,i){var a,l=r.xhr();if(l.open(r.type,r.url,r.async,r.username,r.password),r.xhrFields)for(a in r.xhrFields)l[a]=r.xhrFields[a];r.mimeType&&l.overrideMimeType&&l.overrideMimeType(r.mimeType),r.crossDomain||o["X-Requested-With"]||(o["X-Requested-With"]="XMLHttpRequest");for(a in o)l.setRequestHeader(a,o[a]);n=function(r){return function(){n&&(n=e=l.onload=l.onerror=l.onabort=l.onreadystatechange=null,"abort"===r?l.abort():"error"===r?"number"!=typeof l.status?i(0,"error"):i(l.status,l.statusText):i(Mn[l.status]||l.status,l.statusText,"text"!==(l.responseType||"text")||"string"!=typeof l.responseText?{binary:l.response}:{text:l.responseText},l.getAllResponseHeaders()))}},l.onload=n(),e=l.onerror=n("error"),void 0!==l.onabort?l.onabort=e:l.onreadystatechange=function(){4===l.readyState&&t.setTimeout(function(){n&&e()})},n=n("abort");try{l.send(r.hasContent&&r.data||null)}catch(r){if(n)throw r}},abort:function(){n&&n()}}}),pr.ajaxPrefilter(function(r){r.crossDomain&&(r.contents.script=!1)}),pr.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(r){return pr.globalEval(r),r}}}),pr.ajaxPrefilter("script",function(r){void 0===r.cache&&(r.cache=!1),r.crossDomain&&(r.type="GET")}),pr.ajaxTransport("script",function(r){if(r.crossDomain){var n,t;return{send:function(e,o){n=pr("<script>").prop({charset:r.scriptCharset,src:r.url}).on("load error",t=function(r){n.remove(),t=null,r&&o("error"===r.type?404:200,r.type)}),K.head.appendChild(n[0])},abort:function(){t&&t()}}}});var In=[],Pn=/(=)\?(?=&|$)|\?\?/;pr.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var r=In.pop()||pr.expando+"_"+wn++;return this[r]=!0,r}}),pr.ajaxPrefilter("json jsonp",function(r,n,e){var o,i,a,l=!1!==r.jsonp&&(Pn.test(r.url)?"url":"string"==typeof r.data&&0===(r.contentType||"").indexOf("application/x-www-form-urlencoded")&&Pn.test(r.data)&&"data");if(l||"jsonp"===r.dataTypes[0])return o=r.jsonpCallback=pr.isFunction(r.jsonpCallback)?r.jsonpCallback():r.jsonpCallback,l?r[l]=r[l].replace(Pn,"$1"+o):!1!==r.jsonp&&(r.url+=(kn.test(r.url)?"&":"?")+r.jsonp+"="+o),r.converters["script json"]=function(){return a||pr.error(o+" was not called"),a[0]},r.dataTypes[0]="json",i=t[o],t[o]=function(){a=arguments},e.always(function(){void 0===i?pr(t).removeProp(o):t[o]=i,r[o]&&(r.jsonpCallback=n.jsonpCallback,In.push(o)),a&&pr.isFunction(i)&&i(a[0]),a=i=void 0}),"script"}),sr.createHTMLDocument=function(){var r=K.implementation.createHTMLDocument("").body;return r.innerHTML="<form></form><form></form>",2===r.childNodes.length}(),pr.parseHTML=function(r,n,t){if("string"!=typeof r)return[];"boolean"==typeof n&&(t=n,n=!1);var e,o,i;return n||(sr.createHTMLDocument?((e=(n=K.implementation.createHTMLDocument("")).createElement("base")).href=K.location.href,n.head.appendChild(e)):n=K),o=vr.exec(r),i=!t&&[],o?[n.createElement(o[1])]:(o=w([r],n,i),i&&i.length&&pr(i).remove(),pr.merge([],o.childNodes))},pr.fn.load=function(r,n,t){var e,o,i,a=this,l=r.indexOf(" ");return l>-1&&(e=_(r.slice(l)),r=r.slice(0,l)),pr.isFunction(n)?(t=n,n=void 0):n&&"object"==typeof n&&(o="POST"),a.length>0&&pr.ajax({url:r,type:o||"GET",dataType:"html",data:n}).done(function(r){i=arguments,a.html(e?pr("<div>").append(pr.parseHTML(r)).find(e):r)}).always(t&&function(r,n){a.each(function(){t.apply(this,i||[r.responseText,n,r])})}),this},pr.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(r,n){pr.fn[n]=function(r){return this.on(n,r)}}),pr.expr.pseudos.animated=function(r){return pr.grep(pr.timers,function(n){return r===n.elem}).length},pr.offset={setOffset:function(r,n,t){var e,o,i,a,l,d,s=pr.css(r,"position"),p=pr(r),c={};"static"===s&&(r.style.position="relative"),l=p.offset(),i=pr.css(r,"top"),d=pr.css(r,"left"),("absolute"===s||"fixed"===s)&&(i+d).indexOf("auto")>-1?(a=(e=p.position()).top,o=e.left):(a=parseFloat(i)||0,o=parseFloat(d)||0),pr.isFunction(n)&&(n=n.call(r,t,pr.extend({},l))),null!=n.top&&(c.top=n.top-l.top+a),null!=n.left&&(c.left=n.left-l.left+o),"using"in n?n.using.call(r,c):p.css(c)}},pr.fn.extend({offset:function(r){if(arguments.length)return void 0===r?this:this.each(function(n){pr.offset.setOffset(this,r,n)});var n,t,e,o,i=this[0];if(i)return i.getClientRects().length?(e=i.getBoundingClientRect(),n=i.ownerDocument,t=n.documentElement,o=n.defaultView,{top:e.top+o.pageYOffset-t.clientTop,left:e.left+o.pageXOffset-t.clientLeft}):{top:0,left:0}},position:function(){if(this[0]){var r,n,t=this[0],e={top:0,left:0};return"fixed"===pr.css(t,"position")?n=t.getBoundingClientRect():(r=this.offsetParent(),n=this.offset(),l(r[0],"html")||(e=r.offset()),e={top:e.top+pr.css(r[0],"borderTopWidth",!0),left:e.left+pr.css(r[0],"borderLeftWidth",!0)}),{top:n.top-e.top-pr.css(t,"marginTop",!0),left:n.left-e.left-pr.css(t,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var r=this.offsetParent;r&&"static"===pr.css(r,"position");)r=r.offsetParent;return r||_r})}}),pr.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(r,n){var t="pageYOffset"===n;pr.fn[r]=function(e){return Ar(this,function(r,e,o){var i;if(pr.isWindow(r)?i=r:9===r.nodeType&&(i=r.defaultView),void 0===o)return i?i[n]:r[e];i?i.scrollTo(t?i.pageXOffset:o,t?o:i.pageYOffset):r[e]=o},r,e,arguments.length)}}),pr.each(["top","left"],function(r,n){pr.cssHooks[n]=O(sr.pixelPosition,function(r,t){if(t)return t=z(r,n),nn.test(t)?pr(r).position()[n]+"px":t})}),pr.each({Height:"height",Width:"width"},function(r,n){pr.each({padding:"inner"+r,content:n,"":"outer"+r},function(t,e){pr.fn[e]=function(o,i){var a=arguments.length&&(t||"boolean"!=typeof o),l=t||(!0===o||!0===i?"margin":"border");return Ar(this,function(n,t,o){var i;return pr.isWindow(n)?0===e.indexOf("outer")?n["inner"+r]:n.document.documentElement["client"+r]:9===n.nodeType?(i=n.documentElement,Math.max(n.body["scroll"+r],i["scroll"+r],n.body["offset"+r],i["offset"+r],i["client"+r])):void 0===o?pr.css(n,t,l):pr.style(n,t,o,l)},n,a?o:void 0,a)}})}),pr.fn.extend({bind:function(r,n,t){return this.on(r,null,n,t)},unbind:function(r,n){return this.off(r,null,n)},delegate:function(r,n,t,e){return this.on(n,r,t,e)},undelegate:function(r,n,t){return 1===arguments.length?this.off(r,"**"):this.off(n,r||"**",t)}}),pr.holdReady=function(r){r?pr.readyWait++:pr.ready(!0)},pr.isArray=Array.isArray,pr.parseJSON=JSON.parse,pr.nodeName=l,void 0===(e=function(){return pr}.apply(n,[]))||(r.exports=e);var Bn=t.jQuery,Wn=t.$;return pr.noConflict=function(r){return t.$===pr&&(t.$=Wn),r&&t.jQuery===pr&&(t.jQuery=Bn),pr},o||(t.jQuery=t.$=pr),pr})},function(r,n,t){var e=t(3);"string"==typeof e&&(e=[[r.i,e,""]]);var o={hmr:!0};o.transform=void 0;t(5)(e,o);e.locals&&(r.exports=e.locals)},function(r,n,t){(r.exports=t(4)(void 0)).push([r.i,'/*!\r\n * Bootstrap v4.0.0-beta.2 (https://getbootstrap.com)\r\n * Copyright 2011-2017 The Bootstrap Authors\r\n * Copyright 2011-2017 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n */\r\n:root {\r\n  --blue: #007bff;\r\n  --indigo: #6610f2;\r\n  --purple: #6f42c1;\r\n  --pink: #e83e8c;\r\n  --red: #dc3545;\r\n  --orange: #fd7e14;\r\n  --yellow: #ffc107;\r\n  --green: #28a745;\r\n  --teal: #20c997;\r\n  --cyan: #17a2b8;\r\n  --white: #fff;\r\n  --gray: #868e96;\r\n  --gray-dark: #343a40;\r\n  --primary: #007bff;\r\n  --secondary: #868e96;\r\n  --success: #28a745;\r\n  --info: #17a2b8;\r\n  --warning: #ffc107;\r\n  --danger: #dc3545;\r\n  --light: #f8f9fa;\r\n  --dark: #343a40;\r\n  --breakpoint-xs: 0;\r\n  --breakpoint-sm: 576px;\r\n  --breakpoint-md: 768px;\r\n  --breakpoint-lg: 992px;\r\n  --breakpoint-xl: 1200px;\r\n  --font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\r\n  --font-family-monospace: "SFMono-Regular", Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }\r\n\r\n@media print {\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    text-shadow: none !important;\r\n    box-shadow: none !important; }\r\n\r\n  a,\r\n  a:visited {\r\n    text-decoration: underline; }\r\n\r\n  abbr[title]::after {\r\n    content: " (" attr(title) ")"; }\r\n\r\n  pre {\r\n    white-space: pre-wrap !important; }\r\n\r\n  pre,\r\n  blockquote {\r\n    border: 1px solid #999;\r\n    page-break-inside: avoid; }\r\n\r\n  thead {\r\n    display: table-header-group; }\r\n\r\n  tr,\r\n  img {\r\n    page-break-inside: avoid; }\r\n\r\n  p,\r\n  h2,\r\n  h3 {\r\n    orphans: 3;\r\n    widows: 3; }\r\n\r\n  h2,\r\n  h3 {\r\n    page-break-after: avoid; }\r\n\r\n  .navbar {\r\n    display: none; }\r\n\r\n  .badge {\r\n    border: 1px solid #000; }\r\n\r\n  .table {\r\n    border-collapse: collapse !important; }\r\n    .table td,\r\n    .table th {\r\n      background-color: #fff !important; }\r\n\r\n  .table-bordered th,\r\n  .table-bordered td {\r\n    border: 1px solid #ddd !important; } }\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box; }\r\n\r\nhtml {\r\n  font-family: sans-serif;\r\n  line-height: 1.15;\r\n  -webkit-text-size-adjust: 100%;\r\n  -ms-text-size-adjust: 100%;\r\n  -ms-overflow-style: scrollbar;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }\r\n\r\n@-ms-viewport {\r\n  width: device-width; }\r\narticle, aside, dialog, figcaption, figure, footer, header, hgroup, main, nav, section {\r\n  display: block; }\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  color: #212529;\r\n  text-align: left;\r\n  background-color: #fff; }\r\n\r\n[tabindex="-1"]:focus {\r\n  outline: none !important; }\r\n\r\nhr {\r\n  box-sizing: content-box;\r\n  height: 0;\r\n  overflow: visible; }\r\n\r\nh1, h2, h3, h4, h5, h6 {\r\n  margin-top: 0;\r\n  margin-bottom: 0.5rem; }\r\n\r\np {\r\n  margin-top: 0;\r\n  margin-bottom: 1rem; }\r\n\r\nabbr[title],\r\nabbr[data-original-title] {\r\n  text-decoration: underline;\r\n  text-decoration: underline dotted;\r\n  cursor: help;\r\n  border-bottom: 0; }\r\n\r\naddress {\r\n  margin-bottom: 1rem;\r\n  font-style: normal;\r\n  line-height: inherit; }\r\n\r\nol,\r\nul,\r\ndl {\r\n  margin-top: 0;\r\n  margin-bottom: 1rem; }\r\n\r\nol ol,\r\nul ul,\r\nol ul,\r\nul ol {\r\n  margin-bottom: 0; }\r\n\r\ndt {\r\n  font-weight: 700; }\r\n\r\ndd {\r\n  margin-bottom: .5rem;\r\n  margin-left: 0; }\r\n\r\nblockquote {\r\n  margin: 0 0 1rem; }\r\n\r\ndfn {\r\n  font-style: italic; }\r\n\r\nb,\r\nstrong {\r\n  font-weight: bolder; }\r\n\r\nsmall {\r\n  font-size: 80%; }\r\n\r\nsub,\r\nsup {\r\n  position: relative;\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  vertical-align: baseline; }\r\n\r\nsub {\r\n  bottom: -.25em; }\r\n\r\nsup {\r\n  top: -.5em; }\r\n\r\na {\r\n  color: #007bff;\r\n  text-decoration: none;\r\n  background-color: transparent;\r\n  -webkit-text-decoration-skip: objects; }\r\n  a:hover {\r\n    color: #0056b3;\r\n    text-decoration: underline; }\r\n\r\na:not([href]):not([tabindex]) {\r\n  color: inherit;\r\n  text-decoration: none; }\r\n  a:not([href]):not([tabindex]):focus, a:not([href]):not([tabindex]):hover {\r\n    color: inherit;\r\n    text-decoration: none; }\r\n  a:not([href]):not([tabindex]):focus {\r\n    outline: 0; }\r\n\r\npre,\r\ncode,\r\nkbd,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em; }\r\n\r\npre {\r\n  margin-top: 0;\r\n  margin-bottom: 1rem;\r\n  overflow: auto;\r\n  -ms-overflow-style: scrollbar; }\r\n\r\nfigure {\r\n  margin: 0 0 1rem; }\r\n\r\nimg {\r\n  vertical-align: middle;\r\n  border-style: none; }\r\n\r\nsvg:not(:root) {\r\n  overflow: hidden; }\r\n\r\na,\r\narea,\r\nbutton,\r\n[role="button"],\r\ninput:not([type="range"]),\r\nlabel,\r\nselect,\r\nsummary,\r\ntextarea {\r\n  touch-action: manipulation; }\r\n\r\ntable {\r\n  border-collapse: collapse; }\r\n\r\ncaption {\r\n  padding-top: 0.75rem;\r\n  padding-bottom: 0.75rem;\r\n  color: #868e96;\r\n  text-align: left;\r\n  caption-side: bottom; }\r\n\r\nth {\r\n  text-align: inherit; }\r\n\r\nlabel {\r\n  display: inline-block;\r\n  margin-bottom: .5rem; }\r\n\r\nbutton {\r\n  border-radius: 0; }\r\n\r\nbutton:focus {\r\n  outline: 1px dotted;\r\n  outline: 5px auto -webkit-focus-ring-color; }\r\n\r\ninput,\r\nbutton,\r\nselect,\r\noptgroup,\r\ntextarea {\r\n  margin: 0;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  line-height: inherit; }\r\n\r\nbutton,\r\ninput {\r\n  overflow: visible; }\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none; }\r\n\r\nbutton,\r\nhtml [type="button"],\r\n[type="reset"],\r\n[type="submit"] {\r\n  -webkit-appearance: button; }\r\n\r\nbutton::-moz-focus-inner,\r\n[type="button"]::-moz-focus-inner,\r\n[type="reset"]::-moz-focus-inner,\r\n[type="submit"]::-moz-focus-inner {\r\n  padding: 0;\r\n  border-style: none; }\r\n\r\ninput[type="radio"],\r\ninput[type="checkbox"] {\r\n  box-sizing: border-box;\r\n  padding: 0; }\r\n\r\ninput[type="date"],\r\ninput[type="time"],\r\ninput[type="datetime-local"],\r\ninput[type="month"] {\r\n  -webkit-appearance: listbox; }\r\n\r\ntextarea {\r\n  overflow: auto;\r\n  resize: vertical; }\r\n\r\nfieldset {\r\n  min-width: 0;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: 0; }\r\n\r\nlegend {\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  padding: 0;\r\n  margin-bottom: .5rem;\r\n  font-size: 1.5rem;\r\n  line-height: inherit;\r\n  color: inherit;\r\n  white-space: normal; }\r\n\r\nprogress {\r\n  vertical-align: baseline; }\r\n\r\n[type="number"]::-webkit-inner-spin-button,\r\n[type="number"]::-webkit-outer-spin-button {\r\n  height: auto; }\r\n\r\n[type="search"] {\r\n  outline-offset: -2px;\r\n  -webkit-appearance: none; }\r\n\r\n[type="search"]::-webkit-search-cancel-button,\r\n[type="search"]::-webkit-search-decoration {\r\n  -webkit-appearance: none; }\r\n\r\n::-webkit-file-upload-button {\r\n  font: inherit;\r\n  -webkit-appearance: button; }\r\n\r\noutput {\r\n  display: inline-block; }\r\n\r\nsummary {\r\n  display: list-item; }\r\n\r\ntemplate {\r\n  display: none; }\r\n\r\n[hidden] {\r\n  display: none !important; }\r\n\r\nh1, h2, h3, h4, h5, h6,\r\n.h1, .h2, .h3, .h4, .h5, .h6 {\r\n  margin-bottom: 0.5rem;\r\n  font-family: inherit;\r\n  font-weight: 500;\r\n  line-height: 1.2;\r\n  color: inherit; }\r\n\r\nh1, .h1 {\r\n  font-size: 2.5rem; }\r\n\r\nh2, .h2 {\r\n  font-size: 2rem; }\r\n\r\nh3, .h3 {\r\n  font-size: 1.75rem; }\r\n\r\nh4, .h4 {\r\n  font-size: 1.5rem; }\r\n\r\nh5, .h5 {\r\n  font-size: 1.25rem; }\r\n\r\nh6, .h6 {\r\n  font-size: 1rem; }\r\n\r\n.lead {\r\n  font-size: 1.25rem;\r\n  font-weight: 300; }\r\n\r\n.display-1 {\r\n  font-size: 6rem;\r\n  font-weight: 300;\r\n  line-height: 1.2; }\r\n\r\n.display-2 {\r\n  font-size: 5.5rem;\r\n  font-weight: 300;\r\n  line-height: 1.2; }\r\n\r\n.display-3 {\r\n  font-size: 4.5rem;\r\n  font-weight: 300;\r\n  line-height: 1.2; }\r\n\r\n.display-4 {\r\n  font-size: 3.5rem;\r\n  font-weight: 300;\r\n  line-height: 1.2; }\r\n\r\nhr {\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  border: 0;\r\n  border-top: 1px solid rgba(0, 0, 0, 0.1); }\r\n\r\nsmall,\r\n.small {\r\n  font-size: 80%;\r\n  font-weight: 400; }\r\n\r\nmark,\r\n.mark {\r\n  padding: 0.2em;\r\n  background-color: #fcf8e3; }\r\n\r\n.list-unstyled {\r\n  padding-left: 0;\r\n  list-style: none; }\r\n\r\n.list-inline {\r\n  padding-left: 0;\r\n  list-style: none; }\r\n\r\n.list-inline-item {\r\n  display: inline-block; }\r\n  .list-inline-item:not(:last-child) {\r\n    margin-right: 5px; }\r\n\r\n.initialism {\r\n  font-size: 90%;\r\n  text-transform: uppercase; }\r\n\r\n.blockquote {\r\n  margin-bottom: 1rem;\r\n  font-size: 1.25rem; }\r\n\r\n.blockquote-footer {\r\n  display: block;\r\n  font-size: 80%;\r\n  color: #868e96; }\r\n  .blockquote-footer::before {\r\n    content: "\\2014   \\A0"; }\r\n\r\n.img-fluid {\r\n  max-width: 100%;\r\n  height: auto; }\r\n\r\n.img-thumbnail {\r\n  padding: 0.25rem;\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 0.25rem;\r\n  transition: all 0.2s ease-in-out;\r\n  max-width: 100%;\r\n  height: auto; }\r\n\r\n.figure {\r\n  display: inline-block; }\r\n\r\n.figure-img {\r\n  margin-bottom: 0.5rem;\r\n  line-height: 1; }\r\n\r\n.figure-caption {\r\n  font-size: 90%;\r\n  color: #868e96; }\r\n\r\n.container {\r\n  width: 100%;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto; }\r\n  @media (min-width: 576px) {\r\n    .container {\r\n      max-width: 540px; } }\r\n  @media (min-width: 768px) {\r\n    .container {\r\n      max-width: 720px; } }\r\n  @media (min-width: 992px) {\r\n    .container {\r\n      max-width: 960px; } }\r\n  @media (min-width: 1200px) {\r\n    .container {\r\n      max-width: 1140px; } }\r\n\r\n.container-fluid {\r\n  width: 100%;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto; }\r\n\r\n.row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-right: -15px;\r\n  margin-left: -15px; }\r\n\r\n.no-gutters {\r\n  margin-right: 0;\r\n  margin-left: 0; }\r\n  .no-gutters > .col,\r\n  .no-gutters > [class*="col-"] {\r\n    padding-right: 0;\r\n    padding-left: 0; }\r\n\r\n.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col,\r\n.col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm,\r\n.col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md,\r\n.col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg,\r\n.col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl,\r\n.col-xl-auto {\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 1px;\r\n  padding-right: 15px;\r\n  padding-left: 15px; }\r\n\r\n.col {\r\n  flex-basis: 0;\r\n  flex-grow: 1;\r\n  max-width: 100%; }\r\n\r\n.col-auto {\r\n  flex: 0 0 auto;\r\n  width: auto;\r\n  max-width: none; }\r\n\r\n.col-1 {\r\n  flex: 0 0 8.3333333333%;\r\n  max-width: 8.3333333333%; }\r\n\r\n.col-2 {\r\n  flex: 0 0 16.6666666667%;\r\n  max-width: 16.6666666667%; }\r\n\r\n.col-3 {\r\n  flex: 0 0 25%;\r\n  max-width: 25%; }\r\n\r\n.col-4 {\r\n  flex: 0 0 33.3333333333%;\r\n  max-width: 33.3333333333%; }\r\n\r\n.col-5 {\r\n  flex: 0 0 41.6666666667%;\r\n  max-width: 41.6666666667%; }\r\n\r\n.col-6 {\r\n  flex: 0 0 50%;\r\n  max-width: 50%; }\r\n\r\n.col-7 {\r\n  flex: 0 0 58.3333333333%;\r\n  max-width: 58.3333333333%; }\r\n\r\n.col-8 {\r\n  flex: 0 0 66.6666666667%;\r\n  max-width: 66.6666666667%; }\r\n\r\n.col-9 {\r\n  flex: 0 0 75%;\r\n  max-width: 75%; }\r\n\r\n.col-10 {\r\n  flex: 0 0 83.3333333333%;\r\n  max-width: 83.3333333333%; }\r\n\r\n.col-11 {\r\n  flex: 0 0 91.6666666667%;\r\n  max-width: 91.6666666667%; }\r\n\r\n.col-12 {\r\n  flex: 0 0 100%;\r\n  max-width: 100%; }\r\n\r\n.order-first {\r\n  order: -1; }\r\n\r\n.order-1 {\r\n  order: 1; }\r\n\r\n.order-2 {\r\n  order: 2; }\r\n\r\n.order-3 {\r\n  order: 3; }\r\n\r\n.order-4 {\r\n  order: 4; }\r\n\r\n.order-5 {\r\n  order: 5; }\r\n\r\n.order-6 {\r\n  order: 6; }\r\n\r\n.order-7 {\r\n  order: 7; }\r\n\r\n.order-8 {\r\n  order: 8; }\r\n\r\n.order-9 {\r\n  order: 9; }\r\n\r\n.order-10 {\r\n  order: 10; }\r\n\r\n.order-11 {\r\n  order: 11; }\r\n\r\n.order-12 {\r\n  order: 12; }\r\n\r\n.offset-1 {\r\n  margin-left: 8.3333333333%; }\r\n\r\n.offset-2 {\r\n  margin-left: 16.6666666667%; }\r\n\r\n.offset-3 {\r\n  margin-left: 25%; }\r\n\r\n.offset-4 {\r\n  margin-left: 33.3333333333%; }\r\n\r\n.offset-5 {\r\n  margin-left: 41.6666666667%; }\r\n\r\n.offset-6 {\r\n  margin-left: 50%; }\r\n\r\n.offset-7 {\r\n  margin-left: 58.3333333333%; }\r\n\r\n.offset-8 {\r\n  margin-left: 66.6666666667%; }\r\n\r\n.offset-9 {\r\n  margin-left: 75%; }\r\n\r\n.offset-10 {\r\n  margin-left: 83.3333333333%; }\r\n\r\n.offset-11 {\r\n  margin-left: 91.6666666667%; }\r\n\r\n@media (min-width: 576px) {\r\n  .col-sm {\r\n    flex-basis: 0;\r\n    flex-grow: 1;\r\n    max-width: 100%; }\r\n\r\n  .col-sm-auto {\r\n    flex: 0 0 auto;\r\n    width: auto;\r\n    max-width: none; }\r\n\r\n  .col-sm-1 {\r\n    flex: 0 0 8.3333333333%;\r\n    max-width: 8.3333333333%; }\r\n\r\n  .col-sm-2 {\r\n    flex: 0 0 16.6666666667%;\r\n    max-width: 16.6666666667%; }\r\n\r\n  .col-sm-3 {\r\n    flex: 0 0 25%;\r\n    max-width: 25%; }\r\n\r\n  .col-sm-4 {\r\n    flex: 0 0 33.3333333333%;\r\n    max-width: 33.3333333333%; }\r\n\r\n  .col-sm-5 {\r\n    flex: 0 0 41.6666666667%;\r\n    max-width: 41.6666666667%; }\r\n\r\n  .col-sm-6 {\r\n    flex: 0 0 50%;\r\n    max-width: 50%; }\r\n\r\n  .col-sm-7 {\r\n    flex: 0 0 58.3333333333%;\r\n    max-width: 58.3333333333%; }\r\n\r\n  .col-sm-8 {\r\n    flex: 0 0 66.6666666667%;\r\n    max-width: 66.6666666667%; }\r\n\r\n  .col-sm-9 {\r\n    flex: 0 0 75%;\r\n    max-width: 75%; }\r\n\r\n  .col-sm-10 {\r\n    flex: 0 0 83.3333333333%;\r\n    max-width: 83.3333333333%; }\r\n\r\n  .col-sm-11 {\r\n    flex: 0 0 91.6666666667%;\r\n    max-width: 91.6666666667%; }\r\n\r\n  .col-sm-12 {\r\n    flex: 0 0 100%;\r\n    max-width: 100%; }\r\n\r\n  .order-sm-first {\r\n    order: -1; }\r\n\r\n  .order-sm-1 {\r\n    order: 1; }\r\n\r\n  .order-sm-2 {\r\n    order: 2; }\r\n\r\n  .order-sm-3 {\r\n    order: 3; }\r\n\r\n  .order-sm-4 {\r\n    order: 4; }\r\n\r\n  .order-sm-5 {\r\n    order: 5; }\r\n\r\n  .order-sm-6 {\r\n    order: 6; }\r\n\r\n  .order-sm-7 {\r\n    order: 7; }\r\n\r\n  .order-sm-8 {\r\n    order: 8; }\r\n\r\n  .order-sm-9 {\r\n    order: 9; }\r\n\r\n  .order-sm-10 {\r\n    order: 10; }\r\n\r\n  .order-sm-11 {\r\n    order: 11; }\r\n\r\n  .order-sm-12 {\r\n    order: 12; }\r\n\r\n  .offset-sm-0 {\r\n    margin-left: 0; }\r\n\r\n  .offset-sm-1 {\r\n    margin-left: 8.3333333333%; }\r\n\r\n  .offset-sm-2 {\r\n    margin-left: 16.6666666667%; }\r\n\r\n  .offset-sm-3 {\r\n    margin-left: 25%; }\r\n\r\n  .offset-sm-4 {\r\n    margin-left: 33.3333333333%; }\r\n\r\n  .offset-sm-5 {\r\n    margin-left: 41.6666666667%; }\r\n\r\n  .offset-sm-6 {\r\n    margin-left: 50%; }\r\n\r\n  .offset-sm-7 {\r\n    margin-left: 58.3333333333%; }\r\n\r\n  .offset-sm-8 {\r\n    margin-left: 66.6666666667%; }\r\n\r\n  .offset-sm-9 {\r\n    margin-left: 75%; }\r\n\r\n  .offset-sm-10 {\r\n    margin-left: 83.3333333333%; }\r\n\r\n  .offset-sm-11 {\r\n    margin-left: 91.6666666667%; } }\r\n@media (min-width: 768px) {\r\n  .col-md {\r\n    flex-basis: 0;\r\n    flex-grow: 1;\r\n    max-width: 100%; }\r\n\r\n  .col-md-auto {\r\n    flex: 0 0 auto;\r\n    width: auto;\r\n    max-width: none; }\r\n\r\n  .col-md-1 {\r\n    flex: 0 0 8.3333333333%;\r\n    max-width: 8.3333333333%; }\r\n\r\n  .col-md-2 {\r\n    flex: 0 0 16.6666666667%;\r\n    max-width: 16.6666666667%; }\r\n\r\n  .col-md-3 {\r\n    flex: 0 0 25%;\r\n    max-width: 25%; }\r\n\r\n  .col-md-4 {\r\n    flex: 0 0 33.3333333333%;\r\n    max-width: 33.3333333333%; }\r\n\r\n  .col-md-5 {\r\n    flex: 0 0 41.6666666667%;\r\n    max-width: 41.6666666667%; }\r\n\r\n  .col-md-6 {\r\n    flex: 0 0 50%;\r\n    max-width: 50%; }\r\n\r\n  .col-md-7 {\r\n    flex: 0 0 58.3333333333%;\r\n    max-width: 58.3333333333%; }\r\n\r\n  .col-md-8 {\r\n    flex: 0 0 66.6666666667%;\r\n    max-width: 66.6666666667%; }\r\n\r\n  .col-md-9 {\r\n    flex: 0 0 75%;\r\n    max-width: 75%; }\r\n\r\n  .col-md-10 {\r\n    flex: 0 0 83.3333333333%;\r\n    max-width: 83.3333333333%; }\r\n\r\n  .col-md-11 {\r\n    flex: 0 0 91.6666666667%;\r\n    max-width: 91.6666666667%; }\r\n\r\n  .col-md-12 {\r\n    flex: 0 0 100%;\r\n    max-width: 100%; }\r\n\r\n  .order-md-first {\r\n    order: -1; }\r\n\r\n  .order-md-1 {\r\n    order: 1; }\r\n\r\n  .order-md-2 {\r\n    order: 2; }\r\n\r\n  .order-md-3 {\r\n    order: 3; }\r\n\r\n  .order-md-4 {\r\n    order: 4; }\r\n\r\n  .order-md-5 {\r\n    order: 5; }\r\n\r\n  .order-md-6 {\r\n    order: 6; }\r\n\r\n  .order-md-7 {\r\n    order: 7; }\r\n\r\n  .order-md-8 {\r\n    order: 8; }\r\n\r\n  .order-md-9 {\r\n    order: 9; }\r\n\r\n  .order-md-10 {\r\n    order: 10; }\r\n\r\n  .order-md-11 {\r\n    order: 11; }\r\n\r\n  .order-md-12 {\r\n    order: 12; }\r\n\r\n  .offset-md-0 {\r\n    margin-left: 0; }\r\n\r\n  .offset-md-1 {\r\n    margin-left: 8.3333333333%; }\r\n\r\n  .offset-md-2 {\r\n    margin-left: 16.6666666667%; }\r\n\r\n  .offset-md-3 {\r\n    margin-left: 25%; }\r\n\r\n  .offset-md-4 {\r\n    margin-left: 33.3333333333%; }\r\n\r\n  .offset-md-5 {\r\n    margin-left: 41.6666666667%; }\r\n\r\n  .offset-md-6 {\r\n    margin-left: 50%; }\r\n\r\n  .offset-md-7 {\r\n    margin-left: 58.3333333333%; }\r\n\r\n  .offset-md-8 {\r\n    margin-left: 66.6666666667%; }\r\n\r\n  .offset-md-9 {\r\n    margin-left: 75%; }\r\n\r\n  .offset-md-10 {\r\n    margin-left: 83.3333333333%; }\r\n\r\n  .offset-md-11 {\r\n    margin-left: 91.6666666667%; } }\r\n@media (min-width: 992px) {\r\n  .col-lg {\r\n    flex-basis: 0;\r\n    flex-grow: 1;\r\n    max-width: 100%; }\r\n\r\n  .col-lg-auto {\r\n    flex: 0 0 auto;\r\n    width: auto;\r\n    max-width: none; }\r\n\r\n  .col-lg-1 {\r\n    flex: 0 0 8.3333333333%;\r\n    max-width: 8.3333333333%; }\r\n\r\n  .col-lg-2 {\r\n    flex: 0 0 16.6666666667%;\r\n    max-width: 16.6666666667%; }\r\n\r\n  .col-lg-3 {\r\n    flex: 0 0 25%;\r\n    max-width: 25%; }\r\n\r\n  .col-lg-4 {\r\n    flex: 0 0 33.3333333333%;\r\n    max-width: 33.3333333333%; }\r\n\r\n  .col-lg-5 {\r\n    flex: 0 0 41.6666666667%;\r\n    max-width: 41.6666666667%; }\r\n\r\n  .col-lg-6 {\r\n    flex: 0 0 50%;\r\n    max-width: 50%; }\r\n\r\n  .col-lg-7 {\r\n    flex: 0 0 58.3333333333%;\r\n    max-width: 58.3333333333%; }\r\n\r\n  .col-lg-8 {\r\n    flex: 0 0 66.6666666667%;\r\n    max-width: 66.6666666667%; }\r\n\r\n  .col-lg-9 {\r\n    flex: 0 0 75%;\r\n    max-width: 75%; }\r\n\r\n  .col-lg-10 {\r\n    flex: 0 0 83.3333333333%;\r\n    max-width: 83.3333333333%; }\r\n\r\n  .col-lg-11 {\r\n    flex: 0 0 91.6666666667%;\r\n    max-width: 91.6666666667%; }\r\n\r\n  .col-lg-12 {\r\n    flex: 0 0 100%;\r\n    max-width: 100%; }\r\n\r\n  .order-lg-first {\r\n    order: -1; }\r\n\r\n  .order-lg-1 {\r\n    order: 1; }\r\n\r\n  .order-lg-2 {\r\n    order: 2; }\r\n\r\n  .order-lg-3 {\r\n    order: 3; }\r\n\r\n  .order-lg-4 {\r\n    order: 4; }\r\n\r\n  .order-lg-5 {\r\n    order: 5; }\r\n\r\n  .order-lg-6 {\r\n    order: 6; }\r\n\r\n  .order-lg-7 {\r\n    order: 7; }\r\n\r\n  .order-lg-8 {\r\n    order: 8; }\r\n\r\n  .order-lg-9 {\r\n    order: 9; }\r\n\r\n  .order-lg-10 {\r\n    order: 10; }\r\n\r\n  .order-lg-11 {\r\n    order: 11; }\r\n\r\n  .order-lg-12 {\r\n    order: 12; }\r\n\r\n  .offset-lg-0 {\r\n    margin-left: 0; }\r\n\r\n  .offset-lg-1 {\r\n    margin-left: 8.3333333333%; }\r\n\r\n  .offset-lg-2 {\r\n    margin-left: 16.6666666667%; }\r\n\r\n  .offset-lg-3 {\r\n    margin-left: 25%; }\r\n\r\n  .offset-lg-4 {\r\n    margin-left: 33.3333333333%; }\r\n\r\n  .offset-lg-5 {\r\n    margin-left: 41.6666666667%; }\r\n\r\n  .offset-lg-6 {\r\n    margin-left: 50%; }\r\n\r\n  .offset-lg-7 {\r\n    margin-left: 58.3333333333%; }\r\n\r\n  .offset-lg-8 {\r\n    margin-left: 66.6666666667%; }\r\n\r\n  .offset-lg-9 {\r\n    margin-left: 75%; }\r\n\r\n  .offset-lg-10 {\r\n    margin-left: 83.3333333333%; }\r\n\r\n  .offset-lg-11 {\r\n    margin-left: 91.6666666667%; } }\r\n@media (min-width: 1200px) {\r\n  .col-xl {\r\n    flex-basis: 0;\r\n    flex-grow: 1;\r\n    max-width: 100%; }\r\n\r\n  .col-xl-auto {\r\n    flex: 0 0 auto;\r\n    width: auto;\r\n    max-width: none; }\r\n\r\n  .col-xl-1 {\r\n    flex: 0 0 8.3333333333%;\r\n    max-width: 8.3333333333%; }\r\n\r\n  .col-xl-2 {\r\n    flex: 0 0 16.6666666667%;\r\n    max-width: 16.6666666667%; }\r\n\r\n  .col-xl-3 {\r\n    flex: 0 0 25%;\r\n    max-width: 25%; }\r\n\r\n  .col-xl-4 {\r\n    flex: 0 0 33.3333333333%;\r\n    max-width: 33.3333333333%; }\r\n\r\n  .col-xl-5 {\r\n    flex: 0 0 41.6666666667%;\r\n    max-width: 41.6666666667%; }\r\n\r\n  .col-xl-6 {\r\n    flex: 0 0 50%;\r\n    max-width: 50%; }\r\n\r\n  .col-xl-7 {\r\n    flex: 0 0 58.3333333333%;\r\n    max-width: 58.3333333333%; }\r\n\r\n  .col-xl-8 {\r\n    flex: 0 0 66.6666666667%;\r\n    max-width: 66.6666666667%; }\r\n\r\n  .col-xl-9 {\r\n    flex: 0 0 75%;\r\n    max-width: 75%; }\r\n\r\n  .col-xl-10 {\r\n    flex: 0 0 83.3333333333%;\r\n    max-width: 83.3333333333%; }\r\n\r\n  .col-xl-11 {\r\n    flex: 0 0 91.6666666667%;\r\n    max-width: 91.6666666667%; }\r\n\r\n  .col-xl-12 {\r\n    flex: 0 0 100%;\r\n    max-width: 100%; }\r\n\r\n  .order-xl-first {\r\n    order: -1; }\r\n\r\n  .order-xl-1 {\r\n    order: 1; }\r\n\r\n  .order-xl-2 {\r\n    order: 2; }\r\n\r\n  .order-xl-3 {\r\n    order: 3; }\r\n\r\n  .order-xl-4 {\r\n    order: 4; }\r\n\r\n  .order-xl-5 {\r\n    order: 5; }\r\n\r\n  .order-xl-6 {\r\n    order: 6; }\r\n\r\n  .order-xl-7 {\r\n    order: 7; }\r\n\r\n  .order-xl-8 {\r\n    order: 8; }\r\n\r\n  .order-xl-9 {\r\n    order: 9; }\r\n\r\n  .order-xl-10 {\r\n    order: 10; }\r\n\r\n  .order-xl-11 {\r\n    order: 11; }\r\n\r\n  .order-xl-12 {\r\n    order: 12; }\r\n\r\n  .offset-xl-0 {\r\n    margin-left: 0; }\r\n\r\n  .offset-xl-1 {\r\n    margin-left: 8.3333333333%; }\r\n\r\n  .offset-xl-2 {\r\n    margin-left: 16.6666666667%; }\r\n\r\n  .offset-xl-3 {\r\n    margin-left: 25%; }\r\n\r\n  .offset-xl-4 {\r\n    margin-left: 33.3333333333%; }\r\n\r\n  .offset-xl-5 {\r\n    margin-left: 41.6666666667%; }\r\n\r\n  .offset-xl-6 {\r\n    margin-left: 50%; }\r\n\r\n  .offset-xl-7 {\r\n    margin-left: 58.3333333333%; }\r\n\r\n  .offset-xl-8 {\r\n    margin-left: 66.6666666667%; }\r\n\r\n  .offset-xl-9 {\r\n    margin-left: 75%; }\r\n\r\n  .offset-xl-10 {\r\n    margin-left: 83.3333333333%; }\r\n\r\n  .offset-xl-11 {\r\n    margin-left: 91.6666666667%; } }\r\n.form-control {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0.375rem 0.75rem;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  background-color: #fff;\r\n  background-image: none;\r\n  background-clip: padding-box;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 0.25rem;\r\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; }\r\n  .form-control::-ms-expand {\r\n    background-color: transparent;\r\n    border: 0; }\r\n  .form-control:focus {\r\n    color: #495057;\r\n    background-color: #fff;\r\n    border-color: #80bdff;\r\n    outline: none;\r\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\r\n  .form-control::placeholder {\r\n    color: #868e96;\r\n    opacity: 1; }\r\n  .form-control:disabled, .form-control[readonly] {\r\n    background-color: #e9ecef;\r\n    opacity: 1; }\r\n\r\nselect.form-control:not([size]):not([multiple]) {\r\n  height: calc(2.25rem + 2px); }\r\nselect.form-control:focus::-ms-value {\r\n  color: #495057;\r\n  background-color: #fff; }\r\n\r\n.form-control-file,\r\n.form-control-range {\r\n  display: block; }\r\n\r\n.col-form-label {\r\n  padding-top: calc(0.375rem + 1px);\r\n  padding-bottom: calc(0.375rem + 1px);\r\n  margin-bottom: 0;\r\n  line-height: 1.5; }\r\n\r\n.col-form-label-lg {\r\n  padding-top: calc(0.5rem + 1px);\r\n  padding-bottom: calc(0.5rem + 1px);\r\n  font-size: 1.25rem;\r\n  line-height: 1.5; }\r\n\r\n.col-form-label-sm {\r\n  padding-top: calc(0.25rem + 1px);\r\n  padding-bottom: calc(0.25rem + 1px);\r\n  font-size: 0.875rem;\r\n  line-height: 1.5; }\r\n\r\n.col-form-legend {\r\n  padding-top: 0.375rem;\r\n  padding-bottom: 0.375rem;\r\n  margin-bottom: 0;\r\n  font-size: 1rem; }\r\n\r\n.form-control-plaintext {\r\n  padding-top: 0.375rem;\r\n  padding-bottom: 0.375rem;\r\n  margin-bottom: 0;\r\n  line-height: 1.5;\r\n  background-color: transparent;\r\n  border: solid transparent;\r\n  border-width: 1px 0; }\r\n  .form-control-plaintext.form-control-sm, .form-control-plaintext.form-control-lg {\r\n    padding-right: 0;\r\n    padding-left: 0; }\r\n\r\n.form-control-sm {\r\n  padding: 0.25rem 0.5rem;\r\n  font-size: 0.875rem;\r\n  line-height: 1.5;\r\n  border-radius: 0.2rem; }\r\n\r\nselect.form-control-sm:not([size]):not([multiple]) {\r\n  height: calc(1.8125rem + 2px); }\r\n\r\n.form-control-lg {\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5;\r\n  border-radius: 0.3rem; }\r\n\r\nselect.form-control-lg:not([size]):not([multiple]) {\r\n  height: calc(2.875rem + 2px); }\r\n\r\n.form-group {\r\n  margin-bottom: 1rem; }\r\n\r\n.form-text {\r\n  display: block;\r\n  margin-top: 0.25rem; }\r\n\r\n.form-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-right: -5px;\r\n  margin-left: -5px; }\r\n  .form-row > .col,\r\n  .form-row > [class*="col-"] {\r\n    padding-right: 5px;\r\n    padding-left: 5px; }\r\n\r\n.form-check {\r\n  position: relative;\r\n  display: block;\r\n  margin-bottom: 0.5rem; }\r\n  .form-check.disabled .form-check-label {\r\n    color: #868e96; }\r\n\r\n.form-check-label {\r\n  padding-left: 1.25rem;\r\n  margin-bottom: 0; }\r\n\r\n.form-check-input {\r\n  position: absolute;\r\n  margin-top: 0.25rem;\r\n  margin-left: -1.25rem; }\r\n\r\n.form-check-inline {\r\n  display: inline-block;\r\n  margin-right: 0.75rem; }\r\n  .form-check-inline .form-check-label {\r\n    vertical-align: middle; }\r\n\r\n.valid-feedback {\r\n  display: none;\r\n  margin-top: .25rem;\r\n  font-size: .875rem;\r\n  color: #28a745; }\r\n\r\n.valid-tooltip {\r\n  position: absolute;\r\n  top: 100%;\r\n  z-index: 5;\r\n  display: none;\r\n  width: 250px;\r\n  padding: .5rem;\r\n  margin-top: .1rem;\r\n  font-size: .875rem;\r\n  line-height: 1;\r\n  color: #fff;\r\n  background-color: rgba(40, 167, 69, 0.8);\r\n  border-radius: .2rem; }\r\n\r\n.was-validated .form-control:valid, .form-control.is-valid,\r\n.was-validated .custom-select:valid,\r\n.custom-select.is-valid {\r\n  border-color: #28a745; }\r\n  .was-validated .form-control:valid:focus, .form-control.is-valid:focus,\r\n  .was-validated .custom-select:valid:focus,\r\n  .custom-select.is-valid:focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25); }\r\n  .was-validated .form-control:valid ~ .valid-feedback,\r\n  .was-validated .form-control:valid ~ .valid-tooltip, .form-control.is-valid ~ .valid-feedback,\r\n  .form-control.is-valid ~ .valid-tooltip,\r\n  .was-validated .custom-select:valid ~ .valid-feedback,\r\n  .was-validated .custom-select:valid ~ .valid-tooltip,\r\n  .custom-select.is-valid ~ .valid-feedback,\r\n  .custom-select.is-valid ~ .valid-tooltip {\r\n    display: block; }\r\n\r\n.was-validated .form-check-input:valid + .form-check-label, .form-check-input.is-valid + .form-check-label {\r\n  color: #28a745; }\r\n\r\n.was-validated .custom-control-input:valid ~ .custom-control-indicator, .custom-control-input.is-valid ~ .custom-control-indicator {\r\n  background-color: rgba(40, 167, 69, 0.25); }\r\n.was-validated .custom-control-input:valid ~ .custom-control-description, .custom-control-input.is-valid ~ .custom-control-description {\r\n  color: #28a745; }\r\n\r\n.was-validated .custom-file-input:valid ~ .custom-file-control, .custom-file-input.is-valid ~ .custom-file-control {\r\n  border-color: #28a745; }\r\n  .was-validated .custom-file-input:valid ~ .custom-file-control::before, .custom-file-input.is-valid ~ .custom-file-control::before {\r\n    border-color: inherit; }\r\n.was-validated .custom-file-input:valid:focus, .custom-file-input.is-valid:focus {\r\n  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25); }\r\n\r\n.invalid-feedback {\r\n  display: none;\r\n  margin-top: .25rem;\r\n  font-size: .875rem;\r\n  color: #dc3545; }\r\n\r\n.invalid-tooltip {\r\n  position: absolute;\r\n  top: 100%;\r\n  z-index: 5;\r\n  display: none;\r\n  width: 250px;\r\n  padding: .5rem;\r\n  margin-top: .1rem;\r\n  font-size: .875rem;\r\n  line-height: 1;\r\n  color: #fff;\r\n  background-color: rgba(220, 53, 69, 0.8);\r\n  border-radius: .2rem; }\r\n\r\n.was-validated .form-control:invalid, .form-control.is-invalid,\r\n.was-validated .custom-select:invalid,\r\n.custom-select.is-invalid {\r\n  border-color: #dc3545; }\r\n  .was-validated .form-control:invalid:focus, .form-control.is-invalid:focus,\r\n  .was-validated .custom-select:invalid:focus,\r\n  .custom-select.is-invalid:focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25); }\r\n  .was-validated .form-control:invalid ~ .invalid-feedback,\r\n  .was-validated .form-control:invalid ~ .invalid-tooltip, .form-control.is-invalid ~ .invalid-feedback,\r\n  .form-control.is-invalid ~ .invalid-tooltip,\r\n  .was-validated .custom-select:invalid ~ .invalid-feedback,\r\n  .was-validated .custom-select:invalid ~ .invalid-tooltip,\r\n  .custom-select.is-invalid ~ .invalid-feedback,\r\n  .custom-select.is-invalid ~ .invalid-tooltip {\r\n    display: block; }\r\n\r\n.was-validated .form-check-input:invalid + .form-check-label, .form-check-input.is-invalid + .form-check-label {\r\n  color: #dc3545; }\r\n\r\n.was-validated .custom-control-input:invalid ~ .custom-control-indicator, .custom-control-input.is-invalid ~ .custom-control-indicator {\r\n  background-color: rgba(220, 53, 69, 0.25); }\r\n.was-validated .custom-control-input:invalid ~ .custom-control-description, .custom-control-input.is-invalid ~ .custom-control-description {\r\n  color: #dc3545; }\r\n\r\n.was-validated .custom-file-input:invalid ~ .custom-file-control, .custom-file-input.is-invalid ~ .custom-file-control {\r\n  border-color: #dc3545; }\r\n  .was-validated .custom-file-input:invalid ~ .custom-file-control::before, .custom-file-input.is-invalid ~ .custom-file-control::before {\r\n    border-color: inherit; }\r\n.was-validated .custom-file-input:invalid:focus, .custom-file-input.is-invalid:focus {\r\n  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25); }\r\n\r\n.form-inline {\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  align-items: center; }\r\n  .form-inline .form-check {\r\n    width: 100%; }\r\n  @media (min-width: 576px) {\r\n    .form-inline label {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin-bottom: 0; }\r\n    .form-inline .form-group {\r\n      display: flex;\r\n      flex: 0 0 auto;\r\n      flex-flow: row wrap;\r\n      align-items: center;\r\n      margin-bottom: 0; }\r\n    .form-inline .form-control {\r\n      display: inline-block;\r\n      width: auto;\r\n      vertical-align: middle; }\r\n    .form-inline .form-control-plaintext {\r\n      display: inline-block; }\r\n    .form-inline .input-group {\r\n      width: auto; }\r\n    .form-inline .form-check {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: auto;\r\n      margin-top: 0;\r\n      margin-bottom: 0; }\r\n    .form-inline .form-check-label {\r\n      padding-left: 0; }\r\n    .form-inline .form-check-input {\r\n      position: relative;\r\n      margin-top: 0;\r\n      margin-right: 0.25rem;\r\n      margin-left: 0; }\r\n    .form-inline .custom-control {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding-left: 0; }\r\n    .form-inline .custom-control-indicator {\r\n      position: static;\r\n      display: inline-block;\r\n      margin-right: 0.25rem;\r\n      vertical-align: text-bottom; }\r\n    .form-inline .has-feedback .form-control-feedback {\r\n      top: 0; } }\r\n\r\n.btn {\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  user-select: none;\r\n  border: 1px solid transparent;\r\n  padding: 0.375rem 0.75rem;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border-radius: 0.25rem;\r\n  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; }\r\n  .btn:focus, .btn:hover {\r\n    text-decoration: none; }\r\n  .btn:focus, .btn.focus {\r\n    outline: 0;\r\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\r\n  .btn.disabled, .btn:disabled {\r\n    opacity: .65; }\r\n  .btn:not([disabled]):not(.disabled):active, .btn:not([disabled]):not(.disabled).active {\r\n    background-image: none; }\r\n\r\na.btn.disabled,\r\nfieldset[disabled] a.btn {\r\n  pointer-events: none; }\r\n\r\n.btn-primary {\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border-color: #007bff; }\r\n  .btn-primary:hover {\r\n    color: #fff;\r\n    background-color: #0069d9;\r\n    border-color: #0062cc; }\r\n  .btn-primary:focus, .btn-primary.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\r\n  .btn-primary.disabled, .btn-primary:disabled {\r\n    background-color: #007bff;\r\n    border-color: #007bff; }\r\n  .btn-primary:not([disabled]):not(.disabled):active, .btn-primary:not([disabled]):not(.disabled).active, .show > .btn-primary.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #0062cc;\r\n    border-color: #005cbf;\r\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\r\n\r\n.btn-secondary {\r\n  color: #fff;\r\n  background-color: #868e96;\r\n  border-color: #868e96; }\r\n  .btn-secondary:hover {\r\n    color: #fff;\r\n    background-color: #727b84;\r\n    border-color: #6c757d; }\r\n  .btn-secondary:focus, .btn-secondary.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(134, 142, 150, 0.5); }\r\n  .btn-secondary.disabled, .btn-secondary:disabled {\r\n    background-color: #868e96;\r\n    border-color: #868e96; }\r\n  .btn-secondary:not([disabled]):not(.disabled):active, .btn-secondary:not([disabled]):not(.disabled).active, .show > .btn-secondary.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #6c757d;\r\n    border-color: #666e76;\r\n    box-shadow: 0 0 0 0.2rem rgba(134, 142, 150, 0.5); }\r\n\r\n.btn-success {\r\n  color: #fff;\r\n  background-color: #28a745;\r\n  border-color: #28a745; }\r\n  .btn-success:hover {\r\n    color: #fff;\r\n    background-color: #218838;\r\n    border-color: #1e7e34; }\r\n  .btn-success:focus, .btn-success.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\r\n  .btn-success.disabled, .btn-success:disabled {\r\n    background-color: #28a745;\r\n    border-color: #28a745; }\r\n  .btn-success:not([disabled]):not(.disabled):active, .btn-success:not([disabled]):not(.disabled).active, .show > .btn-success.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #1e7e34;\r\n    border-color: #1c7430;\r\n    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\r\n\r\n.btn-info {\r\n  color: #fff;\r\n  background-color: #17a2b8;\r\n  border-color: #17a2b8; }\r\n  .btn-info:hover {\r\n    color: #fff;\r\n    background-color: #138496;\r\n    border-color: #117a8b; }\r\n  .btn-info:focus, .btn-info.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\r\n  .btn-info.disabled, .btn-info:disabled {\r\n    background-color: #17a2b8;\r\n    border-color: #17a2b8; }\r\n  .btn-info:not([disabled]):not(.disabled):active, .btn-info:not([disabled]):not(.disabled).active, .show > .btn-info.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #117a8b;\r\n    border-color: #10707f;\r\n    box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\r\n\r\n.btn-warning {\r\n  color: #111;\r\n  background-color: #ffc107;\r\n  border-color: #ffc107; }\r\n  .btn-warning:hover {\r\n    color: #111;\r\n    background-color: #e0a800;\r\n    border-color: #d39e00; }\r\n  .btn-warning:focus, .btn-warning.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\r\n  .btn-warning.disabled, .btn-warning:disabled {\r\n    background-color: #ffc107;\r\n    border-color: #ffc107; }\r\n  .btn-warning:not([disabled]):not(.disabled):active, .btn-warning:not([disabled]):not(.disabled).active, .show > .btn-warning.dropdown-toggle {\r\n    color: #111;\r\n    background-color: #d39e00;\r\n    border-color: #c69500;\r\n    box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\r\n\r\n.btn-danger {\r\n  color: #fff;\r\n  background-color: #dc3545;\r\n  border-color: #dc3545; }\r\n  .btn-danger:hover {\r\n    color: #fff;\r\n    background-color: #c82333;\r\n    border-color: #bd2130; }\r\n  .btn-danger:focus, .btn-danger.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\r\n  .btn-danger.disabled, .btn-danger:disabled {\r\n    background-color: #dc3545;\r\n    border-color: #dc3545; }\r\n  .btn-danger:not([disabled]):not(.disabled):active, .btn-danger:not([disabled]):not(.disabled).active, .show > .btn-danger.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #bd2130;\r\n    border-color: #b21f2d;\r\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\r\n\r\n.btn-light {\r\n  color: #111;\r\n  background-color: #f8f9fa;\r\n  border-color: #f8f9fa; }\r\n  .btn-light:hover {\r\n    color: #111;\r\n    background-color: #e2e6ea;\r\n    border-color: #dae0e5; }\r\n  .btn-light:focus, .btn-light.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\r\n  .btn-light.disabled, .btn-light:disabled {\r\n    background-color: #f8f9fa;\r\n    border-color: #f8f9fa; }\r\n  .btn-light:not([disabled]):not(.disabled):active, .btn-light:not([disabled]):not(.disabled).active, .show > .btn-light.dropdown-toggle {\r\n    color: #111;\r\n    background-color: #dae0e5;\r\n    border-color: #d3d9df;\r\n    box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\r\n\r\n.btn-dark {\r\n  color: #fff;\r\n  background-color: #343a40;\r\n  border-color: #343a40; }\r\n  .btn-dark:hover {\r\n    color: #fff;\r\n    background-color: #23272b;\r\n    border-color: #1d2124; }\r\n  .btn-dark:focus, .btn-dark.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\r\n  .btn-dark.disabled, .btn-dark:disabled {\r\n    background-color: #343a40;\r\n    border-color: #343a40; }\r\n  .btn-dark:not([disabled]):not(.disabled):active, .btn-dark:not([disabled]):not(.disabled).active, .show > .btn-dark.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #1d2124;\r\n    border-color: #171a1d;\r\n    box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\r\n\r\n.btn-outline-primary {\r\n  color: #007bff;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: #007bff; }\r\n  .btn-outline-primary:hover {\r\n    color: #fff;\r\n    background-color: #007bff;\r\n    border-color: #007bff; }\r\n  .btn-outline-primary:focus, .btn-outline-primary.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\r\n  .btn-outline-primary.disabled, .btn-outline-primary:disabled {\r\n    color: #007bff;\r\n    background-color: transparent; }\r\n  .btn-outline-primary:not([disabled]):not(.disabled):active, .btn-outline-primary:not([disabled]):not(.disabled).active, .show > .btn-outline-primary.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #007bff;\r\n    border-color: #007bff;\r\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\r\n\r\n.btn-outline-secondary {\r\n  color: #868e96;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: #868e96; }\r\n  .btn-outline-secondary:hover {\r\n    color: #fff;\r\n    background-color: #868e96;\r\n    border-color: #868e96; }\r\n  .btn-outline-secondary:focus, .btn-outline-secondary.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(134, 142, 150, 0.5); }\r\n  .btn-outline-secondary.disabled, .btn-outline-secondary:disabled {\r\n    color: #868e96;\r\n    background-color: transparent; }\r\n  .btn-outline-secondary:not([disabled]):not(.disabled):active, .btn-outline-secondary:not([disabled]):not(.disabled).active, .show > .btn-outline-secondary.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #868e96;\r\n    border-color: #868e96;\r\n    box-shadow: 0 0 0 0.2rem rgba(134, 142, 150, 0.5); }\r\n\r\n.btn-outline-success {\r\n  color: #28a745;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: #28a745; }\r\n  .btn-outline-success:hover {\r\n    color: #fff;\r\n    background-color: #28a745;\r\n    border-color: #28a745; }\r\n  .btn-outline-success:focus, .btn-outline-success.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\r\n  .btn-outline-success.disabled, .btn-outline-success:disabled {\r\n    color: #28a745;\r\n    background-color: transparent; }\r\n  .btn-outline-success:not([disabled]):not(.disabled):active, .btn-outline-success:not([disabled]):not(.disabled).active, .show > .btn-outline-success.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #28a745;\r\n    border-color: #28a745;\r\n    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\r\n\r\n.btn-outline-info {\r\n  color: #17a2b8;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: #17a2b8; }\r\n  .btn-outline-info:hover {\r\n    color: #fff;\r\n    background-color: #17a2b8;\r\n    border-color: #17a2b8; }\r\n  .btn-outline-info:focus, .btn-outline-info.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\r\n  .btn-outline-info.disabled, .btn-outline-info:disabled {\r\n    color: #17a2b8;\r\n    background-color: transparent; }\r\n  .btn-outline-info:not([disabled]):not(.disabled):active, .btn-outline-info:not([disabled]):not(.disabled).active, .show > .btn-outline-info.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #17a2b8;\r\n    border-color: #17a2b8;\r\n    box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\r\n\r\n.btn-outline-warning {\r\n  color: #ffc107;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: #ffc107; }\r\n  .btn-outline-warning:hover {\r\n    color: #fff;\r\n    background-color: #ffc107;\r\n    border-color: #ffc107; }\r\n  .btn-outline-warning:focus, .btn-outline-warning.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\r\n  .btn-outline-warning.disabled, .btn-outline-warning:disabled {\r\n    color: #ffc107;\r\n    background-color: transparent; }\r\n  .btn-outline-warning:not([disabled]):not(.disabled):active, .btn-outline-warning:not([disabled]):not(.disabled).active, .show > .btn-outline-warning.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #ffc107;\r\n    border-color: #ffc107;\r\n    box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\r\n\r\n.btn-outline-danger {\r\n  color: #dc3545;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: #dc3545; }\r\n  .btn-outline-danger:hover {\r\n    color: #fff;\r\n    background-color: #dc3545;\r\n    border-color: #dc3545; }\r\n  .btn-outline-danger:focus, .btn-outline-danger.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\r\n  .btn-outline-danger.disabled, .btn-outline-danger:disabled {\r\n    color: #dc3545;\r\n    background-color: transparent; }\r\n  .btn-outline-danger:not([disabled]):not(.disabled):active, .btn-outline-danger:not([disabled]):not(.disabled).active, .show > .btn-outline-danger.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #dc3545;\r\n    border-color: #dc3545;\r\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\r\n\r\n.btn-outline-light {\r\n  color: #f8f9fa;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: #f8f9fa; }\r\n  .btn-outline-light:hover {\r\n    color: #212529;\r\n    background-color: #f8f9fa;\r\n    border-color: #f8f9fa; }\r\n  .btn-outline-light:focus, .btn-outline-light.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\r\n  .btn-outline-light.disabled, .btn-outline-light:disabled {\r\n    color: #f8f9fa;\r\n    background-color: transparent; }\r\n  .btn-outline-light:not([disabled]):not(.disabled):active, .btn-outline-light:not([disabled]):not(.disabled).active, .show > .btn-outline-light.dropdown-toggle {\r\n    color: #212529;\r\n    background-color: #f8f9fa;\r\n    border-color: #f8f9fa;\r\n    box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\r\n\r\n.btn-outline-dark {\r\n  color: #343a40;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: #343a40; }\r\n  .btn-outline-dark:hover {\r\n    color: #fff;\r\n    background-color: #343a40;\r\n    border-color: #343a40; }\r\n  .btn-outline-dark:focus, .btn-outline-dark.focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\r\n  .btn-outline-dark.disabled, .btn-outline-dark:disabled {\r\n    color: #343a40;\r\n    background-color: transparent; }\r\n  .btn-outline-dark:not([disabled]):not(.disabled):active, .btn-outline-dark:not([disabled]):not(.disabled).active, .show > .btn-outline-dark.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: #343a40;\r\n    border-color: #343a40;\r\n    box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\r\n\r\n.btn-link {\r\n  font-weight: 400;\r\n  color: #007bff;\r\n  background-color: transparent; }\r\n  .btn-link:hover {\r\n    color: #0056b3;\r\n    text-decoration: underline;\r\n    background-color: transparent;\r\n    border-color: transparent; }\r\n  .btn-link:focus, .btn-link.focus {\r\n    border-color: transparent;\r\n    box-shadow: none; }\r\n  .btn-link:disabled, .btn-link.disabled {\r\n    color: #868e96; }\r\n\r\n.btn-lg {\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5;\r\n  border-radius: 0.3rem; }\r\n\r\n.btn-sm {\r\n  padding: 0.25rem 0.5rem;\r\n  font-size: 0.875rem;\r\n  line-height: 1.5;\r\n  border-radius: 0.2rem; }\r\n\r\n.btn-block {\r\n  display: block;\r\n  width: 100%; }\r\n\r\n.btn-block + .btn-block {\r\n  margin-top: 0.5rem; }\r\n\r\ninput[type="submit"].btn-block,\r\ninput[type="reset"].btn-block,\r\ninput[type="button"].btn-block {\r\n  width: 100%; }\r\n\r\n.fade {\r\n  opacity: 0;\r\n  transition: opacity 0.15s linear; }\r\n  .fade.show {\r\n    opacity: 1; }\r\n\r\n.collapse {\r\n  display: none; }\r\n  .collapse.show {\r\n    display: block; }\r\n\r\ntr.collapse.show {\r\n  display: table-row; }\r\n\r\ntbody.collapse.show {\r\n  display: table-row-group; }\r\n\r\n.collapsing {\r\n  position: relative;\r\n  height: 0;\r\n  overflow: hidden;\r\n  transition: height 0.35s ease; }\r\n\r\n.dropup,\r\n.dropdown {\r\n  position: relative; }\r\n\r\n.dropdown-toggle::after {\r\n  display: inline-block;\r\n  width: 0;\r\n  height: 0;\r\n  margin-left: 0.255em;\r\n  vertical-align: 0.255em;\r\n  content: "";\r\n  border-top: 0.3em solid;\r\n  border-right: 0.3em solid transparent;\r\n  border-bottom: 0;\r\n  border-left: 0.3em solid transparent; }\r\n.dropdown-toggle:empty::after {\r\n  margin-left: 0; }\r\n\r\n.dropdown-menu {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  z-index: 1000;\r\n  display: none;\r\n  float: left;\r\n  min-width: 10rem;\r\n  padding: 0.5rem 0;\r\n  margin: 0.125rem 0 0;\r\n  font-size: 1rem;\r\n  color: #212529;\r\n  text-align: left;\r\n  list-style: none;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid rgba(0, 0, 0, 0.15);\r\n  border-radius: 0.25rem; }\r\n\r\n.dropup .dropdown-menu {\r\n  margin-top: 0;\r\n  margin-bottom: 0.125rem; }\r\n.dropup .dropdown-toggle::after {\r\n  display: inline-block;\r\n  width: 0;\r\n  height: 0;\r\n  margin-left: 0.255em;\r\n  vertical-align: 0.255em;\r\n  content: "";\r\n  border-top: 0;\r\n  border-right: 0.3em solid transparent;\r\n  border-bottom: 0.3em solid;\r\n  border-left: 0.3em solid transparent; }\r\n.dropup .dropdown-toggle:empty::after {\r\n  margin-left: 0; }\r\n\r\n.dropdown-divider {\r\n  height: 0;\r\n  margin: 0.5rem 0;\r\n  overflow: hidden;\r\n  border-top: 1px solid #e9ecef; }\r\n\r\n.dropdown-item {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0.25rem 1.5rem;\r\n  clear: both;\r\n  font-weight: 400;\r\n  color: #212529;\r\n  text-align: inherit;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: 0; }\r\n  .dropdown-item:focus, .dropdown-item:hover {\r\n    color: #16181b;\r\n    text-decoration: none;\r\n    background-color: #f8f9fa; }\r\n  .dropdown-item.active, .dropdown-item:active {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    background-color: #007bff; }\r\n  .dropdown-item.disabled, .dropdown-item:disabled {\r\n    color: #868e96;\r\n    background-color: transparent; }\r\n\r\n.dropdown-menu.show {\r\n  display: block; }\r\n\r\n.dropdown-header {\r\n  display: block;\r\n  padding: 0.5rem 1.5rem;\r\n  margin-bottom: 0;\r\n  font-size: 0.875rem;\r\n  color: #868e96;\r\n  white-space: nowrap; }\r\n\r\n.custom-control {\r\n  position: relative;\r\n  display: inline-flex;\r\n  min-height: 1.5rem;\r\n  padding-left: 1.5rem;\r\n  margin-right: 1rem; }\r\n\r\n.custom-control-input {\r\n  position: absolute;\r\n  z-index: -1;\r\n  opacity: 0; }\r\n  .custom-control-input:checked ~ .custom-control-indicator {\r\n    color: #fff;\r\n    background-color: #007bff; }\r\n  .custom-control-input:focus ~ .custom-control-indicator {\r\n    box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\r\n  .custom-control-input:active ~ .custom-control-indicator {\r\n    color: #fff;\r\n    background-color: #b3d7ff; }\r\n  .custom-control-input:disabled ~ .custom-control-indicator {\r\n    background-color: #e9ecef; }\r\n  .custom-control-input:disabled ~ .custom-control-description {\r\n    color: #868e96; }\r\n\r\n.custom-control-indicator {\r\n  position: absolute;\r\n  top: 0.25rem;\r\n  left: 0;\r\n  display: block;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  pointer-events: none;\r\n  user-select: none;\r\n  background-color: #ddd;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  background-size: 50% 50%; }\r\n\r\n.custom-checkbox .custom-control-indicator {\r\n  border-radius: 0.25rem; }\r\n.custom-checkbox .custom-control-input:checked ~ .custom-control-indicator {\r\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3E%3Cpath fill=\'%23fff\' d=\'M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z\'/%3E%3C/svg%3E"); }\r\n.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-indicator {\r\n  background-color: #007bff;\r\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 4 4\'%3E%3Cpath stroke=\'%23fff\' d=\'M0 2h4\'/%3E%3C/svg%3E"); }\r\n\r\n.custom-radio .custom-control-indicator {\r\n  border-radius: 50%; }\r\n.custom-radio .custom-control-input:checked ~ .custom-control-indicator {\r\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3E%3Ccircle r=\'3\' fill=\'%23fff\'/%3E%3C/svg%3E"); }\r\n\r\n.custom-controls-stacked {\r\n  display: flex;\r\n  flex-direction: column; }\r\n  .custom-controls-stacked .custom-control {\r\n    margin-bottom: 0.25rem; }\r\n    .custom-controls-stacked .custom-control + .custom-control {\r\n      margin-left: 0; }\r\n\r\n.custom-select {\r\n  display: inline-block;\r\n  max-width: 100%;\r\n  height: calc(2.25rem + 2px);\r\n  padding: 0.375rem 1.75rem 0.375rem 0.75rem;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  vertical-align: middle;\r\n  background: #fff url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 4 5\'%3E%3Cpath fill=\'%23333\' d=\'M2 0L0 2h4zm0 5L0 3h4z\'/%3E%3C/svg%3E") no-repeat right 0.75rem center;\r\n  background-size: 8px 10px;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 0.25rem;\r\n  appearance: none; }\r\n  .custom-select:focus {\r\n    border-color: #80bdff;\r\n    outline: none; }\r\n    .custom-select:focus::-ms-value {\r\n      color: #495057;\r\n      background-color: #fff; }\r\n  .custom-select[multiple] {\r\n    height: auto;\r\n    background-image: none; }\r\n  .custom-select:disabled {\r\n    color: #868e96;\r\n    background-color: #e9ecef; }\r\n  .custom-select::-ms-expand {\r\n    opacity: 0; }\r\n\r\n.custom-select-sm {\r\n  height: calc(1.8125rem + 2px);\r\n  padding-top: 0.375rem;\r\n  padding-bottom: 0.375rem;\r\n  font-size: 75%; }\r\n\r\n.custom-file {\r\n  position: relative;\r\n  display: inline-block;\r\n  max-width: 100%;\r\n  height: calc(2.25rem + 2px);\r\n  margin-bottom: 0; }\r\n\r\n.custom-file-input {\r\n  min-width: 14rem;\r\n  max-width: 100%;\r\n  height: calc(2.25rem + 2px);\r\n  margin: 0;\r\n  opacity: 0; }\r\n  .custom-file-input:focus ~ .custom-file-control {\r\n    box-shadow: 0 0 0 0.075rem #fff, 0 0 0 0.2rem #007bff; }\r\n\r\n.custom-file-control {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  z-index: 5;\r\n  height: calc(2.25rem + 2px);\r\n  padding: 0.375rem 0.75rem;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  pointer-events: none;\r\n  user-select: none;\r\n  background-color: #fff;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 0.25rem; }\r\n  .custom-file-control:lang(en):empty::after {\r\n    content: "Choose file..."; }\r\n  .custom-file-control::before {\r\n    position: absolute;\r\n    top: -1px;\r\n    right: -1px;\r\n    bottom: -1px;\r\n    z-index: 6;\r\n    display: block;\r\n    height: calc(2.25rem + 2px);\r\n    padding: 0.375rem 0.75rem;\r\n    line-height: 1.5;\r\n    color: #495057;\r\n    background-color: #e9ecef;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 0 0.25rem 0.25rem 0; }\r\n  .custom-file-control:lang(en)::before {\r\n    content: "Browse"; }\r\n\r\n.nav {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding-left: 0;\r\n  margin-bottom: 0;\r\n  list-style: none; }\r\n\r\n.nav-link {\r\n  display: block;\r\n  padding: 0.5rem 1rem; }\r\n  .nav-link:focus, .nav-link:hover {\r\n    text-decoration: none; }\r\n  .nav-link.disabled {\r\n    color: #868e96; }\r\n\r\n.nav-tabs {\r\n  border-bottom: 1px solid #ddd; }\r\n  .nav-tabs .nav-item {\r\n    margin-bottom: -1px; }\r\n  .nav-tabs .nav-link {\r\n    border: 1px solid transparent;\r\n    border-top-left-radius: 0.25rem;\r\n    border-top-right-radius: 0.25rem; }\r\n    .nav-tabs .nav-link:focus, .nav-tabs .nav-link:hover {\r\n      border-color: #e9ecef #e9ecef #ddd; }\r\n    .nav-tabs .nav-link.disabled {\r\n      color: #868e96;\r\n      background-color: transparent;\r\n      border-color: transparent; }\r\n  .nav-tabs .nav-link.active,\r\n  .nav-tabs .nav-item.show .nav-link {\r\n    color: #495057;\r\n    background-color: #fff;\r\n    border-color: #ddd #ddd #fff; }\r\n  .nav-tabs .dropdown-menu {\r\n    margin-top: -1px;\r\n    border-top-left-radius: 0;\r\n    border-top-right-radius: 0; }\r\n\r\n.nav-pills .nav-link {\r\n  border-radius: 0.25rem; }\r\n.nav-pills .nav-link.active,\r\n.nav-pills .show > .nav-link {\r\n  color: #fff;\r\n  background-color: #007bff; }\r\n\r\n.nav-fill .nav-item {\r\n  flex: 1 1 auto;\r\n  text-align: center; }\r\n\r\n.nav-justified .nav-item {\r\n  flex-basis: 0;\r\n  flex-grow: 1;\r\n  text-align: center; }\r\n\r\n.tab-content > .tab-pane {\r\n  display: none; }\r\n.tab-content > .active {\r\n  display: block; }\r\n\r\n.navbar {\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0.5rem 1rem; }\r\n  .navbar > .container,\r\n  .navbar > .container-fluid {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: space-between; }\r\n\r\n.navbar-brand {\r\n  display: inline-block;\r\n  padding-top: 0.3125rem;\r\n  padding-bottom: 0.3125rem;\r\n  margin-right: 1rem;\r\n  font-size: 1.25rem;\r\n  line-height: inherit;\r\n  white-space: nowrap; }\r\n  .navbar-brand:focus, .navbar-brand:hover {\r\n    text-decoration: none; }\r\n\r\n.navbar-nav {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 0;\r\n  margin-bottom: 0;\r\n  list-style: none; }\r\n  .navbar-nav .nav-link {\r\n    padding-right: 0;\r\n    padding-left: 0; }\r\n  .navbar-nav .dropdown-menu {\r\n    position: static;\r\n    float: none; }\r\n\r\n.navbar-text {\r\n  display: inline-block;\r\n  padding-top: 0.5rem;\r\n  padding-bottom: 0.5rem; }\r\n\r\n.navbar-collapse {\r\n  flex-basis: 100%;\r\n  flex-grow: 1;\r\n  align-items: center; }\r\n\r\n.navbar-toggler {\r\n  padding: 0.25rem 0.75rem;\r\n  font-size: 1.25rem;\r\n  line-height: 1;\r\n  background: transparent;\r\n  border: 1px solid transparent;\r\n  border-radius: 0.25rem; }\r\n  .navbar-toggler:focus, .navbar-toggler:hover {\r\n    text-decoration: none; }\r\n\r\n.navbar-toggler-icon {\r\n  display: inline-block;\r\n  width: 1.5em;\r\n  height: 1.5em;\r\n  vertical-align: middle;\r\n  content: "";\r\n  background: no-repeat center center;\r\n  background-size: 100% 100%; }\r\n\r\n@media (max-width: 575px) {\r\n  .navbar-expand-sm > .container,\r\n  .navbar-expand-sm > .container-fluid {\r\n    padding-right: 0;\r\n    padding-left: 0; } }\r\n@media (min-width: 576px) {\r\n  .navbar-expand-sm {\r\n    flex-flow: row nowrap;\r\n    justify-content: flex-start; }\r\n    .navbar-expand-sm .navbar-nav {\r\n      flex-direction: row; }\r\n      .navbar-expand-sm .navbar-nav .dropdown-menu {\r\n        position: absolute; }\r\n      .navbar-expand-sm .navbar-nav .dropdown-menu-right {\r\n        right: 0;\r\n        left: auto; }\r\n      .navbar-expand-sm .navbar-nav .nav-link {\r\n        padding-right: .5rem;\r\n        padding-left: .5rem; }\r\n    .navbar-expand-sm > .container,\r\n    .navbar-expand-sm > .container-fluid {\r\n      flex-wrap: nowrap; }\r\n    .navbar-expand-sm .navbar-collapse {\r\n      display: flex !important;\r\n      flex-basis: auto; }\r\n    .navbar-expand-sm .navbar-toggler {\r\n      display: none; }\r\n    .navbar-expand-sm .dropup .dropdown-menu {\r\n      top: auto;\r\n      bottom: 100%; } }\r\n@media (max-width: 767px) {\r\n  .navbar-expand-md > .container,\r\n  .navbar-expand-md > .container-fluid {\r\n    padding-right: 0;\r\n    padding-left: 0; } }\r\n@media (min-width: 768px) {\r\n  .navbar-expand-md {\r\n    flex-flow: row nowrap;\r\n    justify-content: flex-start; }\r\n    .navbar-expand-md .navbar-nav {\r\n      flex-direction: row; }\r\n      .navbar-expand-md .navbar-nav .dropdown-menu {\r\n        position: absolute; }\r\n      .navbar-expand-md .navbar-nav .dropdown-menu-right {\r\n        right: 0;\r\n        left: auto; }\r\n      .navbar-expand-md .navbar-nav .nav-link {\r\n        padding-right: .5rem;\r\n        padding-left: .5rem; }\r\n    .navbar-expand-md > .container,\r\n    .navbar-expand-md > .container-fluid {\r\n      flex-wrap: nowrap; }\r\n    .navbar-expand-md .navbar-collapse {\r\n      display: flex !important;\r\n      flex-basis: auto; }\r\n    .navbar-expand-md .navbar-toggler {\r\n      display: none; }\r\n    .navbar-expand-md .dropup .dropdown-menu {\r\n      top: auto;\r\n      bottom: 100%; } }\r\n@media (max-width: 991px) {\r\n  .navbar-expand-lg > .container,\r\n  .navbar-expand-lg > .container-fluid {\r\n    padding-right: 0;\r\n    padding-left: 0; } }\r\n@media (min-width: 992px) {\r\n  .navbar-expand-lg {\r\n    flex-flow: row nowrap;\r\n    justify-content: flex-start; }\r\n    .navbar-expand-lg .navbar-nav {\r\n      flex-direction: row; }\r\n      .navbar-expand-lg .navbar-nav .dropdown-menu {\r\n        position: absolute; }\r\n      .navbar-expand-lg .navbar-nav .dropdown-menu-right {\r\n        right: 0;\r\n        left: auto; }\r\n      .navbar-expand-lg .navbar-nav .nav-link {\r\n        padding-right: .5rem;\r\n        padding-left: .5rem; }\r\n    .navbar-expand-lg > .container,\r\n    .navbar-expand-lg > .container-fluid {\r\n      flex-wrap: nowrap; }\r\n    .navbar-expand-lg .navbar-collapse {\r\n      display: flex !important;\r\n      flex-basis: auto; }\r\n    .navbar-expand-lg .navbar-toggler {\r\n      display: none; }\r\n    .navbar-expand-lg .dropup .dropdown-menu {\r\n      top: auto;\r\n      bottom: 100%; } }\r\n@media (max-width: 1199px) {\r\n  .navbar-expand-xl > .container,\r\n  .navbar-expand-xl > .container-fluid {\r\n    padding-right: 0;\r\n    padding-left: 0; } }\r\n@media (min-width: 1200px) {\r\n  .navbar-expand-xl {\r\n    flex-flow: row nowrap;\r\n    justify-content: flex-start; }\r\n    .navbar-expand-xl .navbar-nav {\r\n      flex-direction: row; }\r\n      .navbar-expand-xl .navbar-nav .dropdown-menu {\r\n        position: absolute; }\r\n      .navbar-expand-xl .navbar-nav .dropdown-menu-right {\r\n        right: 0;\r\n        left: auto; }\r\n      .navbar-expand-xl .navbar-nav .nav-link {\r\n        padding-right: .5rem;\r\n        padding-left: .5rem; }\r\n    .navbar-expand-xl > .container,\r\n    .navbar-expand-xl > .container-fluid {\r\n      flex-wrap: nowrap; }\r\n    .navbar-expand-xl .navbar-collapse {\r\n      display: flex !important;\r\n      flex-basis: auto; }\r\n    .navbar-expand-xl .navbar-toggler {\r\n      display: none; }\r\n    .navbar-expand-xl .dropup .dropdown-menu {\r\n      top: auto;\r\n      bottom: 100%; } }\r\n.navbar-expand {\r\n  flex-flow: row nowrap;\r\n  justify-content: flex-start; }\r\n  .navbar-expand > .container,\r\n  .navbar-expand > .container-fluid {\r\n    padding-right: 0;\r\n    padding-left: 0; }\r\n  .navbar-expand .navbar-nav {\r\n    flex-direction: row; }\r\n    .navbar-expand .navbar-nav .dropdown-menu {\r\n      position: absolute; }\r\n    .navbar-expand .navbar-nav .dropdown-menu-right {\r\n      right: 0;\r\n      left: auto; }\r\n    .navbar-expand .navbar-nav .nav-link {\r\n      padding-right: .5rem;\r\n      padding-left: .5rem; }\r\n  .navbar-expand > .container,\r\n  .navbar-expand > .container-fluid {\r\n    flex-wrap: nowrap; }\r\n  .navbar-expand .navbar-collapse {\r\n    display: flex !important;\r\n    flex-basis: auto; }\r\n  .navbar-expand .navbar-toggler {\r\n    display: none; }\r\n  .navbar-expand .dropup .dropdown-menu {\r\n    top: auto;\r\n    bottom: 100%; }\r\n\r\n.navbar-light .navbar-brand {\r\n  color: rgba(0, 0, 0, 0.9); }\r\n  .navbar-light .navbar-brand:focus, .navbar-light .navbar-brand:hover {\r\n    color: rgba(0, 0, 0, 0.9); }\r\n.navbar-light .navbar-nav .nav-link {\r\n  color: rgba(0, 0, 0, 0.5); }\r\n  .navbar-light .navbar-nav .nav-link:focus, .navbar-light .navbar-nav .nav-link:hover {\r\n    color: rgba(0, 0, 0, 0.7); }\r\n  .navbar-light .navbar-nav .nav-link.disabled {\r\n    color: rgba(0, 0, 0, 0.3); }\r\n.navbar-light .navbar-nav .show > .nav-link,\r\n.navbar-light .navbar-nav .active > .nav-link,\r\n.navbar-light .navbar-nav .nav-link.show,\r\n.navbar-light .navbar-nav .nav-link.active {\r\n  color: rgba(0, 0, 0, 0.9); }\r\n.navbar-light .navbar-toggler {\r\n  color: rgba(0, 0, 0, 0.5);\r\n  border-color: rgba(0, 0, 0, 0.1); }\r\n.navbar-light .navbar-toggler-icon {\r\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox=\'0 0 30 30\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cpath stroke=\'rgba(0, 0, 0, 0.5)\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' d=\'M4 7h22M4 15h22M4 23h22\'/%3E%3C/svg%3E"); }\r\n.navbar-light .navbar-text {\r\n  color: rgba(0, 0, 0, 0.5); }\r\n  .navbar-light .navbar-text a {\r\n    color: rgba(0, 0, 0, 0.9); }\r\n    .navbar-light .navbar-text a:focus, .navbar-light .navbar-text a:hover {\r\n      color: rgba(0, 0, 0, 0.9); }\r\n\r\n.navbar-dark .navbar-brand {\r\n  color: #fff; }\r\n  .navbar-dark .navbar-brand:focus, .navbar-dark .navbar-brand:hover {\r\n    color: #fff; }\r\n.navbar-dark .navbar-nav .nav-link {\r\n  color: rgba(255, 255, 255, 0.5); }\r\n  .navbar-dark .navbar-nav .nav-link:focus, .navbar-dark .navbar-nav .nav-link:hover {\r\n    color: rgba(255, 255, 255, 0.75); }\r\n  .navbar-dark .navbar-nav .nav-link.disabled {\r\n    color: rgba(255, 255, 255, 0.25); }\r\n.navbar-dark .navbar-nav .show > .nav-link,\r\n.navbar-dark .navbar-nav .active > .nav-link,\r\n.navbar-dark .navbar-nav .nav-link.show,\r\n.navbar-dark .navbar-nav .nav-link.active {\r\n  color: #fff; }\r\n.navbar-dark .navbar-toggler {\r\n  color: rgba(255, 255, 255, 0.5);\r\n  border-color: rgba(255, 255, 255, 0.1); }\r\n.navbar-dark .navbar-toggler-icon {\r\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox=\'0 0 30 30\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cpath stroke=\'rgba(255, 255, 255, 0.5)\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' d=\'M4 7h22M4 15h22M4 23h22\'/%3E%3C/svg%3E"); }\r\n.navbar-dark .navbar-text {\r\n  color: rgba(255, 255, 255, 0.5); }\r\n  .navbar-dark .navbar-text a {\r\n    color: #fff; }\r\n    .navbar-dark .navbar-text a:focus, .navbar-dark .navbar-text a:hover {\r\n      color: #fff; }\r\n\r\n.card {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 0;\r\n  word-wrap: break-word;\r\n  background-color: #fff;\r\n  background-clip: border-box;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  border-radius: 0.25rem; }\r\n  .card > hr {\r\n    margin-right: 0;\r\n    margin-left: 0; }\r\n  .card > .list-group:first-child .list-group-item:first-child {\r\n    border-top-left-radius: 0.25rem;\r\n    border-top-right-radius: 0.25rem; }\r\n  .card > .list-group:last-child .list-group-item:last-child {\r\n    border-bottom-right-radius: 0.25rem;\r\n    border-bottom-left-radius: 0.25rem; }\r\n\r\n.card-body {\r\n  flex: 1 1 auto;\r\n  padding: 1.25rem; }\r\n\r\n.card-title {\r\n  margin-bottom: 0.75rem; }\r\n\r\n.card-subtitle {\r\n  margin-top: -0.375rem;\r\n  margin-bottom: 0; }\r\n\r\n.card-text:last-child {\r\n  margin-bottom: 0; }\r\n\r\n.card-link:hover {\r\n  text-decoration: none; }\r\n.card-link + .card-link {\r\n  margin-left: 1.25rem; }\r\n\r\n.card-header {\r\n  padding: 0.75rem 1.25rem;\r\n  margin-bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125); }\r\n  .card-header:first-child {\r\n    border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0; }\r\n  .card-header + .list-group .list-group-item:first-child {\r\n    border-top: 0; }\r\n\r\n.card-footer {\r\n  padding: 0.75rem 1.25rem;\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  border-top: 1px solid rgba(0, 0, 0, 0.125); }\r\n  .card-footer:last-child {\r\n    border-radius: 0 0 calc(0.25rem - 1px) calc(0.25rem - 1px); }\r\n\r\n.card-header-tabs {\r\n  margin-right: -0.625rem;\r\n  margin-bottom: -0.75rem;\r\n  margin-left: -0.625rem;\r\n  border-bottom: 0; }\r\n\r\n.card-header-pills {\r\n  margin-right: -0.625rem;\r\n  margin-left: -0.625rem; }\r\n\r\n.card-img-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  padding: 1.25rem; }\r\n\r\n.card-img {\r\n  width: 100%;\r\n  border-radius: calc(0.25rem - 1px); }\r\n\r\n.card-img-top {\r\n  width: 100%;\r\n  border-top-left-radius: calc(0.25rem - 1px);\r\n  border-top-right-radius: calc(0.25rem - 1px); }\r\n\r\n.card-img-bottom {\r\n  width: 100%;\r\n  border-bottom-right-radius: calc(0.25rem - 1px);\r\n  border-bottom-left-radius: calc(0.25rem - 1px); }\r\n\r\n.card-deck {\r\n  display: flex;\r\n  flex-direction: column; }\r\n  .card-deck .card {\r\n    margin-bottom: 15px; }\r\n  @media (min-width: 576px) {\r\n    .card-deck {\r\n      flex-flow: row wrap;\r\n      margin-right: -15px;\r\n      margin-left: -15px; }\r\n      .card-deck .card {\r\n        display: flex;\r\n        flex: 1 0 0%;\r\n        flex-direction: column;\r\n        margin-right: 15px;\r\n        margin-bottom: 0;\r\n        margin-left: 15px; } }\r\n\r\n.card-group {\r\n  display: flex;\r\n  flex-direction: column; }\r\n  .card-group .card {\r\n    margin-bottom: 15px; }\r\n  @media (min-width: 576px) {\r\n    .card-group {\r\n      flex-flow: row wrap; }\r\n      .card-group .card {\r\n        flex: 1 0 0%;\r\n        margin-bottom: 0; }\r\n        .card-group .card + .card {\r\n          margin-left: 0;\r\n          border-left: 0; }\r\n        .card-group .card:first-child {\r\n          border-top-right-radius: 0;\r\n          border-bottom-right-radius: 0; }\r\n          .card-group .card:first-child .card-img-top {\r\n            border-top-right-radius: 0; }\r\n          .card-group .card:first-child .card-img-bottom {\r\n            border-bottom-right-radius: 0; }\r\n        .card-group .card:last-child {\r\n          border-top-left-radius: 0;\r\n          border-bottom-left-radius: 0; }\r\n          .card-group .card:last-child .card-img-top {\r\n            border-top-left-radius: 0; }\r\n          .card-group .card:last-child .card-img-bottom {\r\n            border-bottom-left-radius: 0; }\r\n        .card-group .card:only-child {\r\n          border-radius: 0.25rem; }\r\n          .card-group .card:only-child .card-img-top {\r\n            border-top-left-radius: 0.25rem;\r\n            border-top-right-radius: 0.25rem; }\r\n          .card-group .card:only-child .card-img-bottom {\r\n            border-bottom-right-radius: 0.25rem;\r\n            border-bottom-left-radius: 0.25rem; }\r\n        .card-group .card:not(:first-child):not(:last-child):not(:only-child) {\r\n          border-radius: 0; }\r\n          .card-group .card:not(:first-child):not(:last-child):not(:only-child) .card-img-top,\r\n          .card-group .card:not(:first-child):not(:last-child):not(:only-child) .card-img-bottom {\r\n            border-radius: 0; } }\r\n\r\n.card-columns .card {\r\n  margin-bottom: 0.75rem; }\r\n@media (min-width: 576px) {\r\n  .card-columns {\r\n    column-count: 3;\r\n    column-gap: 1.25rem; }\r\n    .card-columns .card {\r\n      display: inline-block;\r\n      width: 100%; } }\r\n\r\n.breadcrumb {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 0.75rem 1rem;\r\n  margin-bottom: 1rem;\r\n  list-style: none;\r\n  background-color: #e9ecef;\r\n  border-radius: 0.25rem; }\r\n\r\n.breadcrumb-item + .breadcrumb-item::before {\r\n  display: inline-block;\r\n  padding-right: 0.5rem;\r\n  padding-left: 0.5rem;\r\n  color: #868e96;\r\n  content: "/"; }\r\n.breadcrumb-item + .breadcrumb-item:hover::before {\r\n  text-decoration: underline; }\r\n.breadcrumb-item + .breadcrumb-item:hover::before {\r\n  text-decoration: none; }\r\n.breadcrumb-item.active {\r\n  color: #868e96; }\r\n\r\n.pagination {\r\n  display: flex;\r\n  padding-left: 0;\r\n  list-style: none;\r\n  border-radius: 0.25rem; }\r\n\r\n.page-item:first-child .page-link {\r\n  margin-left: 0;\r\n  border-top-left-radius: 0.25rem;\r\n  border-bottom-left-radius: 0.25rem; }\r\n.page-item:last-child .page-link {\r\n  border-top-right-radius: 0.25rem;\r\n  border-bottom-right-radius: 0.25rem; }\r\n.page-item.active .page-link {\r\n  z-index: 2;\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border-color: #007bff; }\r\n.page-item.disabled .page-link {\r\n  color: #868e96;\r\n  pointer-events: none;\r\n  background-color: #fff;\r\n  border-color: #ddd; }\r\n\r\n.page-link {\r\n  position: relative;\r\n  display: block;\r\n  padding: 0.5rem 0.75rem;\r\n  margin-left: -1px;\r\n  line-height: 1.25;\r\n  color: #007bff;\r\n  background-color: #fff;\r\n  border: 1px solid #ddd; }\r\n  .page-link:focus, .page-link:hover {\r\n    color: #0056b3;\r\n    text-decoration: none;\r\n    background-color: #e9ecef;\r\n    border-color: #ddd; }\r\n\r\n.pagination-lg .page-link {\r\n  padding: 0.75rem 1.5rem;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5; }\r\n.pagination-lg .page-item:first-child .page-link {\r\n  border-top-left-radius: 0.3rem;\r\n  border-bottom-left-radius: 0.3rem; }\r\n.pagination-lg .page-item:last-child .page-link {\r\n  border-top-right-radius: 0.3rem;\r\n  border-bottom-right-radius: 0.3rem; }\r\n\r\n.pagination-sm .page-link {\r\n  padding: 0.25rem 0.5rem;\r\n  font-size: 0.875rem;\r\n  line-height: 1.5; }\r\n.pagination-sm .page-item:first-child .page-link {\r\n  border-top-left-radius: 0.2rem;\r\n  border-bottom-left-radius: 0.2rem; }\r\n.pagination-sm .page-item:last-child .page-link {\r\n  border-top-right-radius: 0.2rem;\r\n  border-bottom-right-radius: 0.2rem; }\r\n\r\n.badge {\r\n  display: inline-block;\r\n  padding: 0.25em 0.4em;\r\n  font-size: 75%;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  vertical-align: baseline;\r\n  border-radius: 0.25rem; }\r\n  .badge:empty {\r\n    display: none; }\r\n\r\n.btn .badge {\r\n  position: relative;\r\n  top: -1px; }\r\n\r\n.badge-pill {\r\n  padding-right: 0.6em;\r\n  padding-left: 0.6em;\r\n  border-radius: 10rem; }\r\n\r\n.badge-primary {\r\n  color: #fff;\r\n  background-color: #007bff; }\r\n  .badge-primary[href]:focus, .badge-primary[href]:hover {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    background-color: #0062cc; }\r\n\r\n.badge-secondary {\r\n  color: #fff;\r\n  background-color: #868e96; }\r\n  .badge-secondary[href]:focus, .badge-secondary[href]:hover {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    background-color: #6c757d; }\r\n\r\n.badge-success {\r\n  color: #fff;\r\n  background-color: #28a745; }\r\n  .badge-success[href]:focus, .badge-success[href]:hover {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    background-color: #1e7e34; }\r\n\r\n.badge-info {\r\n  color: #fff;\r\n  background-color: #17a2b8; }\r\n  .badge-info[href]:focus, .badge-info[href]:hover {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    background-color: #117a8b; }\r\n\r\n.badge-warning {\r\n  color: #111;\r\n  background-color: #ffc107; }\r\n  .badge-warning[href]:focus, .badge-warning[href]:hover {\r\n    color: #111;\r\n    text-decoration: none;\r\n    background-color: #d39e00; }\r\n\r\n.badge-danger {\r\n  color: #fff;\r\n  background-color: #dc3545; }\r\n  .badge-danger[href]:focus, .badge-danger[href]:hover {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    background-color: #bd2130; }\r\n\r\n.badge-light {\r\n  color: #111;\r\n  background-color: #f8f9fa; }\r\n  .badge-light[href]:focus, .badge-light[href]:hover {\r\n    color: #111;\r\n    text-decoration: none;\r\n    background-color: #dae0e5; }\r\n\r\n.badge-dark {\r\n  color: #fff;\r\n  background-color: #343a40; }\r\n  .badge-dark[href]:focus, .badge-dark[href]:hover {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    background-color: #1d2124; }\r\n\r\n.alert {\r\n  position: relative;\r\n  padding: 0.75rem 1.25rem;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid transparent;\r\n  border-radius: 0.25rem; }\r\n\r\n.alert-heading {\r\n  color: inherit; }\r\n\r\n.alert-link {\r\n  font-weight: 700; }\r\n\r\n.alert-dismissible .close {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  padding: 0.75rem 1.25rem;\r\n  color: inherit; }\r\n\r\n.alert-primary {\r\n  color: #004085;\r\n  background-color: #cce5ff;\r\n  border-color: #b8daff; }\r\n  .alert-primary hr {\r\n    border-top-color: #9fcdff; }\r\n  .alert-primary .alert-link {\r\n    color: #002752; }\r\n\r\n.alert-secondary {\r\n  color: #464a4e;\r\n  background-color: #e7e8ea;\r\n  border-color: #dddfe2; }\r\n  .alert-secondary hr {\r\n    border-top-color: #cfd2d6; }\r\n  .alert-secondary .alert-link {\r\n    color: #2e3133; }\r\n\r\n.alert-success {\r\n  color: #155724;\r\n  background-color: #d4edda;\r\n  border-color: #c3e6cb; }\r\n  .alert-success hr {\r\n    border-top-color: #b1dfbb; }\r\n  .alert-success .alert-link {\r\n    color: #0b2e13; }\r\n\r\n.alert-info {\r\n  color: #0c5460;\r\n  background-color: #d1ecf1;\r\n  border-color: #bee5eb; }\r\n  .alert-info hr {\r\n    border-top-color: #abdde5; }\r\n  .alert-info .alert-link {\r\n    color: #062c33; }\r\n\r\n.alert-warning {\r\n  color: #856404;\r\n  background-color: #fff3cd;\r\n  border-color: #ffeeba; }\r\n  .alert-warning hr {\r\n    border-top-color: #ffe8a1; }\r\n  .alert-warning .alert-link {\r\n    color: #533f03; }\r\n\r\n.alert-danger {\r\n  color: #721c24;\r\n  background-color: #f8d7da;\r\n  border-color: #f5c6cb; }\r\n  .alert-danger hr {\r\n    border-top-color: #f1b0b7; }\r\n  .alert-danger .alert-link {\r\n    color: #491217; }\r\n\r\n.alert-light {\r\n  color: #818182;\r\n  background-color: #fefefe;\r\n  border-color: #fdfdfe; }\r\n  .alert-light hr {\r\n    border-top-color: #ececf6; }\r\n  .alert-light .alert-link {\r\n    color: #686868; }\r\n\r\n.alert-dark {\r\n  color: #1b1e21;\r\n  background-color: #d6d8d9;\r\n  border-color: #c6c8ca; }\r\n  .alert-dark hr {\r\n    border-top-color: #b9bbbe; }\r\n  .alert-dark .alert-link {\r\n    color: #040505; }\r\n\r\n@keyframes progress-bar-stripes {\r\n  from {\r\n    background-position: 1rem 0; }\r\n  to {\r\n    background-position: 0 0; } }\r\n.progress {\r\n  display: flex;\r\n  height: 1rem;\r\n  overflow: hidden;\r\n  font-size: 0.75rem;\r\n  background-color: #e9ecef;\r\n  border-radius: 0.25rem; }\r\n\r\n.progress-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #007bff; }\r\n\r\n.progress-bar-striped {\r\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\r\n  background-size: 1rem 1rem; }\r\n\r\n.progress-bar-animated {\r\n  animation: progress-bar-stripes 1s linear infinite; }\r\n\r\n.media {\r\n  display: flex;\r\n  align-items: flex-start; }\r\n\r\n.media-body {\r\n  flex: 1; }\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: .5; }\r\n  .close:focus, .close:hover {\r\n    color: #000;\r\n    text-decoration: none;\r\n    opacity: .75; }\r\n\r\nbutton.close {\r\n  padding: 0;\r\n  background: transparent;\r\n  border: 0;\r\n  -webkit-appearance: none; }\r\n\r\n.modal-open {\r\n  overflow: hidden; }\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1050;\r\n  display: none;\r\n  overflow: hidden;\r\n  outline: 0; }\r\n  .modal.fade .modal-dialog {\r\n    transition: transform 0.3s ease-out;\r\n    transform: translate(0, -25%); }\r\n  .modal.show .modal-dialog {\r\n    transform: translate(0, 0); }\r\n\r\n.modal-open .modal {\r\n  overflow-x: hidden;\r\n  overflow-y: auto; }\r\n\r\n.modal-dialog {\r\n  position: relative;\r\n  width: auto;\r\n  margin: 10px;\r\n  pointer-events: none; }\r\n\r\n.modal-content {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  pointer-events: auto;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  border-radius: 0.3rem;\r\n  outline: 0; }\r\n\r\n.modal-backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1040;\r\n  background-color: #000; }\r\n  .modal-backdrop.fade {\r\n    opacity: 0; }\r\n  .modal-backdrop.show {\r\n    opacity: 0.5; }\r\n\r\n.modal-header {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  border-top-left-radius: 0.3rem;\r\n  border-top-right-radius: 0.3rem; }\r\n  .modal-header .close {\r\n    padding: 15px;\r\n    margin: -15px -15px -15px auto; }\r\n\r\n.modal-title {\r\n  margin-bottom: 0;\r\n  line-height: 1.5; }\r\n\r\n.modal-body {\r\n  position: relative;\r\n  flex: 1 1 auto;\r\n  padding: 15px; }\r\n\r\n.modal-footer {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 15px;\r\n  border-top: 1px solid #e9ecef; }\r\n  .modal-footer > :not(:first-child) {\r\n    margin-left: .25rem; }\r\n  .modal-footer > :not(:last-child) {\r\n    margin-right: .25rem; }\r\n\r\n.modal-scrollbar-measure {\r\n  position: absolute;\r\n  top: -9999px;\r\n  width: 50px;\r\n  height: 50px;\r\n  overflow: scroll; }\r\n\r\n@media (min-width: 576px) {\r\n  .modal-dialog {\r\n    max-width: 500px;\r\n    margin: 30px auto; }\r\n\r\n  .modal-sm {\r\n    max-width: 300px; } }\r\n@media (min-width: 992px) {\r\n  .modal-lg {\r\n    max-width: 800px; } }\r\n.tooltip {\r\n  position: absolute;\r\n  z-index: 1070;\r\n  display: block;\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  text-align: left;\r\n  text-align: start;\r\n  text-decoration: none;\r\n  text-shadow: none;\r\n  text-transform: none;\r\n  letter-spacing: normal;\r\n  word-break: normal;\r\n  word-spacing: normal;\r\n  white-space: normal;\r\n  line-break: auto;\r\n  font-size: 0.875rem;\r\n  word-wrap: break-word;\r\n  opacity: 0; }\r\n  .tooltip.show {\r\n    opacity: 0.9; }\r\n  .tooltip .arrow {\r\n    position: absolute;\r\n    display: block;\r\n    width: 5px;\r\n    height: 5px; }\r\n  .tooltip .arrow::before {\r\n    position: absolute;\r\n    border-color: transparent;\r\n    border-style: solid; }\r\n  .tooltip.bs-tooltip-top, .tooltip.bs-tooltip-auto[x-placement^="top"] {\r\n    padding: 5px 0; }\r\n    .tooltip.bs-tooltip-top .arrow, .tooltip.bs-tooltip-auto[x-placement^="top"] .arrow {\r\n      bottom: 0; }\r\n    .tooltip.bs-tooltip-top .arrow::before, .tooltip.bs-tooltip-auto[x-placement^="top"] .arrow::before {\r\n      margin-left: -3px;\r\n      content: "";\r\n      border-width: 5px 5px 0;\r\n      border-top-color: #000; }\r\n  .tooltip.bs-tooltip-right, .tooltip.bs-tooltip-auto[x-placement^="right"] {\r\n    padding: 0 5px; }\r\n    .tooltip.bs-tooltip-right .arrow, .tooltip.bs-tooltip-auto[x-placement^="right"] .arrow {\r\n      left: 0; }\r\n    .tooltip.bs-tooltip-right .arrow::before, .tooltip.bs-tooltip-auto[x-placement^="right"] .arrow::before {\r\n      margin-top: -3px;\r\n      content: "";\r\n      border-width: 5px 5px 5px 0;\r\n      border-right-color: #000; }\r\n  .tooltip.bs-tooltip-bottom, .tooltip.bs-tooltip-auto[x-placement^="bottom"] {\r\n    padding: 5px 0; }\r\n    .tooltip.bs-tooltip-bottom .arrow, .tooltip.bs-tooltip-auto[x-placement^="bottom"] .arrow {\r\n      top: 0; }\r\n    .tooltip.bs-tooltip-bottom .arrow::before, .tooltip.bs-tooltip-auto[x-placement^="bottom"] .arrow::before {\r\n      margin-left: -3px;\r\n      content: "";\r\n      border-width: 0 5px 5px;\r\n      border-bottom-color: #000; }\r\n  .tooltip.bs-tooltip-left, .tooltip.bs-tooltip-auto[x-placement^="left"] {\r\n    padding: 0 5px; }\r\n    .tooltip.bs-tooltip-left .arrow, .tooltip.bs-tooltip-auto[x-placement^="left"] .arrow {\r\n      right: 0; }\r\n    .tooltip.bs-tooltip-left .arrow::before, .tooltip.bs-tooltip-auto[x-placement^="left"] .arrow::before {\r\n      right: 0;\r\n      margin-top: -3px;\r\n      content: "";\r\n      border-width: 5px 0 5px 5px;\r\n      border-left-color: #000; }\r\n\r\n.tooltip-inner {\r\n  max-width: 200px;\r\n  padding: 3px 8px;\r\n  color: #fff;\r\n  text-align: center;\r\n  background-color: #000;\r\n  border-radius: 0.25rem; }\r\n\r\n.popover {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1060;\r\n  display: block;\r\n  max-width: 276px;\r\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  text-align: left;\r\n  text-align: start;\r\n  text-decoration: none;\r\n  text-shadow: none;\r\n  text-transform: none;\r\n  letter-spacing: normal;\r\n  word-break: normal;\r\n  word-spacing: normal;\r\n  white-space: normal;\r\n  line-break: auto;\r\n  font-size: 0.875rem;\r\n  word-wrap: break-word;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  border-radius: 0.3rem; }\r\n  .popover .arrow {\r\n    position: absolute;\r\n    display: block;\r\n    width: 0.8rem;\r\n    height: 0.4rem; }\r\n  .popover .arrow::before,\r\n  .popover .arrow::after {\r\n    position: absolute;\r\n    display: block;\r\n    border-color: transparent;\r\n    border-style: solid; }\r\n  .popover .arrow::before {\r\n    content: "";\r\n    border-width: 0.8rem; }\r\n  .popover .arrow::after {\r\n    content: "";\r\n    border-width: 0.8rem; }\r\n  .popover.bs-popover-top, .popover.bs-popover-auto[x-placement^="top"] {\r\n    margin-bottom: 0.8rem; }\r\n    .popover.bs-popover-top .arrow, .popover.bs-popover-auto[x-placement^="top"] .arrow {\r\n      bottom: 0; }\r\n    .popover.bs-popover-top .arrow::before, .popover.bs-popover-auto[x-placement^="top"] .arrow::before,\r\n    .popover.bs-popover-top .arrow::after,\r\n    .popover.bs-popover-auto[x-placement^="top"] .arrow::after {\r\n      border-bottom-width: 0; }\r\n    .popover.bs-popover-top .arrow::before, .popover.bs-popover-auto[x-placement^="top"] .arrow::before {\r\n      bottom: -0.8rem;\r\n      margin-left: -0.8rem;\r\n      border-top-color: rgba(0, 0, 0, 0.25); }\r\n    .popover.bs-popover-top .arrow::after, .popover.bs-popover-auto[x-placement^="top"] .arrow::after {\r\n      bottom: calc((0.8rem - 1px) * -1);\r\n      margin-left: -0.8rem;\r\n      border-top-color: #fff; }\r\n  .popover.bs-popover-right, .popover.bs-popover-auto[x-placement^="right"] {\r\n    margin-left: 0.8rem; }\r\n    .popover.bs-popover-right .arrow, .popover.bs-popover-auto[x-placement^="right"] .arrow {\r\n      left: 0; }\r\n    .popover.bs-popover-right .arrow::before, .popover.bs-popover-auto[x-placement^="right"] .arrow::before,\r\n    .popover.bs-popover-right .arrow::after,\r\n    .popover.bs-popover-auto[x-placement^="right"] .arrow::after {\r\n      margin-top: -0.8rem;\r\n      border-left-width: 0; }\r\n    .popover.bs-popover-right .arrow::before, .popover.bs-popover-auto[x-placement^="right"] .arrow::before {\r\n      left: -0.8rem;\r\n      border-right-color: rgba(0, 0, 0, 0.25); }\r\n    .popover.bs-popover-right .arrow::after, .popover.bs-popover-auto[x-placement^="right"] .arrow::after {\r\n      left: calc((0.8rem - 1px) * -1);\r\n      border-right-color: #fff; }\r\n  .popover.bs-popover-bottom, .popover.bs-popover-auto[x-placement^="bottom"] {\r\n    margin-top: 0.8rem; }\r\n    .popover.bs-popover-bottom .arrow, .popover.bs-popover-auto[x-placement^="bottom"] .arrow {\r\n      top: 0; }\r\n    .popover.bs-popover-bottom .arrow::before, .popover.bs-popover-auto[x-placement^="bottom"] .arrow::before,\r\n    .popover.bs-popover-bottom .arrow::after,\r\n    .popover.bs-popover-auto[x-placement^="bottom"] .arrow::after {\r\n      margin-left: -0.8rem;\r\n      border-top-width: 0; }\r\n    .popover.bs-popover-bottom .arrow::before, .popover.bs-popover-auto[x-placement^="bottom"] .arrow::before {\r\n      top: -0.8rem;\r\n      border-bottom-color: rgba(0, 0, 0, 0.25); }\r\n    .popover.bs-popover-bottom .arrow::after, .popover.bs-popover-auto[x-placement^="bottom"] .arrow::after {\r\n      top: calc((0.8rem - 1px) * -1);\r\n      border-bottom-color: #fff; }\r\n    .popover.bs-popover-bottom .popover-header::before, .popover.bs-popover-auto[x-placement^="bottom"] .popover-header::before {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 50%;\r\n      display: block;\r\n      width: 20px;\r\n      margin-left: -10px;\r\n      content: "";\r\n      border-bottom: 1px solid #f7f7f7; }\r\n  .popover.bs-popover-left, .popover.bs-popover-auto[x-placement^="left"] {\r\n    margin-right: 0.8rem; }\r\n    .popover.bs-popover-left .arrow, .popover.bs-popover-auto[x-placement^="left"] .arrow {\r\n      right: 0; }\r\n    .popover.bs-popover-left .arrow::before, .popover.bs-popover-auto[x-placement^="left"] .arrow::before,\r\n    .popover.bs-popover-left .arrow::after,\r\n    .popover.bs-popover-auto[x-placement^="left"] .arrow::after {\r\n      margin-top: -0.8rem;\r\n      border-right-width: 0; }\r\n    .popover.bs-popover-left .arrow::before, .popover.bs-popover-auto[x-placement^="left"] .arrow::before {\r\n      right: -0.8rem;\r\n      border-left-color: rgba(0, 0, 0, 0.25); }\r\n    .popover.bs-popover-left .arrow::after, .popover.bs-popover-auto[x-placement^="left"] .arrow::after {\r\n      right: calc((0.8rem - 1px) * -1);\r\n      border-left-color: #fff; }\r\n\r\n.popover-header {\r\n  padding: 0.5rem 0.75rem;\r\n  margin-bottom: 0;\r\n  font-size: 1rem;\r\n  color: inherit;\r\n  background-color: #f7f7f7;\r\n  border-bottom: 1px solid #ebebeb;\r\n  border-top-left-radius: calc(0.3rem - 1px);\r\n  border-top-right-radius: calc(0.3rem - 1px); }\r\n  .popover-header:empty {\r\n    display: none; }\r\n\r\n.popover-body {\r\n  padding: 0.5rem 0.75rem;\r\n  color: #212529; }\r\n\r\n.align-baseline {\r\n  vertical-align: baseline !important; }\r\n\r\n.align-top {\r\n  vertical-align: top !important; }\r\n\r\n.align-middle {\r\n  vertical-align: middle !important; }\r\n\r\n.align-bottom {\r\n  vertical-align: bottom !important; }\r\n\r\n.align-text-bottom {\r\n  vertical-align: text-bottom !important; }\r\n\r\n.align-text-top {\r\n  vertical-align: text-top !important; }\r\n\r\n.bg-primary {\r\n  background-color: #007bff !important; }\r\n\r\na.bg-primary:focus, a.bg-primary:hover {\r\n  background-color: #0062cc !important; }\r\n\r\n.bg-secondary {\r\n  background-color: #868e96 !important; }\r\n\r\na.bg-secondary:focus, a.bg-secondary:hover {\r\n  background-color: #6c757d !important; }\r\n\r\n.bg-success {\r\n  background-color: #28a745 !important; }\r\n\r\na.bg-success:focus, a.bg-success:hover {\r\n  background-color: #1e7e34 !important; }\r\n\r\n.bg-info {\r\n  background-color: #17a2b8 !important; }\r\n\r\na.bg-info:focus, a.bg-info:hover {\r\n  background-color: #117a8b !important; }\r\n\r\n.bg-warning {\r\n  background-color: #ffc107 !important; }\r\n\r\na.bg-warning:focus, a.bg-warning:hover {\r\n  background-color: #d39e00 !important; }\r\n\r\n.bg-danger {\r\n  background-color: #dc3545 !important; }\r\n\r\na.bg-danger:focus, a.bg-danger:hover {\r\n  background-color: #bd2130 !important; }\r\n\r\n.bg-light {\r\n  background-color: #f8f9fa !important; }\r\n\r\na.bg-light:focus, a.bg-light:hover {\r\n  background-color: #dae0e5 !important; }\r\n\r\n.bg-dark {\r\n  background-color: #343a40 !important; }\r\n\r\na.bg-dark:focus, a.bg-dark:hover {\r\n  background-color: #1d2124 !important; }\r\n\r\n.bg-white {\r\n  background-color: #fff !important; }\r\n\r\n.bg-transparent {\r\n  background-color: transparent !important; }\r\n\r\n.border {\r\n  border: 1px solid #e9ecef !important; }\r\n\r\n.border-0 {\r\n  border: 0 !important; }\r\n\r\n.border-top-0 {\r\n  border-top: 0 !important; }\r\n\r\n.border-right-0 {\r\n  border-right: 0 !important; }\r\n\r\n.border-bottom-0 {\r\n  border-bottom: 0 !important; }\r\n\r\n.border-left-0 {\r\n  border-left: 0 !important; }\r\n\r\n.border-primary {\r\n  border-color: #007bff !important; }\r\n\r\n.border-secondary {\r\n  border-color: #868e96 !important; }\r\n\r\n.border-success {\r\n  border-color: #28a745 !important; }\r\n\r\n.border-info {\r\n  border-color: #17a2b8 !important; }\r\n\r\n.border-warning {\r\n  border-color: #ffc107 !important; }\r\n\r\n.border-danger {\r\n  border-color: #dc3545 !important; }\r\n\r\n.border-light {\r\n  border-color: #f8f9fa !important; }\r\n\r\n.border-dark {\r\n  border-color: #343a40 !important; }\r\n\r\n.border-white {\r\n  border-color: #fff !important; }\r\n\r\n.rounded {\r\n  border-radius: 0.25rem !important; }\r\n\r\n.rounded-top {\r\n  border-top-left-radius: 0.25rem !important;\r\n  border-top-right-radius: 0.25rem !important; }\r\n\r\n.rounded-right {\r\n  border-top-right-radius: 0.25rem !important;\r\n  border-bottom-right-radius: 0.25rem !important; }\r\n\r\n.rounded-bottom {\r\n  border-bottom-right-radius: 0.25rem !important;\r\n  border-bottom-left-radius: 0.25rem !important; }\r\n\r\n.rounded-left {\r\n  border-top-left-radius: 0.25rem !important;\r\n  border-bottom-left-radius: 0.25rem !important; }\r\n\r\n.rounded-circle {\r\n  border-radius: 50% !important; }\r\n\r\n.rounded-0 {\r\n  border-radius: 0 !important; }\r\n\r\n.clearfix::after {\r\n  display: block;\r\n  clear: both;\r\n  content: ""; }\r\n\r\n.d-none {\r\n  display: none !important; }\r\n\r\n.d-inline {\r\n  display: inline !important; }\r\n\r\n.d-inline-block {\r\n  display: inline-block !important; }\r\n\r\n.d-block {\r\n  display: block !important; }\r\n\r\n.d-table {\r\n  display: table !important; }\r\n\r\n.d-table-row {\r\n  display: table-row !important; }\r\n\r\n.d-table-cell {\r\n  display: table-cell !important; }\r\n\r\n.d-flex {\r\n  display: flex !important; }\r\n\r\n.d-inline-flex {\r\n  display: inline-flex !important; }\r\n\r\n@media (min-width: 576px) {\r\n  .d-sm-none {\r\n    display: none !important; }\r\n\r\n  .d-sm-inline {\r\n    display: inline !important; }\r\n\r\n  .d-sm-inline-block {\r\n    display: inline-block !important; }\r\n\r\n  .d-sm-block {\r\n    display: block !important; }\r\n\r\n  .d-sm-table {\r\n    display: table !important; }\r\n\r\n  .d-sm-table-row {\r\n    display: table-row !important; }\r\n\r\n  .d-sm-table-cell {\r\n    display: table-cell !important; }\r\n\r\n  .d-sm-flex {\r\n    display: flex !important; }\r\n\r\n  .d-sm-inline-flex {\r\n    display: inline-flex !important; } }\r\n@media (min-width: 768px) {\r\n  .d-md-none {\r\n    display: none !important; }\r\n\r\n  .d-md-inline {\r\n    display: inline !important; }\r\n\r\n  .d-md-inline-block {\r\n    display: inline-block !important; }\r\n\r\n  .d-md-block {\r\n    display: block !important; }\r\n\r\n  .d-md-table {\r\n    display: table !important; }\r\n\r\n  .d-md-table-row {\r\n    display: table-row !important; }\r\n\r\n  .d-md-table-cell {\r\n    display: table-cell !important; }\r\n\r\n  .d-md-flex {\r\n    display: flex !important; }\r\n\r\n  .d-md-inline-flex {\r\n    display: inline-flex !important; } }\r\n@media (min-width: 992px) {\r\n  .d-lg-none {\r\n    display: none !important; }\r\n\r\n  .d-lg-inline {\r\n    display: inline !important; }\r\n\r\n  .d-lg-inline-block {\r\n    display: inline-block !important; }\r\n\r\n  .d-lg-block {\r\n    display: block !important; }\r\n\r\n  .d-lg-table {\r\n    display: table !important; }\r\n\r\n  .d-lg-table-row {\r\n    display: table-row !important; }\r\n\r\n  .d-lg-table-cell {\r\n    display: table-cell !important; }\r\n\r\n  .d-lg-flex {\r\n    display: flex !important; }\r\n\r\n  .d-lg-inline-flex {\r\n    display: inline-flex !important; } }\r\n@media (min-width: 1200px) {\r\n  .d-xl-none {\r\n    display: none !important; }\r\n\r\n  .d-xl-inline {\r\n    display: inline !important; }\r\n\r\n  .d-xl-inline-block {\r\n    display: inline-block !important; }\r\n\r\n  .d-xl-block {\r\n    display: block !important; }\r\n\r\n  .d-xl-table {\r\n    display: table !important; }\r\n\r\n  .d-xl-table-row {\r\n    display: table-row !important; }\r\n\r\n  .d-xl-table-cell {\r\n    display: table-cell !important; }\r\n\r\n  .d-xl-flex {\r\n    display: flex !important; }\r\n\r\n  .d-xl-inline-flex {\r\n    display: inline-flex !important; } }\r\n.d-print-block {\r\n  display: none !important; }\r\n  @media print {\r\n    .d-print-block {\r\n      display: block !important; } }\r\n\r\n.d-print-inline {\r\n  display: none !important; }\r\n  @media print {\r\n    .d-print-inline {\r\n      display: inline !important; } }\r\n\r\n.d-print-inline-block {\r\n  display: none !important; }\r\n  @media print {\r\n    .d-print-inline-block {\r\n      display: inline-block !important; } }\r\n\r\n@media print {\r\n  .d-print-none {\r\n    display: none !important; } }\r\n\r\n.embed-responsive {\r\n  position: relative;\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0;\r\n  overflow: hidden; }\r\n  .embed-responsive::before {\r\n    display: block;\r\n    content: ""; }\r\n  .embed-responsive .embed-responsive-item,\r\n  .embed-responsive iframe,\r\n  .embed-responsive embed,\r\n  .embed-responsive object,\r\n  .embed-responsive video {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 0; }\r\n\r\n.embed-responsive-21by9::before {\r\n  padding-top: 42.8571428571%; }\r\n\r\n.embed-responsive-16by9::before {\r\n  padding-top: 56.25%; }\r\n\r\n.embed-responsive-4by3::before {\r\n  padding-top: 75%; }\r\n\r\n.embed-responsive-1by1::before {\r\n  padding-top: 100%; }\r\n\r\n.flex-row {\r\n  flex-direction: row !important; }\r\n\r\n.flex-column {\r\n  flex-direction: column !important; }\r\n\r\n.flex-row-reverse {\r\n  flex-direction: row-reverse !important; }\r\n\r\n.flex-column-reverse {\r\n  flex-direction: column-reverse !important; }\r\n\r\n.flex-wrap {\r\n  flex-wrap: wrap !important; }\r\n\r\n.flex-nowrap {\r\n  flex-wrap: nowrap !important; }\r\n\r\n.flex-wrap-reverse {\r\n  flex-wrap: wrap-reverse !important; }\r\n\r\n.justify-content-start {\r\n  justify-content: flex-start !important; }\r\n\r\n.justify-content-end {\r\n  justify-content: flex-end !important; }\r\n\r\n.justify-content-center {\r\n  justify-content: center !important; }\r\n\r\n.justify-content-between {\r\n  justify-content: space-between !important; }\r\n\r\n.justify-content-around {\r\n  justify-content: space-around !important; }\r\n\r\n.align-items-start {\r\n  align-items: flex-start !important; }\r\n\r\n.align-items-end {\r\n  align-items: flex-end !important; }\r\n\r\n.align-items-center {\r\n  align-items: center !important; }\r\n\r\n.align-items-baseline {\r\n  align-items: baseline !important; }\r\n\r\n.align-items-stretch {\r\n  align-items: stretch !important; }\r\n\r\n.align-content-start {\r\n  align-content: flex-start !important; }\r\n\r\n.align-content-end {\r\n  align-content: flex-end !important; }\r\n\r\n.align-content-center {\r\n  align-content: center !important; }\r\n\r\n.align-content-between {\r\n  align-content: space-between !important; }\r\n\r\n.align-content-around {\r\n  align-content: space-around !important; }\r\n\r\n.align-content-stretch {\r\n  align-content: stretch !important; }\r\n\r\n.align-self-auto {\r\n  align-self: auto !important; }\r\n\r\n.align-self-start {\r\n  align-self: flex-start !important; }\r\n\r\n.align-self-end {\r\n  align-self: flex-end !important; }\r\n\r\n.align-self-center {\r\n  align-self: center !important; }\r\n\r\n.align-self-baseline {\r\n  align-self: baseline !important; }\r\n\r\n.align-self-stretch {\r\n  align-self: stretch !important; }\r\n\r\n@media (min-width: 576px) {\r\n  .flex-sm-row {\r\n    flex-direction: row !important; }\r\n\r\n  .flex-sm-column {\r\n    flex-direction: column !important; }\r\n\r\n  .flex-sm-row-reverse {\r\n    flex-direction: row-reverse !important; }\r\n\r\n  .flex-sm-column-reverse {\r\n    flex-direction: column-reverse !important; }\r\n\r\n  .flex-sm-wrap {\r\n    flex-wrap: wrap !important; }\r\n\r\n  .flex-sm-nowrap {\r\n    flex-wrap: nowrap !important; }\r\n\r\n  .flex-sm-wrap-reverse {\r\n    flex-wrap: wrap-reverse !important; }\r\n\r\n  .justify-content-sm-start {\r\n    justify-content: flex-start !important; }\r\n\r\n  .justify-content-sm-end {\r\n    justify-content: flex-end !important; }\r\n\r\n  .justify-content-sm-center {\r\n    justify-content: center !important; }\r\n\r\n  .justify-content-sm-between {\r\n    justify-content: space-between !important; }\r\n\r\n  .justify-content-sm-around {\r\n    justify-content: space-around !important; }\r\n\r\n  .align-items-sm-start {\r\n    align-items: flex-start !important; }\r\n\r\n  .align-items-sm-end {\r\n    align-items: flex-end !important; }\r\n\r\n  .align-items-sm-center {\r\n    align-items: center !important; }\r\n\r\n  .align-items-sm-baseline {\r\n    align-items: baseline !important; }\r\n\r\n  .align-items-sm-stretch {\r\n    align-items: stretch !important; }\r\n\r\n  .align-content-sm-start {\r\n    align-content: flex-start !important; }\r\n\r\n  .align-content-sm-end {\r\n    align-content: flex-end !important; }\r\n\r\n  .align-content-sm-center {\r\n    align-content: center !important; }\r\n\r\n  .align-content-sm-between {\r\n    align-content: space-between !important; }\r\n\r\n  .align-content-sm-around {\r\n    align-content: space-around !important; }\r\n\r\n  .align-content-sm-stretch {\r\n    align-content: stretch !important; }\r\n\r\n  .align-self-sm-auto {\r\n    align-self: auto !important; }\r\n\r\n  .align-self-sm-start {\r\n    align-self: flex-start !important; }\r\n\r\n  .align-self-sm-end {\r\n    align-self: flex-end !important; }\r\n\r\n  .align-self-sm-center {\r\n    align-self: center !important; }\r\n\r\n  .align-self-sm-baseline {\r\n    align-self: baseline !important; }\r\n\r\n  .align-self-sm-stretch {\r\n    align-self: stretch !important; } }\r\n@media (min-width: 768px) {\r\n  .flex-md-row {\r\n    flex-direction: row !important; }\r\n\r\n  .flex-md-column {\r\n    flex-direction: column !important; }\r\n\r\n  .flex-md-row-reverse {\r\n    flex-direction: row-reverse !important; }\r\n\r\n  .flex-md-column-reverse {\r\n    flex-direction: column-reverse !important; }\r\n\r\n  .flex-md-wrap {\r\n    flex-wrap: wrap !important; }\r\n\r\n  .flex-md-nowrap {\r\n    flex-wrap: nowrap !important; }\r\n\r\n  .flex-md-wrap-reverse {\r\n    flex-wrap: wrap-reverse !important; }\r\n\r\n  .justify-content-md-start {\r\n    justify-content: flex-start !important; }\r\n\r\n  .justify-content-md-end {\r\n    justify-content: flex-end !important; }\r\n\r\n  .justify-content-md-center {\r\n    justify-content: center !important; }\r\n\r\n  .justify-content-md-between {\r\n    justify-content: space-between !important; }\r\n\r\n  .justify-content-md-around {\r\n    justify-content: space-around !important; }\r\n\r\n  .align-items-md-start {\r\n    align-items: flex-start !important; }\r\n\r\n  .align-items-md-end {\r\n    align-items: flex-end !important; }\r\n\r\n  .align-items-md-center {\r\n    align-items: center !important; }\r\n\r\n  .align-items-md-baseline {\r\n    align-items: baseline !important; }\r\n\r\n  .align-items-md-stretch {\r\n    align-items: stretch !important; }\r\n\r\n  .align-content-md-start {\r\n    align-content: flex-start !important; }\r\n\r\n  .align-content-md-end {\r\n    align-content: flex-end !important; }\r\n\r\n  .align-content-md-center {\r\n    align-content: center !important; }\r\n\r\n  .align-content-md-between {\r\n    align-content: space-between !important; }\r\n\r\n  .align-content-md-around {\r\n    align-content: space-around !important; }\r\n\r\n  .align-content-md-stretch {\r\n    align-content: stretch !important; }\r\n\r\n  .align-self-md-auto {\r\n    align-self: auto !important; }\r\n\r\n  .align-self-md-start {\r\n    align-self: flex-start !important; }\r\n\r\n  .align-self-md-end {\r\n    align-self: flex-end !important; }\r\n\r\n  .align-self-md-center {\r\n    align-self: center !important; }\r\n\r\n  .align-self-md-baseline {\r\n    align-self: baseline !important; }\r\n\r\n  .align-self-md-stretch {\r\n    align-self: stretch !important; } }\r\n@media (min-width: 992px) {\r\n  .flex-lg-row {\r\n    flex-direction: row !important; }\r\n\r\n  .flex-lg-column {\r\n    flex-direction: column !important; }\r\n\r\n  .flex-lg-row-reverse {\r\n    flex-direction: row-reverse !important; }\r\n\r\n  .flex-lg-column-reverse {\r\n    flex-direction: column-reverse !important; }\r\n\r\n  .flex-lg-wrap {\r\n    flex-wrap: wrap !important; }\r\n\r\n  .flex-lg-nowrap {\r\n    flex-wrap: nowrap !important; }\r\n\r\n  .flex-lg-wrap-reverse {\r\n    flex-wrap: wrap-reverse !important; }\r\n\r\n  .justify-content-lg-start {\r\n    justify-content: flex-start !important; }\r\n\r\n  .justify-content-lg-end {\r\n    justify-content: flex-end !important; }\r\n\r\n  .justify-content-lg-center {\r\n    justify-content: center !important; }\r\n\r\n  .justify-content-lg-between {\r\n    justify-content: space-between !important; }\r\n\r\n  .justify-content-lg-around {\r\n    justify-content: space-around !important; }\r\n\r\n  .align-items-lg-start {\r\n    align-items: flex-start !important; }\r\n\r\n  .align-items-lg-end {\r\n    align-items: flex-end !important; }\r\n\r\n  .align-items-lg-center {\r\n    align-items: center !important; }\r\n\r\n  .align-items-lg-baseline {\r\n    align-items: baseline !important; }\r\n\r\n  .align-items-lg-stretch {\r\n    align-items: stretch !important; }\r\n\r\n  .align-content-lg-start {\r\n    align-content: flex-start !important; }\r\n\r\n  .align-content-lg-end {\r\n    align-content: flex-end !important; }\r\n\r\n  .align-content-lg-center {\r\n    align-content: center !important; }\r\n\r\n  .align-content-lg-between {\r\n    align-content: space-between !important; }\r\n\r\n  .align-content-lg-around {\r\n    align-content: space-around !important; }\r\n\r\n  .align-content-lg-stretch {\r\n    align-content: stretch !important; }\r\n\r\n  .align-self-lg-auto {\r\n    align-self: auto !important; }\r\n\r\n  .align-self-lg-start {\r\n    align-self: flex-start !important; }\r\n\r\n  .align-self-lg-end {\r\n    align-self: flex-end !important; }\r\n\r\n  .align-self-lg-center {\r\n    align-self: center !important; }\r\n\r\n  .align-self-lg-baseline {\r\n    align-self: baseline !important; }\r\n\r\n  .align-self-lg-stretch {\r\n    align-self: stretch !important; } }\r\n@media (min-width: 1200px) {\r\n  .flex-xl-row {\r\n    flex-direction: row !important; }\r\n\r\n  .flex-xl-column {\r\n    flex-direction: column !important; }\r\n\r\n  .flex-xl-row-reverse {\r\n    flex-direction: row-reverse !important; }\r\n\r\n  .flex-xl-column-reverse {\r\n    flex-direction: column-reverse !important; }\r\n\r\n  .flex-xl-wrap {\r\n    flex-wrap: wrap !important; }\r\n\r\n  .flex-xl-nowrap {\r\n    flex-wrap: nowrap !important; }\r\n\r\n  .flex-xl-wrap-reverse {\r\n    flex-wrap: wrap-reverse !important; }\r\n\r\n  .justify-content-xl-start {\r\n    justify-content: flex-start !important; }\r\n\r\n  .justify-content-xl-end {\r\n    justify-content: flex-end !important; }\r\n\r\n  .justify-content-xl-center {\r\n    justify-content: center !important; }\r\n\r\n  .justify-content-xl-between {\r\n    justify-content: space-between !important; }\r\n\r\n  .justify-content-xl-around {\r\n    justify-content: space-around !important; }\r\n\r\n  .align-items-xl-start {\r\n    align-items: flex-start !important; }\r\n\r\n  .align-items-xl-end {\r\n    align-items: flex-end !important; }\r\n\r\n  .align-items-xl-center {\r\n    align-items: center !important; }\r\n\r\n  .align-items-xl-baseline {\r\n    align-items: baseline !important; }\r\n\r\n  .align-items-xl-stretch {\r\n    align-items: stretch !important; }\r\n\r\n  .align-content-xl-start {\r\n    align-content: flex-start !important; }\r\n\r\n  .align-content-xl-end {\r\n    align-content: flex-end !important; }\r\n\r\n  .align-content-xl-center {\r\n    align-content: center !important; }\r\n\r\n  .align-content-xl-between {\r\n    align-content: space-between !important; }\r\n\r\n  .align-content-xl-around {\r\n    align-content: space-around !important; }\r\n\r\n  .align-content-xl-stretch {\r\n    align-content: stretch !important; }\r\n\r\n  .align-self-xl-auto {\r\n    align-self: auto !important; }\r\n\r\n  .align-self-xl-start {\r\n    align-self: flex-start !important; }\r\n\r\n  .align-self-xl-end {\r\n    align-self: flex-end !important; }\r\n\r\n  .align-self-xl-center {\r\n    align-self: center !important; }\r\n\r\n  .align-self-xl-baseline {\r\n    align-self: baseline !important; }\r\n\r\n  .align-self-xl-stretch {\r\n    align-self: stretch !important; } }\r\n.float-left {\r\n  float: left !important; }\r\n\r\n.float-right {\r\n  float: right !important; }\r\n\r\n.float-none {\r\n  float: none !important; }\r\n\r\n@media (min-width: 576px) {\r\n  .float-sm-left {\r\n    float: left !important; }\r\n\r\n  .float-sm-right {\r\n    float: right !important; }\r\n\r\n  .float-sm-none {\r\n    float: none !important; } }\r\n@media (min-width: 768px) {\r\n  .float-md-left {\r\n    float: left !important; }\r\n\r\n  .float-md-right {\r\n    float: right !important; }\r\n\r\n  .float-md-none {\r\n    float: none !important; } }\r\n@media (min-width: 992px) {\r\n  .float-lg-left {\r\n    float: left !important; }\r\n\r\n  .float-lg-right {\r\n    float: right !important; }\r\n\r\n  .float-lg-none {\r\n    float: none !important; } }\r\n@media (min-width: 1200px) {\r\n  .float-xl-left {\r\n    float: left !important; }\r\n\r\n  .float-xl-right {\r\n    float: right !important; }\r\n\r\n  .float-xl-none {\r\n    float: none !important; } }\r\n.position-static {\r\n  position: static !important; }\r\n\r\n.position-relative {\r\n  position: relative !important; }\r\n\r\n.position-absolute {\r\n  position: absolute !important; }\r\n\r\n.position-fixed {\r\n  position: fixed !important; }\r\n\r\n.position-sticky {\r\n  position: sticky !important; }\r\n\r\n.fixed-top {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  z-index: 1030; }\r\n\r\n.fixed-bottom {\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1030; }\r\n\r\n@supports (position: sticky) {\r\n  .sticky-top {\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 1020; } }\r\n\r\n.sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0; }\r\n\r\n.sr-only-focusable:active, .sr-only-focusable:focus {\r\n  position: static;\r\n  width: auto;\r\n  height: auto;\r\n  overflow: visible;\r\n  clip: auto;\r\n  white-space: normal;\r\n  clip-path: none; }\r\n\r\n.w-25 {\r\n  width: 25% !important; }\r\n\r\n.w-50 {\r\n  width: 50% !important; }\r\n\r\n.w-75 {\r\n  width: 75% !important; }\r\n\r\n.w-100 {\r\n  width: 100% !important; }\r\n\r\n.h-25 {\r\n  height: 25% !important; }\r\n\r\n.h-50 {\r\n  height: 50% !important; }\r\n\r\n.h-75 {\r\n  height: 75% !important; }\r\n\r\n.h-100 {\r\n  height: 100% !important; }\r\n\r\n.mw-100 {\r\n  max-width: 100% !important; }\r\n\r\n.mh-100 {\r\n  max-height: 100% !important; }\r\n\r\n.m-0 {\r\n  margin: 0 !important; }\r\n\r\n.mt-0,\r\n.my-0 {\r\n  margin-top: 0 !important; }\r\n\r\n.mr-0,\r\n.mx-0 {\r\n  margin-right: 0 !important; }\r\n\r\n.mb-0,\r\n.my-0 {\r\n  margin-bottom: 0 !important; }\r\n\r\n.ml-0,\r\n.mx-0 {\r\n  margin-left: 0 !important; }\r\n\r\n.m-1 {\r\n  margin: 0.25rem !important; }\r\n\r\n.mt-1,\r\n.my-1 {\r\n  margin-top: 0.25rem !important; }\r\n\r\n.mr-1,\r\n.mx-1 {\r\n  margin-right: 0.25rem !important; }\r\n\r\n.mb-1,\r\n.my-1 {\r\n  margin-bottom: 0.25rem !important; }\r\n\r\n.ml-1,\r\n.mx-1 {\r\n  margin-left: 0.25rem !important; }\r\n\r\n.m-2 {\r\n  margin: 0.5rem !important; }\r\n\r\n.mt-2,\r\n.my-2 {\r\n  margin-top: 0.5rem !important; }\r\n\r\n.mr-2,\r\n.mx-2 {\r\n  margin-right: 0.5rem !important; }\r\n\r\n.mb-2,\r\n.my-2 {\r\n  margin-bottom: 0.5rem !important; }\r\n\r\n.ml-2,\r\n.mx-2 {\r\n  margin-left: 0.5rem !important; }\r\n\r\n.m-3 {\r\n  margin: 1rem !important; }\r\n\r\n.mt-3,\r\n.my-3 {\r\n  margin-top: 1rem !important; }\r\n\r\n.mr-3,\r\n.mx-3 {\r\n  margin-right: 1rem !important; }\r\n\r\n.mb-3,\r\n.my-3 {\r\n  margin-bottom: 1rem !important; }\r\n\r\n.ml-3,\r\n.mx-3 {\r\n  margin-left: 1rem !important; }\r\n\r\n.m-4 {\r\n  margin: 1.5rem !important; }\r\n\r\n.mt-4,\r\n.my-4 {\r\n  margin-top: 1.5rem !important; }\r\n\r\n.mr-4,\r\n.mx-4 {\r\n  margin-right: 1.5rem !important; }\r\n\r\n.mb-4,\r\n.my-4 {\r\n  margin-bottom: 1.5rem !important; }\r\n\r\n.ml-4,\r\n.mx-4 {\r\n  margin-left: 1.5rem !important; }\r\n\r\n.m-5 {\r\n  margin: 3rem !important; }\r\n\r\n.mt-5,\r\n.my-5 {\r\n  margin-top: 3rem !important; }\r\n\r\n.mr-5,\r\n.mx-5 {\r\n  margin-right: 3rem !important; }\r\n\r\n.mb-5,\r\n.my-5 {\r\n  margin-bottom: 3rem !important; }\r\n\r\n.ml-5,\r\n.mx-5 {\r\n  margin-left: 3rem !important; }\r\n\r\n.p-0 {\r\n  padding: 0 !important; }\r\n\r\n.pt-0,\r\n.py-0 {\r\n  padding-top: 0 !important; }\r\n\r\n.pr-0,\r\n.px-0 {\r\n  padding-right: 0 !important; }\r\n\r\n.pb-0,\r\n.py-0 {\r\n  padding-bottom: 0 !important; }\r\n\r\n.pl-0,\r\n.px-0 {\r\n  padding-left: 0 !important; }\r\n\r\n.p-1 {\r\n  padding: 0.25rem !important; }\r\n\r\n.pt-1,\r\n.py-1 {\r\n  padding-top: 0.25rem !important; }\r\n\r\n.pr-1,\r\n.px-1 {\r\n  padding-right: 0.25rem !important; }\r\n\r\n.pb-1,\r\n.py-1 {\r\n  padding-bottom: 0.25rem !important; }\r\n\r\n.pl-1,\r\n.px-1 {\r\n  padding-left: 0.25rem !important; }\r\n\r\n.p-2 {\r\n  padding: 0.5rem !important; }\r\n\r\n.pt-2,\r\n.py-2 {\r\n  padding-top: 0.5rem !important; }\r\n\r\n.pr-2,\r\n.px-2 {\r\n  padding-right: 0.5rem !important; }\r\n\r\n.pb-2,\r\n.py-2 {\r\n  padding-bottom: 0.5rem !important; }\r\n\r\n.pl-2,\r\n.px-2 {\r\n  padding-left: 0.5rem !important; }\r\n\r\n.p-3 {\r\n  padding: 1rem !important; }\r\n\r\n.pt-3,\r\n.py-3 {\r\n  padding-top: 1rem !important; }\r\n\r\n.pr-3,\r\n.px-3 {\r\n  padding-right: 1rem !important; }\r\n\r\n.pb-3,\r\n.py-3 {\r\n  padding-bottom: 1rem !important; }\r\n\r\n.pl-3,\r\n.px-3 {\r\n  padding-left: 1rem !important; }\r\n\r\n.p-4 {\r\n  padding: 1.5rem !important; }\r\n\r\n.pt-4,\r\n.py-4 {\r\n  padding-top: 1.5rem !important; }\r\n\r\n.pr-4,\r\n.px-4 {\r\n  padding-right: 1.5rem !important; }\r\n\r\n.pb-4,\r\n.py-4 {\r\n  padding-bottom: 1.5rem !important; }\r\n\r\n.pl-4,\r\n.px-4 {\r\n  padding-left: 1.5rem !important; }\r\n\r\n.p-5 {\r\n  padding: 3rem !important; }\r\n\r\n.pt-5,\r\n.py-5 {\r\n  padding-top: 3rem !important; }\r\n\r\n.pr-5,\r\n.px-5 {\r\n  padding-right: 3rem !important; }\r\n\r\n.pb-5,\r\n.py-5 {\r\n  padding-bottom: 3rem !important; }\r\n\r\n.pl-5,\r\n.px-5 {\r\n  padding-left: 3rem !important; }\r\n\r\n.m-auto {\r\n  margin: auto !important; }\r\n\r\n.mt-auto,\r\n.my-auto {\r\n  margin-top: auto !important; }\r\n\r\n.mr-auto,\r\n.mx-auto {\r\n  margin-right: auto !important; }\r\n\r\n.mb-auto,\r\n.my-auto {\r\n  margin-bottom: auto !important; }\r\n\r\n.ml-auto,\r\n.mx-auto {\r\n  margin-left: auto !important; }\r\n\r\n@media (min-width: 576px) {\r\n  .m-sm-0 {\r\n    margin: 0 !important; }\r\n\r\n  .mt-sm-0,\r\n  .my-sm-0 {\r\n    margin-top: 0 !important; }\r\n\r\n  .mr-sm-0,\r\n  .mx-sm-0 {\r\n    margin-right: 0 !important; }\r\n\r\n  .mb-sm-0,\r\n  .my-sm-0 {\r\n    margin-bottom: 0 !important; }\r\n\r\n  .ml-sm-0,\r\n  .mx-sm-0 {\r\n    margin-left: 0 !important; }\r\n\r\n  .m-sm-1 {\r\n    margin: 0.25rem !important; }\r\n\r\n  .mt-sm-1,\r\n  .my-sm-1 {\r\n    margin-top: 0.25rem !important; }\r\n\r\n  .mr-sm-1,\r\n  .mx-sm-1 {\r\n    margin-right: 0.25rem !important; }\r\n\r\n  .mb-sm-1,\r\n  .my-sm-1 {\r\n    margin-bottom: 0.25rem !important; }\r\n\r\n  .ml-sm-1,\r\n  .mx-sm-1 {\r\n    margin-left: 0.25rem !important; }\r\n\r\n  .m-sm-2 {\r\n    margin: 0.5rem !important; }\r\n\r\n  .mt-sm-2,\r\n  .my-sm-2 {\r\n    margin-top: 0.5rem !important; }\r\n\r\n  .mr-sm-2,\r\n  .mx-sm-2 {\r\n    margin-right: 0.5rem !important; }\r\n\r\n  .mb-sm-2,\r\n  .my-sm-2 {\r\n    margin-bottom: 0.5rem !important; }\r\n\r\n  .ml-sm-2,\r\n  .mx-sm-2 {\r\n    margin-left: 0.5rem !important; }\r\n\r\n  .m-sm-3 {\r\n    margin: 1rem !important; }\r\n\r\n  .mt-sm-3,\r\n  .my-sm-3 {\r\n    margin-top: 1rem !important; }\r\n\r\n  .mr-sm-3,\r\n  .mx-sm-3 {\r\n    margin-right: 1rem !important; }\r\n\r\n  .mb-sm-3,\r\n  .my-sm-3 {\r\n    margin-bottom: 1rem !important; }\r\n\r\n  .ml-sm-3,\r\n  .mx-sm-3 {\r\n    margin-left: 1rem !important; }\r\n\r\n  .m-sm-4 {\r\n    margin: 1.5rem !important; }\r\n\r\n  .mt-sm-4,\r\n  .my-sm-4 {\r\n    margin-top: 1.5rem !important; }\r\n\r\n  .mr-sm-4,\r\n  .mx-sm-4 {\r\n    margin-right: 1.5rem !important; }\r\n\r\n  .mb-sm-4,\r\n  .my-sm-4 {\r\n    margin-bottom: 1.5rem !important; }\r\n\r\n  .ml-sm-4,\r\n  .mx-sm-4 {\r\n    margin-left: 1.5rem !important; }\r\n\r\n  .m-sm-5 {\r\n    margin: 3rem !important; }\r\n\r\n  .mt-sm-5,\r\n  .my-sm-5 {\r\n    margin-top: 3rem !important; }\r\n\r\n  .mr-sm-5,\r\n  .mx-sm-5 {\r\n    margin-right: 3rem !important; }\r\n\r\n  .mb-sm-5,\r\n  .my-sm-5 {\r\n    margin-bottom: 3rem !important; }\r\n\r\n  .ml-sm-5,\r\n  .mx-sm-5 {\r\n    margin-left: 3rem !important; }\r\n\r\n  .p-sm-0 {\r\n    padding: 0 !important; }\r\n\r\n  .pt-sm-0,\r\n  .py-sm-0 {\r\n    padding-top: 0 !important; }\r\n\r\n  .pr-sm-0,\r\n  .px-sm-0 {\r\n    padding-right: 0 !important; }\r\n\r\n  .pb-sm-0,\r\n  .py-sm-0 {\r\n    padding-bottom: 0 !important; }\r\n\r\n  .pl-sm-0,\r\n  .px-sm-0 {\r\n    padding-left: 0 !important; }\r\n\r\n  .p-sm-1 {\r\n    padding: 0.25rem !important; }\r\n\r\n  .pt-sm-1,\r\n  .py-sm-1 {\r\n    padding-top: 0.25rem !important; }\r\n\r\n  .pr-sm-1,\r\n  .px-sm-1 {\r\n    padding-right: 0.25rem !important; }\r\n\r\n  .pb-sm-1,\r\n  .py-sm-1 {\r\n    padding-bottom: 0.25rem !important; }\r\n\r\n  .pl-sm-1,\r\n  .px-sm-1 {\r\n    padding-left: 0.25rem !important; }\r\n\r\n  .p-sm-2 {\r\n    padding: 0.5rem !important; }\r\n\r\n  .pt-sm-2,\r\n  .py-sm-2 {\r\n    padding-top: 0.5rem !important; }\r\n\r\n  .pr-sm-2,\r\n  .px-sm-2 {\r\n    padding-right: 0.5rem !important; }\r\n\r\n  .pb-sm-2,\r\n  .py-sm-2 {\r\n    padding-bottom: 0.5rem !important; }\r\n\r\n  .pl-sm-2,\r\n  .px-sm-2 {\r\n    padding-left: 0.5rem !important; }\r\n\r\n  .p-sm-3 {\r\n    padding: 1rem !important; }\r\n\r\n  .pt-sm-3,\r\n  .py-sm-3 {\r\n    padding-top: 1rem !important; }\r\n\r\n  .pr-sm-3,\r\n  .px-sm-3 {\r\n    padding-right: 1rem !important; }\r\n\r\n  .pb-sm-3,\r\n  .py-sm-3 {\r\n    padding-bottom: 1rem !important; }\r\n\r\n  .pl-sm-3,\r\n  .px-sm-3 {\r\n    padding-left: 1rem !important; }\r\n\r\n  .p-sm-4 {\r\n    padding: 1.5rem !important; }\r\n\r\n  .pt-sm-4,\r\n  .py-sm-4 {\r\n    padding-top: 1.5rem !important; }\r\n\r\n  .pr-sm-4,\r\n  .px-sm-4 {\r\n    padding-right: 1.5rem !important; }\r\n\r\n  .pb-sm-4,\r\n  .py-sm-4 {\r\n    padding-bottom: 1.5rem !important; }\r\n\r\n  .pl-sm-4,\r\n  .px-sm-4 {\r\n    padding-left: 1.5rem !important; }\r\n\r\n  .p-sm-5 {\r\n    padding: 3rem !important; }\r\n\r\n  .pt-sm-5,\r\n  .py-sm-5 {\r\n    padding-top: 3rem !important; }\r\n\r\n  .pr-sm-5,\r\n  .px-sm-5 {\r\n    padding-right: 3rem !important; }\r\n\r\n  .pb-sm-5,\r\n  .py-sm-5 {\r\n    padding-bottom: 3rem !important; }\r\n\r\n  .pl-sm-5,\r\n  .px-sm-5 {\r\n    padding-left: 3rem !important; }\r\n\r\n  .m-sm-auto {\r\n    margin: auto !important; }\r\n\r\n  .mt-sm-auto,\r\n  .my-sm-auto {\r\n    margin-top: auto !important; }\r\n\r\n  .mr-sm-auto,\r\n  .mx-sm-auto {\r\n    margin-right: auto !important; }\r\n\r\n  .mb-sm-auto,\r\n  .my-sm-auto {\r\n    margin-bottom: auto !important; }\r\n\r\n  .ml-sm-auto,\r\n  .mx-sm-auto {\r\n    margin-left: auto !important; } }\r\n@media (min-width: 768px) {\r\n  .m-md-0 {\r\n    margin: 0 !important; }\r\n\r\n  .mt-md-0,\r\n  .my-md-0 {\r\n    margin-top: 0 !important; }\r\n\r\n  .mr-md-0,\r\n  .mx-md-0 {\r\n    margin-right: 0 !important; }\r\n\r\n  .mb-md-0,\r\n  .my-md-0 {\r\n    margin-bottom: 0 !important; }\r\n\r\n  .ml-md-0,\r\n  .mx-md-0 {\r\n    margin-left: 0 !important; }\r\n\r\n  .m-md-1 {\r\n    margin: 0.25rem !important; }\r\n\r\n  .mt-md-1,\r\n  .my-md-1 {\r\n    margin-top: 0.25rem !important; }\r\n\r\n  .mr-md-1,\r\n  .mx-md-1 {\r\n    margin-right: 0.25rem !important; }\r\n\r\n  .mb-md-1,\r\n  .my-md-1 {\r\n    margin-bottom: 0.25rem !important; }\r\n\r\n  .ml-md-1,\r\n  .mx-md-1 {\r\n    margin-left: 0.25rem !important; }\r\n\r\n  .m-md-2 {\r\n    margin: 0.5rem !important; }\r\n\r\n  .mt-md-2,\r\n  .my-md-2 {\r\n    margin-top: 0.5rem !important; }\r\n\r\n  .mr-md-2,\r\n  .mx-md-2 {\r\n    margin-right: 0.5rem !important; }\r\n\r\n  .mb-md-2,\r\n  .my-md-2 {\r\n    margin-bottom: 0.5rem !important; }\r\n\r\n  .ml-md-2,\r\n  .mx-md-2 {\r\n    margin-left: 0.5rem !important; }\r\n\r\n  .m-md-3 {\r\n    margin: 1rem !important; }\r\n\r\n  .mt-md-3,\r\n  .my-md-3 {\r\n    margin-top: 1rem !important; }\r\n\r\n  .mr-md-3,\r\n  .mx-md-3 {\r\n    margin-right: 1rem !important; }\r\n\r\n  .mb-md-3,\r\n  .my-md-3 {\r\n    margin-bottom: 1rem !important; }\r\n\r\n  .ml-md-3,\r\n  .mx-md-3 {\r\n    margin-left: 1rem !important; }\r\n\r\n  .m-md-4 {\r\n    margin: 1.5rem !important; }\r\n\r\n  .mt-md-4,\r\n  .my-md-4 {\r\n    margin-top: 1.5rem !important; }\r\n\r\n  .mr-md-4,\r\n  .mx-md-4 {\r\n    margin-right: 1.5rem !important; }\r\n\r\n  .mb-md-4,\r\n  .my-md-4 {\r\n    margin-bottom: 1.5rem !important; }\r\n\r\n  .ml-md-4,\r\n  .mx-md-4 {\r\n    margin-left: 1.5rem !important; }\r\n\r\n  .m-md-5 {\r\n    margin: 3rem !important; }\r\n\r\n  .mt-md-5,\r\n  .my-md-5 {\r\n    margin-top: 3rem !important; }\r\n\r\n  .mr-md-5,\r\n  .mx-md-5 {\r\n    margin-right: 3rem !important; }\r\n\r\n  .mb-md-5,\r\n  .my-md-5 {\r\n    margin-bottom: 3rem !important; }\r\n\r\n  .ml-md-5,\r\n  .mx-md-5 {\r\n    margin-left: 3rem !important; }\r\n\r\n  .p-md-0 {\r\n    padding: 0 !important; }\r\n\r\n  .pt-md-0,\r\n  .py-md-0 {\r\n    padding-top: 0 !important; }\r\n\r\n  .pr-md-0,\r\n  .px-md-0 {\r\n    padding-right: 0 !important; }\r\n\r\n  .pb-md-0,\r\n  .py-md-0 {\r\n    padding-bottom: 0 !important; }\r\n\r\n  .pl-md-0,\r\n  .px-md-0 {\r\n    padding-left: 0 !important; }\r\n\r\n  .p-md-1 {\r\n    padding: 0.25rem !important; }\r\n\r\n  .pt-md-1,\r\n  .py-md-1 {\r\n    padding-top: 0.25rem !important; }\r\n\r\n  .pr-md-1,\r\n  .px-md-1 {\r\n    padding-right: 0.25rem !important; }\r\n\r\n  .pb-md-1,\r\n  .py-md-1 {\r\n    padding-bottom: 0.25rem !important; }\r\n\r\n  .pl-md-1,\r\n  .px-md-1 {\r\n    padding-left: 0.25rem !important; }\r\n\r\n  .p-md-2 {\r\n    padding: 0.5rem !important; }\r\n\r\n  .pt-md-2,\r\n  .py-md-2 {\r\n    padding-top: 0.5rem !important; }\r\n\r\n  .pr-md-2,\r\n  .px-md-2 {\r\n    padding-right: 0.5rem !important; }\r\n\r\n  .pb-md-2,\r\n  .py-md-2 {\r\n    padding-bottom: 0.5rem !important; }\r\n\r\n  .pl-md-2,\r\n  .px-md-2 {\r\n    padding-left: 0.5rem !important; }\r\n\r\n  .p-md-3 {\r\n    padding: 1rem !important; }\r\n\r\n  .pt-md-3,\r\n  .py-md-3 {\r\n    padding-top: 1rem !important; }\r\n\r\n  .pr-md-3,\r\n  .px-md-3 {\r\n    padding-right: 1rem !important; }\r\n\r\n  .pb-md-3,\r\n  .py-md-3 {\r\n    padding-bottom: 1rem !important; }\r\n\r\n  .pl-md-3,\r\n  .px-md-3 {\r\n    padding-left: 1rem !important; }\r\n\r\n  .p-md-4 {\r\n    padding: 1.5rem !important; }\r\n\r\n  .pt-md-4,\r\n  .py-md-4 {\r\n    padding-top: 1.5rem !important; }\r\n\r\n  .pr-md-4,\r\n  .px-md-4 {\r\n    padding-right: 1.5rem !important; }\r\n\r\n  .pb-md-4,\r\n  .py-md-4 {\r\n    padding-bottom: 1.5rem !important; }\r\n\r\n  .pl-md-4,\r\n  .px-md-4 {\r\n    padding-left: 1.5rem !important; }\r\n\r\n  .p-md-5 {\r\n    padding: 3rem !important; }\r\n\r\n  .pt-md-5,\r\n  .py-md-5 {\r\n    padding-top: 3rem !important; }\r\n\r\n  .pr-md-5,\r\n  .px-md-5 {\r\n    padding-right: 3rem !important; }\r\n\r\n  .pb-md-5,\r\n  .py-md-5 {\r\n    padding-bottom: 3rem !important; }\r\n\r\n  .pl-md-5,\r\n  .px-md-5 {\r\n    padding-left: 3rem !important; }\r\n\r\n  .m-md-auto {\r\n    margin: auto !important; }\r\n\r\n  .mt-md-auto,\r\n  .my-md-auto {\r\n    margin-top: auto !important; }\r\n\r\n  .mr-md-auto,\r\n  .mx-md-auto {\r\n    margin-right: auto !important; }\r\n\r\n  .mb-md-auto,\r\n  .my-md-auto {\r\n    margin-bottom: auto !important; }\r\n\r\n  .ml-md-auto,\r\n  .mx-md-auto {\r\n    margin-left: auto !important; } }\r\n@media (min-width: 992px) {\r\n  .m-lg-0 {\r\n    margin: 0 !important; }\r\n\r\n  .mt-lg-0,\r\n  .my-lg-0 {\r\n    margin-top: 0 !important; }\r\n\r\n  .mr-lg-0,\r\n  .mx-lg-0 {\r\n    margin-right: 0 !important; }\r\n\r\n  .mb-lg-0,\r\n  .my-lg-0 {\r\n    margin-bottom: 0 !important; }\r\n\r\n  .ml-lg-0,\r\n  .mx-lg-0 {\r\n    margin-left: 0 !important; }\r\n\r\n  .m-lg-1 {\r\n    margin: 0.25rem !important; }\r\n\r\n  .mt-lg-1,\r\n  .my-lg-1 {\r\n    margin-top: 0.25rem !important; }\r\n\r\n  .mr-lg-1,\r\n  .mx-lg-1 {\r\n    margin-right: 0.25rem !important; }\r\n\r\n  .mb-lg-1,\r\n  .my-lg-1 {\r\n    margin-bottom: 0.25rem !important; }\r\n\r\n  .ml-lg-1,\r\n  .mx-lg-1 {\r\n    margin-left: 0.25rem !important; }\r\n\r\n  .m-lg-2 {\r\n    margin: 0.5rem !important; }\r\n\r\n  .mt-lg-2,\r\n  .my-lg-2 {\r\n    margin-top: 0.5rem !important; }\r\n\r\n  .mr-lg-2,\r\n  .mx-lg-2 {\r\n    margin-right: 0.5rem !important; }\r\n\r\n  .mb-lg-2,\r\n  .my-lg-2 {\r\n    margin-bottom: 0.5rem !important; }\r\n\r\n  .ml-lg-2,\r\n  .mx-lg-2 {\r\n    margin-left: 0.5rem !important; }\r\n\r\n  .m-lg-3 {\r\n    margin: 1rem !important; }\r\n\r\n  .mt-lg-3,\r\n  .my-lg-3 {\r\n    margin-top: 1rem !important; }\r\n\r\n  .mr-lg-3,\r\n  .mx-lg-3 {\r\n    margin-right: 1rem !important; }\r\n\r\n  .mb-lg-3,\r\n  .my-lg-3 {\r\n    margin-bottom: 1rem !important; }\r\n\r\n  .ml-lg-3,\r\n  .mx-lg-3 {\r\n    margin-left: 1rem !important; }\r\n\r\n  .m-lg-4 {\r\n    margin: 1.5rem !important; }\r\n\r\n  .mt-lg-4,\r\n  .my-lg-4 {\r\n    margin-top: 1.5rem !important; }\r\n\r\n  .mr-lg-4,\r\n  .mx-lg-4 {\r\n    margin-right: 1.5rem !important; }\r\n\r\n  .mb-lg-4,\r\n  .my-lg-4 {\r\n    margin-bottom: 1.5rem !important; }\r\n\r\n  .ml-lg-4,\r\n  .mx-lg-4 {\r\n    margin-left: 1.5rem !important; }\r\n\r\n  .m-lg-5 {\r\n    margin: 3rem !important; }\r\n\r\n  .mt-lg-5,\r\n  .my-lg-5 {\r\n    margin-top: 3rem !important; }\r\n\r\n  .mr-lg-5,\r\n  .mx-lg-5 {\r\n    margin-right: 3rem !important; }\r\n\r\n  .mb-lg-5,\r\n  .my-lg-5 {\r\n    margin-bottom: 3rem !important; }\r\n\r\n  .ml-lg-5,\r\n  .mx-lg-5 {\r\n    margin-left: 3rem !important; }\r\n\r\n  .p-lg-0 {\r\n    padding: 0 !important; }\r\n\r\n  .pt-lg-0,\r\n  .py-lg-0 {\r\n    padding-top: 0 !important; }\r\n\r\n  .pr-lg-0,\r\n  .px-lg-0 {\r\n    padding-right: 0 !important; }\r\n\r\n  .pb-lg-0,\r\n  .py-lg-0 {\r\n    padding-bottom: 0 !important; }\r\n\r\n  .pl-lg-0,\r\n  .px-lg-0 {\r\n    padding-left: 0 !important; }\r\n\r\n  .p-lg-1 {\r\n    padding: 0.25rem !important; }\r\n\r\n  .pt-lg-1,\r\n  .py-lg-1 {\r\n    padding-top: 0.25rem !important; }\r\n\r\n  .pr-lg-1,\r\n  .px-lg-1 {\r\n    padding-right: 0.25rem !important; }\r\n\r\n  .pb-lg-1,\r\n  .py-lg-1 {\r\n    padding-bottom: 0.25rem !important; }\r\n\r\n  .pl-lg-1,\r\n  .px-lg-1 {\r\n    padding-left: 0.25rem !important; }\r\n\r\n  .p-lg-2 {\r\n    padding: 0.5rem !important; }\r\n\r\n  .pt-lg-2,\r\n  .py-lg-2 {\r\n    padding-top: 0.5rem !important; }\r\n\r\n  .pr-lg-2,\r\n  .px-lg-2 {\r\n    padding-right: 0.5rem !important; }\r\n\r\n  .pb-lg-2,\r\n  .py-lg-2 {\r\n    padding-bottom: 0.5rem !important; }\r\n\r\n  .pl-lg-2,\r\n  .px-lg-2 {\r\n    padding-left: 0.5rem !important; }\r\n\r\n  .p-lg-3 {\r\n    padding: 1rem !important; }\r\n\r\n  .pt-lg-3,\r\n  .py-lg-3 {\r\n    padding-top: 1rem !important; }\r\n\r\n  .pr-lg-3,\r\n  .px-lg-3 {\r\n    padding-right: 1rem !important; }\r\n\r\n  .pb-lg-3,\r\n  .py-lg-3 {\r\n    padding-bottom: 1rem !important; }\r\n\r\n  .pl-lg-3,\r\n  .px-lg-3 {\r\n    padding-left: 1rem !important; }\r\n\r\n  .p-lg-4 {\r\n    padding: 1.5rem !important; }\r\n\r\n  .pt-lg-4,\r\n  .py-lg-4 {\r\n    padding-top: 1.5rem !important; }\r\n\r\n  .pr-lg-4,\r\n  .px-lg-4 {\r\n    padding-right: 1.5rem !important; }\r\n\r\n  .pb-lg-4,\r\n  .py-lg-4 {\r\n    padding-bottom: 1.5rem !important; }\r\n\r\n  .pl-lg-4,\r\n  .px-lg-4 {\r\n    padding-left: 1.5rem !important; }\r\n\r\n  .p-lg-5 {\r\n    padding: 3rem !important; }\r\n\r\n  .pt-lg-5,\r\n  .py-lg-5 {\r\n    padding-top: 3rem !important; }\r\n\r\n  .pr-lg-5,\r\n  .px-lg-5 {\r\n    padding-right: 3rem !important; }\r\n\r\n  .pb-lg-5,\r\n  .py-lg-5 {\r\n    padding-bottom: 3rem !important; }\r\n\r\n  .pl-lg-5,\r\n  .px-lg-5 {\r\n    padding-left: 3rem !important; }\r\n\r\n  .m-lg-auto {\r\n    margin: auto !important; }\r\n\r\n  .mt-lg-auto,\r\n  .my-lg-auto {\r\n    margin-top: auto !important; }\r\n\r\n  .mr-lg-auto,\r\n  .mx-lg-auto {\r\n    margin-right: auto !important; }\r\n\r\n  .mb-lg-auto,\r\n  .my-lg-auto {\r\n    margin-bottom: auto !important; }\r\n\r\n  .ml-lg-auto,\r\n  .mx-lg-auto {\r\n    margin-left: auto !important; } }\r\n@media (min-width: 1200px) {\r\n  .m-xl-0 {\r\n    margin: 0 !important; }\r\n\r\n  .mt-xl-0,\r\n  .my-xl-0 {\r\n    margin-top: 0 !important; }\r\n\r\n  .mr-xl-0,\r\n  .mx-xl-0 {\r\n    margin-right: 0 !important; }\r\n\r\n  .mb-xl-0,\r\n  .my-xl-0 {\r\n    margin-bottom: 0 !important; }\r\n\r\n  .ml-xl-0,\r\n  .mx-xl-0 {\r\n    margin-left: 0 !important; }\r\n\r\n  .m-xl-1 {\r\n    margin: 0.25rem !important; }\r\n\r\n  .mt-xl-1,\r\n  .my-xl-1 {\r\n    margin-top: 0.25rem !important; }\r\n\r\n  .mr-xl-1,\r\n  .mx-xl-1 {\r\n    margin-right: 0.25rem !important; }\r\n\r\n  .mb-xl-1,\r\n  .my-xl-1 {\r\n    margin-bottom: 0.25rem !important; }\r\n\r\n  .ml-xl-1,\r\n  .mx-xl-1 {\r\n    margin-left: 0.25rem !important; }\r\n\r\n  .m-xl-2 {\r\n    margin: 0.5rem !important; }\r\n\r\n  .mt-xl-2,\r\n  .my-xl-2 {\r\n    margin-top: 0.5rem !important; }\r\n\r\n  .mr-xl-2,\r\n  .mx-xl-2 {\r\n    margin-right: 0.5rem !important; }\r\n\r\n  .mb-xl-2,\r\n  .my-xl-2 {\r\n    margin-bottom: 0.5rem !important; }\r\n\r\n  .ml-xl-2,\r\n  .mx-xl-2 {\r\n    margin-left: 0.5rem !important; }\r\n\r\n  .m-xl-3 {\r\n    margin: 1rem !important; }\r\n\r\n  .mt-xl-3,\r\n  .my-xl-3 {\r\n    margin-top: 1rem !important; }\r\n\r\n  .mr-xl-3,\r\n  .mx-xl-3 {\r\n    margin-right: 1rem !important; }\r\n\r\n  .mb-xl-3,\r\n  .my-xl-3 {\r\n    margin-bottom: 1rem !important; }\r\n\r\n  .ml-xl-3,\r\n  .mx-xl-3 {\r\n    margin-left: 1rem !important; }\r\n\r\n  .m-xl-4 {\r\n    margin: 1.5rem !important; }\r\n\r\n  .mt-xl-4,\r\n  .my-xl-4 {\r\n    margin-top: 1.5rem !important; }\r\n\r\n  .mr-xl-4,\r\n  .mx-xl-4 {\r\n    margin-right: 1.5rem !important; }\r\n\r\n  .mb-xl-4,\r\n  .my-xl-4 {\r\n    margin-bottom: 1.5rem !important; }\r\n\r\n  .ml-xl-4,\r\n  .mx-xl-4 {\r\n    margin-left: 1.5rem !important; }\r\n\r\n  .m-xl-5 {\r\n    margin: 3rem !important; }\r\n\r\n  .mt-xl-5,\r\n  .my-xl-5 {\r\n    margin-top: 3rem !important; }\r\n\r\n  .mr-xl-5,\r\n  .mx-xl-5 {\r\n    margin-right: 3rem !important; }\r\n\r\n  .mb-xl-5,\r\n  .my-xl-5 {\r\n    margin-bottom: 3rem !important; }\r\n\r\n  .ml-xl-5,\r\n  .mx-xl-5 {\r\n    margin-left: 3rem !important; }\r\n\r\n  .p-xl-0 {\r\n    padding: 0 !important; }\r\n\r\n  .pt-xl-0,\r\n  .py-xl-0 {\r\n    padding-top: 0 !important; }\r\n\r\n  .pr-xl-0,\r\n  .px-xl-0 {\r\n    padding-right: 0 !important; }\r\n\r\n  .pb-xl-0,\r\n  .py-xl-0 {\r\n    padding-bottom: 0 !important; }\r\n\r\n  .pl-xl-0,\r\n  .px-xl-0 {\r\n    padding-left: 0 !important; }\r\n\r\n  .p-xl-1 {\r\n    padding: 0.25rem !important; }\r\n\r\n  .pt-xl-1,\r\n  .py-xl-1 {\r\n    padding-top: 0.25rem !important; }\r\n\r\n  .pr-xl-1,\r\n  .px-xl-1 {\r\n    padding-right: 0.25rem !important; }\r\n\r\n  .pb-xl-1,\r\n  .py-xl-1 {\r\n    padding-bottom: 0.25rem !important; }\r\n\r\n  .pl-xl-1,\r\n  .px-xl-1 {\r\n    padding-left: 0.25rem !important; }\r\n\r\n  .p-xl-2 {\r\n    padding: 0.5rem !important; }\r\n\r\n  .pt-xl-2,\r\n  .py-xl-2 {\r\n    padding-top: 0.5rem !important; }\r\n\r\n  .pr-xl-2,\r\n  .px-xl-2 {\r\n    padding-right: 0.5rem !important; }\r\n\r\n  .pb-xl-2,\r\n  .py-xl-2 {\r\n    padding-bottom: 0.5rem !important; }\r\n\r\n  .pl-xl-2,\r\n  .px-xl-2 {\r\n    padding-left: 0.5rem !important; }\r\n\r\n  .p-xl-3 {\r\n    padding: 1rem !important; }\r\n\r\n  .pt-xl-3,\r\n  .py-xl-3 {\r\n    padding-top: 1rem !important; }\r\n\r\n  .pr-xl-3,\r\n  .px-xl-3 {\r\n    padding-right: 1rem !important; }\r\n\r\n  .pb-xl-3,\r\n  .py-xl-3 {\r\n    padding-bottom: 1rem !important; }\r\n\r\n  .pl-xl-3,\r\n  .px-xl-3 {\r\n    padding-left: 1rem !important; }\r\n\r\n  .p-xl-4 {\r\n    padding: 1.5rem !important; }\r\n\r\n  .pt-xl-4,\r\n  .py-xl-4 {\r\n    padding-top: 1.5rem !important; }\r\n\r\n  .pr-xl-4,\r\n  .px-xl-4 {\r\n    padding-right: 1.5rem !important; }\r\n\r\n  .pb-xl-4,\r\n  .py-xl-4 {\r\n    padding-bottom: 1.5rem !important; }\r\n\r\n  .pl-xl-4,\r\n  .px-xl-4 {\r\n    padding-left: 1.5rem !important; }\r\n\r\n  .p-xl-5 {\r\n    padding: 3rem !important; }\r\n\r\n  .pt-xl-5,\r\n  .py-xl-5 {\r\n    padding-top: 3rem !important; }\r\n\r\n  .pr-xl-5,\r\n  .px-xl-5 {\r\n    padding-right: 3rem !important; }\r\n\r\n  .pb-xl-5,\r\n  .py-xl-5 {\r\n    padding-bottom: 3rem !important; }\r\n\r\n  .pl-xl-5,\r\n  .px-xl-5 {\r\n    padding-left: 3rem !important; }\r\n\r\n  .m-xl-auto {\r\n    margin: auto !important; }\r\n\r\n  .mt-xl-auto,\r\n  .my-xl-auto {\r\n    margin-top: auto !important; }\r\n\r\n  .mr-xl-auto,\r\n  .mx-xl-auto {\r\n    margin-right: auto !important; }\r\n\r\n  .mb-xl-auto,\r\n  .my-xl-auto {\r\n    margin-bottom: auto !important; }\r\n\r\n  .ml-xl-auto,\r\n  .mx-xl-auto {\r\n    margin-left: auto !important; } }\r\n.text-justify {\r\n  text-align: justify !important; }\r\n\r\n.text-nowrap {\r\n  white-space: nowrap !important; }\r\n\r\n.text-truncate {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap; }\r\n\r\n.text-left {\r\n  text-align: left !important; }\r\n\r\n.text-right {\r\n  text-align: right !important; }\r\n\r\n.text-center {\r\n  text-align: center !important; }\r\n\r\n@media (min-width: 576px) {\r\n  .text-sm-left {\r\n    text-align: left !important; }\r\n\r\n  .text-sm-right {\r\n    text-align: right !important; }\r\n\r\n  .text-sm-center {\r\n    text-align: center !important; } }\r\n@media (min-width: 768px) {\r\n  .text-md-left {\r\n    text-align: left !important; }\r\n\r\n  .text-md-right {\r\n    text-align: right !important; }\r\n\r\n  .text-md-center {\r\n    text-align: center !important; } }\r\n@media (min-width: 992px) {\r\n  .text-lg-left {\r\n    text-align: left !important; }\r\n\r\n  .text-lg-right {\r\n    text-align: right !important; }\r\n\r\n  .text-lg-center {\r\n    text-align: center !important; } }\r\n@media (min-width: 1200px) {\r\n  .text-xl-left {\r\n    text-align: left !important; }\r\n\r\n  .text-xl-right {\r\n    text-align: right !important; }\r\n\r\n  .text-xl-center {\r\n    text-align: center !important; } }\r\n.text-lowercase {\r\n  text-transform: lowercase !important; }\r\n\r\n.text-uppercase {\r\n  text-transform: uppercase !important; }\r\n\r\n.text-capitalize {\r\n  text-transform: capitalize !important; }\r\n\r\n.font-weight-light {\r\n  font-weight: 300 !important; }\r\n\r\n.font-weight-normal {\r\n  font-weight: 400 !important; }\r\n\r\n.font-weight-bold {\r\n  font-weight: 700 !important; }\r\n\r\n.font-italic {\r\n  font-style: italic !important; }\r\n\r\n.text-white {\r\n  color: #fff !important; }\r\n\r\n.text-primary {\r\n  color: #007bff !important; }\r\n\r\na.text-primary:focus, a.text-primary:hover {\r\n  color: #0062cc !important; }\r\n\r\n.text-secondary {\r\n  color: #868e96 !important; }\r\n\r\na.text-secondary:focus, a.text-secondary:hover {\r\n  color: #6c757d !important; }\r\n\r\n.text-success {\r\n  color: #28a745 !important; }\r\n\r\na.text-success:focus, a.text-success:hover {\r\n  color: #1e7e34 !important; }\r\n\r\n.text-info {\r\n  color: #17a2b8 !important; }\r\n\r\na.text-info:focus, a.text-info:hover {\r\n  color: #117a8b !important; }\r\n\r\n.text-warning {\r\n  color: #ffc107 !important; }\r\n\r\na.text-warning:focus, a.text-warning:hover {\r\n  color: #d39e00 !important; }\r\n\r\n.text-danger {\r\n  color: #dc3545 !important; }\r\n\r\na.text-danger:focus, a.text-danger:hover {\r\n  color: #bd2130 !important; }\r\n\r\n.text-light {\r\n  color: #f8f9fa !important; }\r\n\r\na.text-light:focus, a.text-light:hover {\r\n  color: #dae0e5 !important; }\r\n\r\n.text-dark {\r\n  color: #343a40 !important; }\r\n\r\na.text-dark:focus, a.text-dark:hover {\r\n  color: #1d2124 !important; }\r\n\r\n.text-muted {\r\n  color: #868e96 !important; }\r\n\r\n.text-hide {\r\n  font: 0/0 a;\r\n  color: transparent;\r\n  text-shadow: none;\r\n  background-color: transparent;\r\n  border: 0; }\r\n\r\n.visible {\r\n  visibility: visible !important; }\r\n\r\n.invisible {\r\n  visibility: hidden !important; }\r\n\r\n/***\r\n#F2C100\r\n#FB493A\r\n#1C0203\r\n#E08955\r\n**/\r\nbody {\r\n  font-size: 16px;\r\n  color: #000; }\r\n\r\n* {\r\n  -webkit-transition: all 0.3s ease;\r\n  transition: all 0.3s ease; }\r\n\r\nsection {\r\n  margin-bottom: 2.5rem; }\r\n\r\na {\r\n  color: #FB493A; }\r\n  a:hover, a:focus {\r\n    color: #fed4d0; }\r\n\r\n.form-control:focus {\r\n  border-color: #f4bb3a; }\r\n\r\n.container,\r\n.mid-column {\r\n  padding-left: 25px;\r\n  padding-right: 25px; }\r\n\r\n.mid-column {\r\n  max-width: 740px;\r\n  margin: 0 auto; }\r\n\r\n@media (min-width: 768px) {\r\n  .container,\r\n  .mid-column {\r\n    padding-right: 15px;\r\n    padding-left: 15px; } }\r\nheader > .container {\r\n  padding-top: 15px;\r\n  padding-bottom: 15px; }\r\n\r\n.navbar {\r\n  background-color: #2f3135; }\r\n  .navbar a {\r\n    color: #fff; }\r\n    .navbar a:hover, .navbar a:focus {\r\n      color: #f4bb3a; }\r\n\r\nfooter {\r\n  background-color: #2f3135;\r\n  padding: 40px 0;\r\n  color: #999999; }\r\n  footer span {\r\n    display: block;\r\n    margin: 0 5px;\r\n    text-align: center; }\r\n  footer a {\r\n    margin-left: 20px;\r\n    color: #777777; }\r\n    footer a:hover, footer a:focus {\r\n      color: gray; }\r\n\r\n/***** home page****/\r\n.banner {\r\n  padding: 80px 0;\r\n  background-color: #f5f5f5;\r\n  background-image: url(/images/banner.jpg);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center; }\r\n  .banner input[type=text]:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0 10px 40px 0 rgba(0, 0, 0, 0.1); }\r\n\r\n@media (min-width: 768px) {\r\n  section {\r\n    margin-bottom: 4rem; }\r\n\r\n  footer {\r\n    padding: 60px 0; }\r\n\r\n  .banner {\r\n    min-height: 550px; } }\r\n',""])},function(r,n){function t(r,n){var t=r[1]||"",e=r[3];if(!e)return t;if(n&&"function"==typeof btoa){var o=function(r){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"}(e),i=e.sources.map(function(r){return"/*# sourceURL="+e.sourceRoot+r+" */"});return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}r.exports=function(r){var n=[];return n.toString=function(){return this.map(function(n){var e=t(n,r);return n[2]?"@media "+n[2]+"{"+e+"}":e}).join("")},n.i=function(r,t){"string"==typeof r&&(r=[[null,r,""]]);for(var e={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(e[i]=!0)}for(o=0;o<r.length;o++){var a=r[o];"number"==typeof a[0]&&e[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),n.push(a))}},n}},function(r,n,t){function e(r,n){for(var t=0;t<r.length;t++){var e=r[t],o=c[e.id];if(o){o.refs++;for(var i=0;i<o.parts.length;i++)o.parts[i](e.parts[i]);for(;i<e.parts.length;i++)o.parts.push(s(e.parts[i],n))}else{var a=[];for(i=0;i<e.parts.length;i++)a.push(s(e.parts[i],n));c[e.id]={id:e.id,refs:1,parts:a}}}}function o(r,n){for(var t=[],e={},o=0;o<r.length;o++){var i=r[o],a=n.base?i[0]+n.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};e[a]?e[a].parts.push(l):t.push(e[a]={id:a,parts:[l]})}return t}function i(r,n){var t=f(r.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var e=b[b.length-1];if("top"===r.insertAt)e?e.nextSibling?t.insertBefore(n,e.nextSibling):t.appendChild(n):t.insertBefore(n,t.firstChild),b.push(n);else if("bottom"===r.insertAt)t.appendChild(n);else{if("object"!=typeof r.insertAt||!r.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=f(r.insertInto+" "+r.insertAt.before);t.insertBefore(n,o)}}function a(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r);var n=b.indexOf(r);n>=0&&b.splice(n,1)}function l(r){var n=document.createElement("style");return r.attrs.type="text/css",d(n,r.attrs),i(r,n),n}function d(r,n){Object.keys(n).forEach(function(t){r.setAttribute(t,n[t])})}function s(r,n){var t,e,o,s;if(n.transform&&r.css){if(!(s=n.transform(r.css)))return function(){};r.css=s}if(n.singleton){var c=g++;t=u||(u=l(n)),e=p.bind(null,t,c,!1),o=p.bind(null,t,c,!0)}else r.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(r){var n=document.createElement("link");return r.attrs.type="text/css",r.attrs.rel="stylesheet",d(n,r.attrs),i(r,n),n}(n),e=function(r,n,t){var e=t.css,o=t.sourceMap,i=void 0===n.convertToAbsoluteUrls&&o;(n.convertToAbsoluteUrls||i)&&(e=h(e));o&&(e+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([e],{type:"text/css"}),l=r.href;r.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,t,n),o=function(){a(t),t.href&&URL.revokeObjectURL(t.href)}):(t=l(n),e=function(r,n){var t=n.css,e=n.media;e&&r.setAttribute("media",e);if(r.styleSheet)r.styleSheet.cssText=t;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(t))}}.bind(null,t),o=function(){a(t)});return e(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap)return;e(r=n)}else o()}}function p(r,n,t,e){var o=t?"":e.css;if(r.styleSheet)r.styleSheet.cssText=x(n,o);else{var i=document.createTextNode(o),a=r.childNodes;a[n]&&r.removeChild(a[n]),a.length?r.insertBefore(i,a[n]):r.appendChild(i)}}var c={},m=function(r){var n;return function(){return void 0===n&&(n=r.apply(this,arguments)),n}}(function(){return window&&document&&document.all&&!window.atob}),f=function(r){var n={};return function(r){if(void 0===n[r]){var t=function(r){return document.querySelector(r)}.call(this,r);if(t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(r){t=null}n[r]=t}return n[r]}}(),u=null,g=0,b=[],h=t(6);r.exports=function(r,n){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(n=n||{}).attrs="object"==typeof n.attrs?n.attrs:{},n.singleton||"boolean"==typeof n.singleton||(n.singleton=m()),n.insertInto||(n.insertInto="head"),n.insertAt||(n.insertAt="bottom");var t=o(r,n);return e(t,n),function(r){for(var i=[],a=0;a<t.length;a++){var l=t[a];(d=c[l.id]).refs--,i.push(d)}if(r){e(o(r,n),n)}for(a=0;a<i.length;a++){var d;if(0===(d=i[a]).refs){for(var s=0;s<d.parts.length;s++)d.parts[s]();delete c[d.id]}}}};var x=function(){var r=[];return function(n,t){return r[n]=t,r.filter(Boolean).join("\n")}}()},function(r,n){r.exports=function(r){var n="undefined"!=typeof window&&window.location;if(!n)throw new Error("fixUrls requires window.location");if(!r||"string"!=typeof r)return r;var t=n.protocol+"//"+n.host,e=t+n.pathname.replace(/\/[^\/]*$/,"/");return r.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(r,n){var o=n.trim().replace(/^"(.*)"$/,function(r,n){return n}).replace(/^'(.*)'$/,function(r,n){return n});if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(o))return r;var i;return i=0===o.indexOf("//")?o:0===o.indexOf("/")?t+o:e+o.replace(/^\.\//,""),"url("+JSON.stringify(i)+")"})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,